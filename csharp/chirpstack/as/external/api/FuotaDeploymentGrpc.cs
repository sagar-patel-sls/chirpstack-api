// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: as/external/api/fuotaDeployment.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981
#region Designer generated code

using grpc = global::Grpc.Core;

namespace chirpstack.as.external.api {
  /// <summary>
  /// FUOTADeploymentService is the service managing FUOTA deployments.
  /// </summary>
  public static partial class FUOTADeploymentService
  {
    static readonly string __ServiceName = "api.FUOTADeploymentService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::chirpstack.as.external.api.CreateFUOTADeploymentForDeviceRequest> __Marshaller_api_CreateFUOTADeploymentForDeviceRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::chirpstack.as.external.api.CreateFUOTADeploymentForDeviceRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::chirpstack.as.external.api.CreateFUOTADeploymentForDeviceResponse> __Marshaller_api_CreateFUOTADeploymentForDeviceResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::chirpstack.as.external.api.CreateFUOTADeploymentForDeviceResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::chirpstack.as.external.api.CreateFUOTADeploymentForApplicationRequest> __Marshaller_api_CreateFUOTADeploymentForApplicationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::chirpstack.as.external.api.CreateFUOTADeploymentForApplicationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::chirpstack.as.external.api.CreateFUOTADeploymentForApplicationResponse> __Marshaller_api_CreateFUOTADeploymentForApplicationResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::chirpstack.as.external.api.CreateFUOTADeploymentForApplicationResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::chirpstack.as.external.api.GetFUOTADeploymentRequest> __Marshaller_api_GetFUOTADeploymentRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::chirpstack.as.external.api.GetFUOTADeploymentRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::chirpstack.as.external.api.GetFUOTADeploymentResponse> __Marshaller_api_GetFUOTADeploymentResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::chirpstack.as.external.api.GetFUOTADeploymentResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::chirpstack.as.external.api.ListFUOTADeploymentRequest> __Marshaller_api_ListFUOTADeploymentRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::chirpstack.as.external.api.ListFUOTADeploymentRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::chirpstack.as.external.api.ListFUOTADeploymentResponse> __Marshaller_api_ListFUOTADeploymentResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::chirpstack.as.external.api.ListFUOTADeploymentResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::chirpstack.as.external.api.GetFUOTADeploymentDeviceRequest> __Marshaller_api_GetFUOTADeploymentDeviceRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::chirpstack.as.external.api.GetFUOTADeploymentDeviceRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::chirpstack.as.external.api.GetFUOTADeploymentDeviceResponse> __Marshaller_api_GetFUOTADeploymentDeviceResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::chirpstack.as.external.api.GetFUOTADeploymentDeviceResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::chirpstack.as.external.api.ListFUOTADeploymentDevicesRequest> __Marshaller_api_ListFUOTADeploymentDevicesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::chirpstack.as.external.api.ListFUOTADeploymentDevicesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::chirpstack.as.external.api.ListFUOTADeploymentDevicesResponse> __Marshaller_api_ListFUOTADeploymentDevicesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::chirpstack.as.external.api.ListFUOTADeploymentDevicesResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::chirpstack.as.external.api.CreateFUOTADeploymentForDeviceRequest, global::chirpstack.as.external.api.CreateFUOTADeploymentForDeviceResponse> __Method_CreateForDevice = new grpc::Method<global::chirpstack.as.external.api.CreateFUOTADeploymentForDeviceRequest, global::chirpstack.as.external.api.CreateFUOTADeploymentForDeviceResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateForDevice",
        __Marshaller_api_CreateFUOTADeploymentForDeviceRequest,
        __Marshaller_api_CreateFUOTADeploymentForDeviceResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::chirpstack.as.external.api.CreateFUOTADeploymentForApplicationRequest, global::chirpstack.as.external.api.CreateFUOTADeploymentForApplicationResponse> __Method_CreateForApplication = new grpc::Method<global::chirpstack.as.external.api.CreateFUOTADeploymentForApplicationRequest, global::chirpstack.as.external.api.CreateFUOTADeploymentForApplicationResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateForApplication",
        __Marshaller_api_CreateFUOTADeploymentForApplicationRequest,
        __Marshaller_api_CreateFUOTADeploymentForApplicationResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::chirpstack.as.external.api.GetFUOTADeploymentRequest, global::chirpstack.as.external.api.GetFUOTADeploymentResponse> __Method_Get = new grpc::Method<global::chirpstack.as.external.api.GetFUOTADeploymentRequest, global::chirpstack.as.external.api.GetFUOTADeploymentResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Get",
        __Marshaller_api_GetFUOTADeploymentRequest,
        __Marshaller_api_GetFUOTADeploymentResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::chirpstack.as.external.api.ListFUOTADeploymentRequest, global::chirpstack.as.external.api.ListFUOTADeploymentResponse> __Method_List = new grpc::Method<global::chirpstack.as.external.api.ListFUOTADeploymentRequest, global::chirpstack.as.external.api.ListFUOTADeploymentResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "List",
        __Marshaller_api_ListFUOTADeploymentRequest,
        __Marshaller_api_ListFUOTADeploymentResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::chirpstack.as.external.api.GetFUOTADeploymentDeviceRequest, global::chirpstack.as.external.api.GetFUOTADeploymentDeviceResponse> __Method_GetDeploymentDevice = new grpc::Method<global::chirpstack.as.external.api.GetFUOTADeploymentDeviceRequest, global::chirpstack.as.external.api.GetFUOTADeploymentDeviceResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetDeploymentDevice",
        __Marshaller_api_GetFUOTADeploymentDeviceRequest,
        __Marshaller_api_GetFUOTADeploymentDeviceResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::chirpstack.as.external.api.ListFUOTADeploymentDevicesRequest, global::chirpstack.as.external.api.ListFUOTADeploymentDevicesResponse> __Method_ListDeploymentDevices = new grpc::Method<global::chirpstack.as.external.api.ListFUOTADeploymentDevicesRequest, global::chirpstack.as.external.api.ListFUOTADeploymentDevicesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListDeploymentDevices",
        __Marshaller_api_ListFUOTADeploymentDevicesRequest,
        __Marshaller_api_ListFUOTADeploymentDevicesResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::chirpstack.as.external.api.FuotaDeploymentReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of FUOTADeploymentService</summary>
    [grpc::BindServiceMethod(typeof(FUOTADeploymentService), "BindService")]
    public abstract partial class FUOTADeploymentServiceBase
    {
      /// <summary>
      /// CreateForDevice creates a deployment for the given DevEUI.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::chirpstack.as.external.api.CreateFUOTADeploymentForDeviceResponse> CreateForDevice(global::chirpstack.as.external.api.CreateFUOTADeploymentForDeviceRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// CreateForApplication creates a deployment for the given Application.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::chirpstack.as.external.api.CreateFUOTADeploymentForApplicationResponse> CreateForApplication(global::chirpstack.as.external.api.CreateFUOTADeploymentForApplicationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get returns the fuota deployment for the given id.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::chirpstack.as.external.api.GetFUOTADeploymentResponse> Get(global::chirpstack.as.external.api.GetFUOTADeploymentRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// List lists the fuota deployments.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::chirpstack.as.external.api.ListFUOTADeploymentResponse> List(global::chirpstack.as.external.api.ListFUOTADeploymentRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// GetDeploymentDevice returns the deployment device.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::chirpstack.as.external.api.GetFUOTADeploymentDeviceResponse> GetDeploymentDevice(global::chirpstack.as.external.api.GetFUOTADeploymentDeviceRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// ListDeploymentDevices lists the devices (and status) for the given fuota deployment ID.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::chirpstack.as.external.api.ListFUOTADeploymentDevicesResponse> ListDeploymentDevices(global::chirpstack.as.external.api.ListFUOTADeploymentDevicesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for FUOTADeploymentService</summary>
    public partial class FUOTADeploymentServiceClient : grpc::ClientBase<FUOTADeploymentServiceClient>
    {
      /// <summary>Creates a new client for FUOTADeploymentService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public FUOTADeploymentServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for FUOTADeploymentService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public FUOTADeploymentServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected FUOTADeploymentServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected FUOTADeploymentServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// CreateForDevice creates a deployment for the given DevEUI.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::chirpstack.as.external.api.CreateFUOTADeploymentForDeviceResponse CreateForDevice(global::chirpstack.as.external.api.CreateFUOTADeploymentForDeviceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateForDevice(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// CreateForDevice creates a deployment for the given DevEUI.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::chirpstack.as.external.api.CreateFUOTADeploymentForDeviceResponse CreateForDevice(global::chirpstack.as.external.api.CreateFUOTADeploymentForDeviceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateForDevice, null, options, request);
      }
      /// <summary>
      /// CreateForDevice creates a deployment for the given DevEUI.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::chirpstack.as.external.api.CreateFUOTADeploymentForDeviceResponse> CreateForDeviceAsync(global::chirpstack.as.external.api.CreateFUOTADeploymentForDeviceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateForDeviceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// CreateForDevice creates a deployment for the given DevEUI.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::chirpstack.as.external.api.CreateFUOTADeploymentForDeviceResponse> CreateForDeviceAsync(global::chirpstack.as.external.api.CreateFUOTADeploymentForDeviceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateForDevice, null, options, request);
      }
      /// <summary>
      /// CreateForApplication creates a deployment for the given Application.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::chirpstack.as.external.api.CreateFUOTADeploymentForApplicationResponse CreateForApplication(global::chirpstack.as.external.api.CreateFUOTADeploymentForApplicationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateForApplication(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// CreateForApplication creates a deployment for the given Application.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::chirpstack.as.external.api.CreateFUOTADeploymentForApplicationResponse CreateForApplication(global::chirpstack.as.external.api.CreateFUOTADeploymentForApplicationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateForApplication, null, options, request);
      }
      /// <summary>
      /// CreateForApplication creates a deployment for the given Application.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::chirpstack.as.external.api.CreateFUOTADeploymentForApplicationResponse> CreateForApplicationAsync(global::chirpstack.as.external.api.CreateFUOTADeploymentForApplicationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateForApplicationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// CreateForApplication creates a deployment for the given Application.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::chirpstack.as.external.api.CreateFUOTADeploymentForApplicationResponse> CreateForApplicationAsync(global::chirpstack.as.external.api.CreateFUOTADeploymentForApplicationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateForApplication, null, options, request);
      }
      /// <summary>
      /// Get returns the fuota deployment for the given id.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::chirpstack.as.external.api.GetFUOTADeploymentResponse Get(global::chirpstack.as.external.api.GetFUOTADeploymentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Get(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get returns the fuota deployment for the given id.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::chirpstack.as.external.api.GetFUOTADeploymentResponse Get(global::chirpstack.as.external.api.GetFUOTADeploymentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Get, null, options, request);
      }
      /// <summary>
      /// Get returns the fuota deployment for the given id.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::chirpstack.as.external.api.GetFUOTADeploymentResponse> GetAsync(global::chirpstack.as.external.api.GetFUOTADeploymentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get returns the fuota deployment for the given id.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::chirpstack.as.external.api.GetFUOTADeploymentResponse> GetAsync(global::chirpstack.as.external.api.GetFUOTADeploymentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Get, null, options, request);
      }
      /// <summary>
      /// List lists the fuota deployments.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::chirpstack.as.external.api.ListFUOTADeploymentResponse List(global::chirpstack.as.external.api.ListFUOTADeploymentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return List(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List lists the fuota deployments.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::chirpstack.as.external.api.ListFUOTADeploymentResponse List(global::chirpstack.as.external.api.ListFUOTADeploymentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_List, null, options, request);
      }
      /// <summary>
      /// List lists the fuota deployments.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::chirpstack.as.external.api.ListFUOTADeploymentResponse> ListAsync(global::chirpstack.as.external.api.ListFUOTADeploymentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List lists the fuota deployments.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::chirpstack.as.external.api.ListFUOTADeploymentResponse> ListAsync(global::chirpstack.as.external.api.ListFUOTADeploymentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_List, null, options, request);
      }
      /// <summary>
      /// GetDeploymentDevice returns the deployment device.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::chirpstack.as.external.api.GetFUOTADeploymentDeviceResponse GetDeploymentDevice(global::chirpstack.as.external.api.GetFUOTADeploymentDeviceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDeploymentDevice(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// GetDeploymentDevice returns the deployment device.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::chirpstack.as.external.api.GetFUOTADeploymentDeviceResponse GetDeploymentDevice(global::chirpstack.as.external.api.GetFUOTADeploymentDeviceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetDeploymentDevice, null, options, request);
      }
      /// <summary>
      /// GetDeploymentDevice returns the deployment device.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::chirpstack.as.external.api.GetFUOTADeploymentDeviceResponse> GetDeploymentDeviceAsync(global::chirpstack.as.external.api.GetFUOTADeploymentDeviceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDeploymentDeviceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// GetDeploymentDevice returns the deployment device.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::chirpstack.as.external.api.GetFUOTADeploymentDeviceResponse> GetDeploymentDeviceAsync(global::chirpstack.as.external.api.GetFUOTADeploymentDeviceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetDeploymentDevice, null, options, request);
      }
      /// <summary>
      /// ListDeploymentDevices lists the devices (and status) for the given fuota deployment ID.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::chirpstack.as.external.api.ListFUOTADeploymentDevicesResponse ListDeploymentDevices(global::chirpstack.as.external.api.ListFUOTADeploymentDevicesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListDeploymentDevices(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// ListDeploymentDevices lists the devices (and status) for the given fuota deployment ID.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::chirpstack.as.external.api.ListFUOTADeploymentDevicesResponse ListDeploymentDevices(global::chirpstack.as.external.api.ListFUOTADeploymentDevicesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListDeploymentDevices, null, options, request);
      }
      /// <summary>
      /// ListDeploymentDevices lists the devices (and status) for the given fuota deployment ID.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::chirpstack.as.external.api.ListFUOTADeploymentDevicesResponse> ListDeploymentDevicesAsync(global::chirpstack.as.external.api.ListFUOTADeploymentDevicesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListDeploymentDevicesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// ListDeploymentDevices lists the devices (and status) for the given fuota deployment ID.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::chirpstack.as.external.api.ListFUOTADeploymentDevicesResponse> ListDeploymentDevicesAsync(global::chirpstack.as.external.api.ListFUOTADeploymentDevicesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListDeploymentDevices, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override FUOTADeploymentServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new FUOTADeploymentServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(FUOTADeploymentServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_CreateForDevice, serviceImpl.CreateForDevice)
          .AddMethod(__Method_CreateForApplication, serviceImpl.CreateForApplication)
          .AddMethod(__Method_Get, serviceImpl.Get)
          .AddMethod(__Method_List, serviceImpl.List)
          .AddMethod(__Method_GetDeploymentDevice, serviceImpl.GetDeploymentDevice)
          .AddMethod(__Method_ListDeploymentDevices, serviceImpl.ListDeploymentDevices).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, FUOTADeploymentServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_CreateForDevice, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::chirpstack.as.external.api.CreateFUOTADeploymentForDeviceRequest, global::chirpstack.as.external.api.CreateFUOTADeploymentForDeviceResponse>(serviceImpl.CreateForDevice));
      serviceBinder.AddMethod(__Method_CreateForApplication, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::chirpstack.as.external.api.CreateFUOTADeploymentForApplicationRequest, global::chirpstack.as.external.api.CreateFUOTADeploymentForApplicationResponse>(serviceImpl.CreateForApplication));
      serviceBinder.AddMethod(__Method_Get, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::chirpstack.as.external.api.GetFUOTADeploymentRequest, global::chirpstack.as.external.api.GetFUOTADeploymentResponse>(serviceImpl.Get));
      serviceBinder.AddMethod(__Method_List, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::chirpstack.as.external.api.ListFUOTADeploymentRequest, global::chirpstack.as.external.api.ListFUOTADeploymentResponse>(serviceImpl.List));
      serviceBinder.AddMethod(__Method_GetDeploymentDevice, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::chirpstack.as.external.api.GetFUOTADeploymentDeviceRequest, global::chirpstack.as.external.api.GetFUOTADeploymentDeviceResponse>(serviceImpl.GetDeploymentDevice));
      serviceBinder.AddMethod(__Method_ListDeploymentDevices, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::chirpstack.as.external.api.ListFUOTADeploymentDevicesRequest, global::chirpstack.as.external.api.ListFUOTADeploymentDevicesResponse>(serviceImpl.ListDeploymentDevices));
    }

  }
}
#endregion
