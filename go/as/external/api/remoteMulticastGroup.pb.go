// Code generated by protoc-gen-go. DO NOT EDIT.
// source: as/external/api/remoteMulticastGroup.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RemoteMulticastGroup struct {
	// ID (string formatted UUID).
	// This will be generated automatically on create.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Remote Multicast-group name.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Service-profile ID.
	// This value will be automatically set on create.
	// After creation, this can not be updated.
	ServiceProfileId string `protobuf:"bytes,3,opt,name=service_profile_id,json=serviceProfileID,proto3" json:"service_profile_id,omitempty"`
	// Remote Multicast type.
	GroupType MulticastGroupType `protobuf:"varint,4,opt,name=group_type,json=groupType,proto3,enum=api.MulticastGroupType" json:"group_type,omitempty"`
	// Data-rate.
	Dr uint32 `protobuf:"varint,5,opt,name=dr,proto3" json:"dr,omitempty"`
	// Frequency (Hz).
	Frequency uint32 `protobuf:"varint,6,opt,name=frequency,proto3" json:"frequency,omitempty"`
	// Ping-slot period.
	// Mandatory for Class-B remote multicast groups.
	PingSlotPeriod uint32 `protobuf:"varint,7,opt,name=ping_slot_period,json=pingSlotPeriod,proto3" json:"ping_slot_period,omitempty"`
	// Multicast address (HEX encoded DevAddr).
	// This value will be automatically set on create.
	McAddr string `protobuf:"bytes,8,opt,name=mc_addr,json=mcAddr,proto3" json:"mc_addr,omitempty"`
	// Multicast network session key (HEX encoded AES128 key).
	// This value will be automatically set on create.
	McNwkSKey string `protobuf:"bytes,9,opt,name=mc_nwk_s_key,json=mcNwkSKey,proto3" json:"mc_nwk_s_key,omitempty"`
	// Multicast application session key (HEX encoded AES128 key).
	// This value will be automatically set on create.
	McAppSKey string `protobuf:"bytes,10,opt,name=mc_app_s_key,json=mcAppSKey,proto3" json:"mc_app_s_key,omitempty"`
	// Frame-counter.
	// This value will be automatically set on create.
	FCnt uint32 `protobuf:"varint,11,opt,name=f_cnt,json=fCnt,proto3" json:"f_cnt,omitempty"`
	// Remote Multicast Deployment state.
	// This value will be automatically set on create.
	State string `protobuf:"bytes,12,opt,name=state,proto3" json:"state,omitempty"`
	// Unicast time-out.
	// Set this to the value in which you at least expect an uplink frame from the
	// device. The Remote Multicast deployment engine will wait at least for the
	// given time before proceeding with the next steps.
	UnicastTimeout *duration.Duration `protobuf:"bytes,13,opt,name=unicast_timeout,json=unicastTimeout,proto3" json:"unicast_timeout,omitempty"`
	// Next step after.
	// This value will be automatically set on create.
	NextStepAfter        *timestamp.Timestamp `protobuf:"bytes,14,opt,name=next_step_after,json=nextStepAfter,proto3" json:"next_step_after,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *RemoteMulticastGroup) Reset()         { *m = RemoteMulticastGroup{} }
func (m *RemoteMulticastGroup) String() string { return proto.CompactTextString(m) }
func (*RemoteMulticastGroup) ProtoMessage()    {}
func (*RemoteMulticastGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_a7745b072e8a8e4e, []int{0}
}

func (m *RemoteMulticastGroup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoteMulticastGroup.Unmarshal(m, b)
}
func (m *RemoteMulticastGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoteMulticastGroup.Marshal(b, m, deterministic)
}
func (m *RemoteMulticastGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoteMulticastGroup.Merge(m, src)
}
func (m *RemoteMulticastGroup) XXX_Size() int {
	return xxx_messageInfo_RemoteMulticastGroup.Size(m)
}
func (m *RemoteMulticastGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoteMulticastGroup.DiscardUnknown(m)
}

var xxx_messageInfo_RemoteMulticastGroup proto.InternalMessageInfo

func (m *RemoteMulticastGroup) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *RemoteMulticastGroup) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RemoteMulticastGroup) GetServiceProfileId() string {
	if m != nil {
		return m.ServiceProfileId
	}
	return ""
}

func (m *RemoteMulticastGroup) GetGroupType() MulticastGroupType {
	if m != nil {
		return m.GroupType
	}
	return MulticastGroupType_CLASS_C
}

func (m *RemoteMulticastGroup) GetDr() uint32 {
	if m != nil {
		return m.Dr
	}
	return 0
}

func (m *RemoteMulticastGroup) GetFrequency() uint32 {
	if m != nil {
		return m.Frequency
	}
	return 0
}

func (m *RemoteMulticastGroup) GetPingSlotPeriod() uint32 {
	if m != nil {
		return m.PingSlotPeriod
	}
	return 0
}

func (m *RemoteMulticastGroup) GetMcAddr() string {
	if m != nil {
		return m.McAddr
	}
	return ""
}

func (m *RemoteMulticastGroup) GetMcNwkSKey() string {
	if m != nil {
		return m.McNwkSKey
	}
	return ""
}

func (m *RemoteMulticastGroup) GetMcAppSKey() string {
	if m != nil {
		return m.McAppSKey
	}
	return ""
}

func (m *RemoteMulticastGroup) GetFCnt() uint32 {
	if m != nil {
		return m.FCnt
	}
	return 0
}

func (m *RemoteMulticastGroup) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *RemoteMulticastGroup) GetUnicastTimeout() *duration.Duration {
	if m != nil {
		return m.UnicastTimeout
	}
	return nil
}

func (m *RemoteMulticastGroup) GetNextStepAfter() *timestamp.Timestamp {
	if m != nil {
		return m.NextStepAfter
	}
	return nil
}

type RemoteMulticastDeploymentDevice struct {
	// Remote multicast ID (string formatted UUID).
	// This will be generated automatically on create.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Device EUI (HEX encoded) (optional).
	DevEui     string `protobuf:"bytes,2,opt,name=dev_eui,json=devEUI,proto3" json:"dev_eui,omitempty"`
	DeviceName string `protobuf:"bytes,3,opt,name=device_name,json=deviceName,proto3" json:"device_name,omitempty"`
	// Application ID.
	ApplicationId   int64  `protobuf:"varint,4,opt,name=application_id,json=applicationID,proto3" json:"application_id,omitempty"`
	ApplicationName string `protobuf:"bytes,5,opt,name=application_name,json=applicationName,proto3" json:"application_name,omitempty"`
	// The last time the application-server received any data from the device,
	// or an empty string when the device never sent any data.
	LastSeenAt *timestamp.Timestamp `protobuf:"bytes,6,opt,name=last_seen_at,json=lastSeenAt,proto3" json:"last_seen_at,omitempty"`
	// Mc Group id
	// This value will be automatically set on create.
	// Between 0 to 3
	McGroupId uint32 `protobuf:"varint,7,opt,name=mc_group_id,json=mcGroupId,proto3" json:"mc_group_id,omitempty"`
	// Created at timestamp.
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Last update timestamp.
	UpdatedAt *timestamp.Timestamp `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// Remote Multicast Deployment Device state.
	// This value will be automatically set on create.
	State FUOTADeploymentDeviceState `protobuf:"varint,10,opt,name=state,proto3,enum=api.FUOTADeploymentDeviceState" json:"state,omitempty"`
	// Error message (in case of error state).
	ErrorMessage string `protobuf:"bytes,11,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// error (Detailed error provided by the server).
	Error                map[string]string `protobuf:"bytes,12,rep,name=error,proto3" json:"error,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *RemoteMulticastDeploymentDevice) Reset()         { *m = RemoteMulticastDeploymentDevice{} }
func (m *RemoteMulticastDeploymentDevice) String() string { return proto.CompactTextString(m) }
func (*RemoteMulticastDeploymentDevice) ProtoMessage()    {}
func (*RemoteMulticastDeploymentDevice) Descriptor() ([]byte, []int) {
	return fileDescriptor_a7745b072e8a8e4e, []int{1}
}

func (m *RemoteMulticastDeploymentDevice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoteMulticastDeploymentDevice.Unmarshal(m, b)
}
func (m *RemoteMulticastDeploymentDevice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoteMulticastDeploymentDevice.Marshal(b, m, deterministic)
}
func (m *RemoteMulticastDeploymentDevice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoteMulticastDeploymentDevice.Merge(m, src)
}
func (m *RemoteMulticastDeploymentDevice) XXX_Size() int {
	return xxx_messageInfo_RemoteMulticastDeploymentDevice.Size(m)
}
func (m *RemoteMulticastDeploymentDevice) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoteMulticastDeploymentDevice.DiscardUnknown(m)
}

var xxx_messageInfo_RemoteMulticastDeploymentDevice proto.InternalMessageInfo

func (m *RemoteMulticastDeploymentDevice) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *RemoteMulticastDeploymentDevice) GetDevEui() string {
	if m != nil {
		return m.DevEui
	}
	return ""
}

func (m *RemoteMulticastDeploymentDevice) GetDeviceName() string {
	if m != nil {
		return m.DeviceName
	}
	return ""
}

func (m *RemoteMulticastDeploymentDevice) GetApplicationId() int64 {
	if m != nil {
		return m.ApplicationId
	}
	return 0
}

func (m *RemoteMulticastDeploymentDevice) GetApplicationName() string {
	if m != nil {
		return m.ApplicationName
	}
	return ""
}

func (m *RemoteMulticastDeploymentDevice) GetLastSeenAt() *timestamp.Timestamp {
	if m != nil {
		return m.LastSeenAt
	}
	return nil
}

func (m *RemoteMulticastDeploymentDevice) GetMcGroupId() uint32 {
	if m != nil {
		return m.McGroupId
	}
	return 0
}

func (m *RemoteMulticastDeploymentDevice) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *RemoteMulticastDeploymentDevice) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *RemoteMulticastDeploymentDevice) GetState() FUOTADeploymentDeviceState {
	if m != nil {
		return m.State
	}
	return FUOTADeploymentDeviceState_PENDING
}

func (m *RemoteMulticastDeploymentDevice) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

func (m *RemoteMulticastDeploymentDevice) GetError() map[string]string {
	if m != nil {
		return m.Error
	}
	return nil
}

type RemoteMulticastGroupListItem struct {
	// ID (string formatted UUID).
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Remote Multicast-group name.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Service-profile ID (string formatted UUID).
	ServiceProfileId string `protobuf:"bytes,3,opt,name=service_profile_id,json=serviceProfileID,proto3" json:"service_profile_id,omitempty"`
	// Service-profile name.
	ServiceProfileName string `protobuf:"bytes,4,opt,name=service_profile_name,json=serviceProfileName,proto3" json:"service_profile_name,omitempty"`
	// Deployment state.
	State                string   `protobuf:"bytes,5,opt,name=state,proto3" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoteMulticastGroupListItem) Reset()         { *m = RemoteMulticastGroupListItem{} }
func (m *RemoteMulticastGroupListItem) String() string { return proto.CompactTextString(m) }
func (*RemoteMulticastGroupListItem) ProtoMessage()    {}
func (*RemoteMulticastGroupListItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_a7745b072e8a8e4e, []int{2}
}

func (m *RemoteMulticastGroupListItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoteMulticastGroupListItem.Unmarshal(m, b)
}
func (m *RemoteMulticastGroupListItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoteMulticastGroupListItem.Marshal(b, m, deterministic)
}
func (m *RemoteMulticastGroupListItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoteMulticastGroupListItem.Merge(m, src)
}
func (m *RemoteMulticastGroupListItem) XXX_Size() int {
	return xxx_messageInfo_RemoteMulticastGroupListItem.Size(m)
}
func (m *RemoteMulticastGroupListItem) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoteMulticastGroupListItem.DiscardUnknown(m)
}

var xxx_messageInfo_RemoteMulticastGroupListItem proto.InternalMessageInfo

func (m *RemoteMulticastGroupListItem) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *RemoteMulticastGroupListItem) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RemoteMulticastGroupListItem) GetServiceProfileId() string {
	if m != nil {
		return m.ServiceProfileId
	}
	return ""
}

func (m *RemoteMulticastGroupListItem) GetServiceProfileName() string {
	if m != nil {
		return m.ServiceProfileName
	}
	return ""
}

func (m *RemoteMulticastGroupListItem) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

type CreateRemoteMulticastGroupRequest struct {
	// Remote Multicast-group object to create.
	RemoteMulticastGroup *RemoteMulticastGroup `protobuf:"bytes,1,opt,name=remote_multicast_group,json=remoteMulticastGroup,proto3" json:"remote_multicast_group,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *CreateRemoteMulticastGroupRequest) Reset()         { *m = CreateRemoteMulticastGroupRequest{} }
func (m *CreateRemoteMulticastGroupRequest) String() string { return proto.CompactTextString(m) }
func (*CreateRemoteMulticastGroupRequest) ProtoMessage()    {}
func (*CreateRemoteMulticastGroupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a7745b072e8a8e4e, []int{3}
}

func (m *CreateRemoteMulticastGroupRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRemoteMulticastGroupRequest.Unmarshal(m, b)
}
func (m *CreateRemoteMulticastGroupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRemoteMulticastGroupRequest.Marshal(b, m, deterministic)
}
func (m *CreateRemoteMulticastGroupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRemoteMulticastGroupRequest.Merge(m, src)
}
func (m *CreateRemoteMulticastGroupRequest) XXX_Size() int {
	return xxx_messageInfo_CreateRemoteMulticastGroupRequest.Size(m)
}
func (m *CreateRemoteMulticastGroupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRemoteMulticastGroupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRemoteMulticastGroupRequest proto.InternalMessageInfo

func (m *CreateRemoteMulticastGroupRequest) GetRemoteMulticastGroup() *RemoteMulticastGroup {
	if m != nil {
		return m.RemoteMulticastGroup
	}
	return nil
}

type CreateRemoteMulticastGroupResponse struct {
	// ID of created group (string formatted UUID).
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateRemoteMulticastGroupResponse) Reset()         { *m = CreateRemoteMulticastGroupResponse{} }
func (m *CreateRemoteMulticastGroupResponse) String() string { return proto.CompactTextString(m) }
func (*CreateRemoteMulticastGroupResponse) ProtoMessage()    {}
func (*CreateRemoteMulticastGroupResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a7745b072e8a8e4e, []int{4}
}

func (m *CreateRemoteMulticastGroupResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRemoteMulticastGroupResponse.Unmarshal(m, b)
}
func (m *CreateRemoteMulticastGroupResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRemoteMulticastGroupResponse.Marshal(b, m, deterministic)
}
func (m *CreateRemoteMulticastGroupResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRemoteMulticastGroupResponse.Merge(m, src)
}
func (m *CreateRemoteMulticastGroupResponse) XXX_Size() int {
	return xxx_messageInfo_CreateRemoteMulticastGroupResponse.Size(m)
}
func (m *CreateRemoteMulticastGroupResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRemoteMulticastGroupResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRemoteMulticastGroupResponse proto.InternalMessageInfo

func (m *CreateRemoteMulticastGroupResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetRemoteMulticastGroupRequest struct {
	// ID (string formatted UUID).
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRemoteMulticastGroupRequest) Reset()         { *m = GetRemoteMulticastGroupRequest{} }
func (m *GetRemoteMulticastGroupRequest) String() string { return proto.CompactTextString(m) }
func (*GetRemoteMulticastGroupRequest) ProtoMessage()    {}
func (*GetRemoteMulticastGroupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a7745b072e8a8e4e, []int{5}
}

func (m *GetRemoteMulticastGroupRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRemoteMulticastGroupRequest.Unmarshal(m, b)
}
func (m *GetRemoteMulticastGroupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRemoteMulticastGroupRequest.Marshal(b, m, deterministic)
}
func (m *GetRemoteMulticastGroupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRemoteMulticastGroupRequest.Merge(m, src)
}
func (m *GetRemoteMulticastGroupRequest) XXX_Size() int {
	return xxx_messageInfo_GetRemoteMulticastGroupRequest.Size(m)
}
func (m *GetRemoteMulticastGroupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRemoteMulticastGroupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRemoteMulticastGroupRequest proto.InternalMessageInfo

func (m *GetRemoteMulticastGroupRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetRemoteMulticastGroupResponse struct {
	// Remote Multicast-group object.
	RemoteMulticastGroup *RemoteMulticastGroup `protobuf:"bytes,1,opt,name=remote_multicast_group,json=remoteMulticastGroup,proto3" json:"remote_multicast_group,omitempty"`
	// Created at timestamp.
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Last update timestamp.
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GetRemoteMulticastGroupResponse) Reset()         { *m = GetRemoteMulticastGroupResponse{} }
func (m *GetRemoteMulticastGroupResponse) String() string { return proto.CompactTextString(m) }
func (*GetRemoteMulticastGroupResponse) ProtoMessage()    {}
func (*GetRemoteMulticastGroupResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a7745b072e8a8e4e, []int{6}
}

func (m *GetRemoteMulticastGroupResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRemoteMulticastGroupResponse.Unmarshal(m, b)
}
func (m *GetRemoteMulticastGroupResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRemoteMulticastGroupResponse.Marshal(b, m, deterministic)
}
func (m *GetRemoteMulticastGroupResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRemoteMulticastGroupResponse.Merge(m, src)
}
func (m *GetRemoteMulticastGroupResponse) XXX_Size() int {
	return xxx_messageInfo_GetRemoteMulticastGroupResponse.Size(m)
}
func (m *GetRemoteMulticastGroupResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRemoteMulticastGroupResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetRemoteMulticastGroupResponse proto.InternalMessageInfo

func (m *GetRemoteMulticastGroupResponse) GetRemoteMulticastGroup() *RemoteMulticastGroup {
	if m != nil {
		return m.RemoteMulticastGroup
	}
	return nil
}

func (m *GetRemoteMulticastGroupResponse) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *GetRemoteMulticastGroupResponse) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

type ListRemoteMulticastGroupRequest struct {
	// Max number of items to return.
	Limit int64 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	// Offset in the result-set (for pagination).
	Offset int64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// Organization id to filter on.
	OrganizationId int64 `protobuf:"varint,3,opt,name=organization_id,json=organizationID,proto3" json:"organization_id,omitempty"`
	// Service-profile ID to filter on.
	ServiceProfileId string `protobuf:"bytes,4,opt,name=service_profile_id,json=serviceProfileID,proto3" json:"service_profile_id,omitempty"`
	// Search can be used to search on the remote multicast-group name.
	Search               string   `protobuf:"bytes,5,opt,name=search,proto3" json:"search,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListRemoteMulticastGroupRequest) Reset()         { *m = ListRemoteMulticastGroupRequest{} }
func (m *ListRemoteMulticastGroupRequest) String() string { return proto.CompactTextString(m) }
func (*ListRemoteMulticastGroupRequest) ProtoMessage()    {}
func (*ListRemoteMulticastGroupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a7745b072e8a8e4e, []int{7}
}

func (m *ListRemoteMulticastGroupRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRemoteMulticastGroupRequest.Unmarshal(m, b)
}
func (m *ListRemoteMulticastGroupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRemoteMulticastGroupRequest.Marshal(b, m, deterministic)
}
func (m *ListRemoteMulticastGroupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRemoteMulticastGroupRequest.Merge(m, src)
}
func (m *ListRemoteMulticastGroupRequest) XXX_Size() int {
	return xxx_messageInfo_ListRemoteMulticastGroupRequest.Size(m)
}
func (m *ListRemoteMulticastGroupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRemoteMulticastGroupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListRemoteMulticastGroupRequest proto.InternalMessageInfo

func (m *ListRemoteMulticastGroupRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListRemoteMulticastGroupRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ListRemoteMulticastGroupRequest) GetOrganizationId() int64 {
	if m != nil {
		return m.OrganizationId
	}
	return 0
}

func (m *ListRemoteMulticastGroupRequest) GetServiceProfileId() string {
	if m != nil {
		return m.ServiceProfileId
	}
	return ""
}

func (m *ListRemoteMulticastGroupRequest) GetSearch() string {
	if m != nil {
		return m.Search
	}
	return ""
}

type ListRemoteMulticastGroupResponse struct {
	// Total number of remote multicast-groups.
	TotalCount           int64                           `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	Result               []*RemoteMulticastGroupListItem `protobuf:"bytes,2,rep,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *ListRemoteMulticastGroupResponse) Reset()         { *m = ListRemoteMulticastGroupResponse{} }
func (m *ListRemoteMulticastGroupResponse) String() string { return proto.CompactTextString(m) }
func (*ListRemoteMulticastGroupResponse) ProtoMessage()    {}
func (*ListRemoteMulticastGroupResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a7745b072e8a8e4e, []int{8}
}

func (m *ListRemoteMulticastGroupResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRemoteMulticastGroupResponse.Unmarshal(m, b)
}
func (m *ListRemoteMulticastGroupResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRemoteMulticastGroupResponse.Marshal(b, m, deterministic)
}
func (m *ListRemoteMulticastGroupResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRemoteMulticastGroupResponse.Merge(m, src)
}
func (m *ListRemoteMulticastGroupResponse) XXX_Size() int {
	return xxx_messageInfo_ListRemoteMulticastGroupResponse.Size(m)
}
func (m *ListRemoteMulticastGroupResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRemoteMulticastGroupResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListRemoteMulticastGroupResponse proto.InternalMessageInfo

func (m *ListRemoteMulticastGroupResponse) GetTotalCount() int64 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *ListRemoteMulticastGroupResponse) GetResult() []*RemoteMulticastGroupListItem {
	if m != nil {
		return m.Result
	}
	return nil
}

type UpdateRemoteMulticastGroupRequest struct {
	// Remote Multicast-group object to update.
	RemoteMulticastGroup *RemoteMulticastGroup `protobuf:"bytes,1,opt,name=remote_multicast_group,json=remoteMulticastGroup,proto3" json:"remote_multicast_group,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *UpdateRemoteMulticastGroupRequest) Reset()         { *m = UpdateRemoteMulticastGroupRequest{} }
func (m *UpdateRemoteMulticastGroupRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateRemoteMulticastGroupRequest) ProtoMessage()    {}
func (*UpdateRemoteMulticastGroupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a7745b072e8a8e4e, []int{9}
}

func (m *UpdateRemoteMulticastGroupRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRemoteMulticastGroupRequest.Unmarshal(m, b)
}
func (m *UpdateRemoteMulticastGroupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRemoteMulticastGroupRequest.Marshal(b, m, deterministic)
}
func (m *UpdateRemoteMulticastGroupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRemoteMulticastGroupRequest.Merge(m, src)
}
func (m *UpdateRemoteMulticastGroupRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateRemoteMulticastGroupRequest.Size(m)
}
func (m *UpdateRemoteMulticastGroupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRemoteMulticastGroupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRemoteMulticastGroupRequest proto.InternalMessageInfo

func (m *UpdateRemoteMulticastGroupRequest) GetRemoteMulticastGroup() *RemoteMulticastGroup {
	if m != nil {
		return m.RemoteMulticastGroup
	}
	return nil
}

type DeleteRemoteMulticastGroupRequest struct {
	// ID (string formatted UUID).
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRemoteMulticastGroupRequest) Reset()         { *m = DeleteRemoteMulticastGroupRequest{} }
func (m *DeleteRemoteMulticastGroupRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteRemoteMulticastGroupRequest) ProtoMessage()    {}
func (*DeleteRemoteMulticastGroupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a7745b072e8a8e4e, []int{10}
}

func (m *DeleteRemoteMulticastGroupRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRemoteMulticastGroupRequest.Unmarshal(m, b)
}
func (m *DeleteRemoteMulticastGroupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRemoteMulticastGroupRequest.Marshal(b, m, deterministic)
}
func (m *DeleteRemoteMulticastGroupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRemoteMulticastGroupRequest.Merge(m, src)
}
func (m *DeleteRemoteMulticastGroupRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteRemoteMulticastGroupRequest.Size(m)
}
func (m *DeleteRemoteMulticastGroupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRemoteMulticastGroupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRemoteMulticastGroupRequest proto.InternalMessageInfo

func (m *DeleteRemoteMulticastGroupRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type AddDeviceToRemoteMulticastGroupRequest struct {
	// Remote Multicast deployment ID (string formatted UUID).
	RemoteMulticastGroupId string `protobuf:"bytes,1,opt,name=remote_multicast_group_id,json=remoteMulticastDeploymentID,proto3" json:"remote_multicast_group_id,omitempty"`
	// Device EUIs (HEX encoded string).
	// Note that the devices must be under the same service-profile as the
	// remote multicast-group.
	DevEuis              []string `protobuf:"bytes,2,rep,name=dev_euis,json=devEUIs,proto3" json:"dev_euis,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddDeviceToRemoteMulticastGroupRequest) Reset() {
	*m = AddDeviceToRemoteMulticastGroupRequest{}
}
func (m *AddDeviceToRemoteMulticastGroupRequest) String() string { return proto.CompactTextString(m) }
func (*AddDeviceToRemoteMulticastGroupRequest) ProtoMessage()    {}
func (*AddDeviceToRemoteMulticastGroupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a7745b072e8a8e4e, []int{11}
}

func (m *AddDeviceToRemoteMulticastGroupRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddDeviceToRemoteMulticastGroupRequest.Unmarshal(m, b)
}
func (m *AddDeviceToRemoteMulticastGroupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddDeviceToRemoteMulticastGroupRequest.Marshal(b, m, deterministic)
}
func (m *AddDeviceToRemoteMulticastGroupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddDeviceToRemoteMulticastGroupRequest.Merge(m, src)
}
func (m *AddDeviceToRemoteMulticastGroupRequest) XXX_Size() int {
	return xxx_messageInfo_AddDeviceToRemoteMulticastGroupRequest.Size(m)
}
func (m *AddDeviceToRemoteMulticastGroupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddDeviceToRemoteMulticastGroupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddDeviceToRemoteMulticastGroupRequest proto.InternalMessageInfo

func (m *AddDeviceToRemoteMulticastGroupRequest) GetRemoteMulticastGroupId() string {
	if m != nil {
		return m.RemoteMulticastGroupId
	}
	return ""
}

func (m *AddDeviceToRemoteMulticastGroupRequest) GetDevEuis() []string {
	if m != nil {
		return m.DevEuis
	}
	return nil
}

type RemoveDeviceFromRemoteMulticastGroupRequest struct {
	// Remote Multicast deployment ID (string formatted UUID).
	RemoteMulticastGroupId string `protobuf:"bytes,1,opt,name=remote_multicast_group_id,json=remoteMulticastDeploymentID,proto3" json:"remote_multicast_group_id,omitempty"`
	// Device EUI (HEX encoded string).
	DevEui               string   `protobuf:"bytes,2,opt,name=dev_eui,json=devEUI,proto3" json:"dev_eui,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveDeviceFromRemoteMulticastGroupRequest) Reset() {
	*m = RemoveDeviceFromRemoteMulticastGroupRequest{}
}
func (m *RemoveDeviceFromRemoteMulticastGroupRequest) String() string {
	return proto.CompactTextString(m)
}
func (*RemoveDeviceFromRemoteMulticastGroupRequest) ProtoMessage() {}
func (*RemoveDeviceFromRemoteMulticastGroupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a7745b072e8a8e4e, []int{12}
}

func (m *RemoveDeviceFromRemoteMulticastGroupRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveDeviceFromRemoteMulticastGroupRequest.Unmarshal(m, b)
}
func (m *RemoveDeviceFromRemoteMulticastGroupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveDeviceFromRemoteMulticastGroupRequest.Marshal(b, m, deterministic)
}
func (m *RemoveDeviceFromRemoteMulticastGroupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveDeviceFromRemoteMulticastGroupRequest.Merge(m, src)
}
func (m *RemoveDeviceFromRemoteMulticastGroupRequest) XXX_Size() int {
	return xxx_messageInfo_RemoveDeviceFromRemoteMulticastGroupRequest.Size(m)
}
func (m *RemoveDeviceFromRemoteMulticastGroupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveDeviceFromRemoteMulticastGroupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveDeviceFromRemoteMulticastGroupRequest proto.InternalMessageInfo

func (m *RemoveDeviceFromRemoteMulticastGroupRequest) GetRemoteMulticastGroupId() string {
	if m != nil {
		return m.RemoteMulticastGroupId
	}
	return ""
}

func (m *RemoveDeviceFromRemoteMulticastGroupRequest) GetDevEui() string {
	if m != nil {
		return m.DevEui
	}
	return ""
}

type ListRemoteMulticastDeviceRequest struct {
	// Max number of remote multicast devices to return in the result-set.
	Limit int64 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	// Offset in the result-set (for pagination).
	Offset int64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// Remote Multicast deployment ID (string formatted UUID).
	RemoteMulticastGroupId string `protobuf:"bytes,3,opt,name=remote_multicast_group_id,json=remoteMulticastDeploymentID,proto3" json:"remote_multicast_group_id,omitempty"`
	// Application ID to filter on.
	ApplicationId int64 `protobuf:"varint,4,opt,name=application_id,json=applicationID,proto3" json:"application_id,omitempty"`
	// Search on name or DevEUI.
	Search               string   `protobuf:"bytes,5,opt,name=search,proto3" json:"search,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListRemoteMulticastDeviceRequest) Reset()         { *m = ListRemoteMulticastDeviceRequest{} }
func (m *ListRemoteMulticastDeviceRequest) String() string { return proto.CompactTextString(m) }
func (*ListRemoteMulticastDeviceRequest) ProtoMessage()    {}
func (*ListRemoteMulticastDeviceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a7745b072e8a8e4e, []int{13}
}

func (m *ListRemoteMulticastDeviceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRemoteMulticastDeviceRequest.Unmarshal(m, b)
}
func (m *ListRemoteMulticastDeviceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRemoteMulticastDeviceRequest.Marshal(b, m, deterministic)
}
func (m *ListRemoteMulticastDeviceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRemoteMulticastDeviceRequest.Merge(m, src)
}
func (m *ListRemoteMulticastDeviceRequest) XXX_Size() int {
	return xxx_messageInfo_ListRemoteMulticastDeviceRequest.Size(m)
}
func (m *ListRemoteMulticastDeviceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRemoteMulticastDeviceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListRemoteMulticastDeviceRequest proto.InternalMessageInfo

func (m *ListRemoteMulticastDeviceRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListRemoteMulticastDeviceRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ListRemoteMulticastDeviceRequest) GetRemoteMulticastGroupId() string {
	if m != nil {
		return m.RemoteMulticastGroupId
	}
	return ""
}

func (m *ListRemoteMulticastDeviceRequest) GetApplicationId() int64 {
	if m != nil {
		return m.ApplicationId
	}
	return 0
}

func (m *ListRemoteMulticastDeviceRequest) GetSearch() string {
	if m != nil {
		return m.Search
	}
	return ""
}

type ListRemoteMulticastDeviceResponse struct {
	// Total number of devices available within the result-set.
	TotalCount int64 `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	// Devices within this result-set.
	Result               []*DeviceListItem `protobuf:"bytes,2,rep,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ListRemoteMulticastDeviceResponse) Reset()         { *m = ListRemoteMulticastDeviceResponse{} }
func (m *ListRemoteMulticastDeviceResponse) String() string { return proto.CompactTextString(m) }
func (*ListRemoteMulticastDeviceResponse) ProtoMessage()    {}
func (*ListRemoteMulticastDeviceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a7745b072e8a8e4e, []int{14}
}

func (m *ListRemoteMulticastDeviceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRemoteMulticastDeviceResponse.Unmarshal(m, b)
}
func (m *ListRemoteMulticastDeviceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRemoteMulticastDeviceResponse.Marshal(b, m, deterministic)
}
func (m *ListRemoteMulticastDeviceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRemoteMulticastDeviceResponse.Merge(m, src)
}
func (m *ListRemoteMulticastDeviceResponse) XXX_Size() int {
	return xxx_messageInfo_ListRemoteMulticastDeviceResponse.Size(m)
}
func (m *ListRemoteMulticastDeviceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRemoteMulticastDeviceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListRemoteMulticastDeviceResponse proto.InternalMessageInfo

func (m *ListRemoteMulticastDeviceResponse) GetTotalCount() int64 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *ListRemoteMulticastDeviceResponse) GetResult() []*DeviceListItem {
	if m != nil {
		return m.Result
	}
	return nil
}

type ResetRemoteMulticastDeviceRequest struct {
	// Device EUI (HEX encoded).
	DevEui string `protobuf:"bytes,1,opt,name=dev_eui,json=devEUI,proto3" json:"dev_eui,omitempty"`
	// ID of the deployment (string formatted UUID).
	// This value will be automatically assigned on create.
	RemoteMulticastGroupId string   `protobuf:"bytes,2,opt,name=remote_multicast_group_id,json=remoteMulticastDeploymentID,proto3" json:"remote_multicast_group_id,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *ResetRemoteMulticastDeviceRequest) Reset()         { *m = ResetRemoteMulticastDeviceRequest{} }
func (m *ResetRemoteMulticastDeviceRequest) String() string { return proto.CompactTextString(m) }
func (*ResetRemoteMulticastDeviceRequest) ProtoMessage()    {}
func (*ResetRemoteMulticastDeviceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a7745b072e8a8e4e, []int{15}
}

func (m *ResetRemoteMulticastDeviceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResetRemoteMulticastDeviceRequest.Unmarshal(m, b)
}
func (m *ResetRemoteMulticastDeviceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResetRemoteMulticastDeviceRequest.Marshal(b, m, deterministic)
}
func (m *ResetRemoteMulticastDeviceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResetRemoteMulticastDeviceRequest.Merge(m, src)
}
func (m *ResetRemoteMulticastDeviceRequest) XXX_Size() int {
	return xxx_messageInfo_ResetRemoteMulticastDeviceRequest.Size(m)
}
func (m *ResetRemoteMulticastDeviceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ResetRemoteMulticastDeviceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ResetRemoteMulticastDeviceRequest proto.InternalMessageInfo

func (m *ResetRemoteMulticastDeviceRequest) GetDevEui() string {
	if m != nil {
		return m.DevEui
	}
	return ""
}

func (m *ResetRemoteMulticastDeviceRequest) GetRemoteMulticastGroupId() string {
	if m != nil {
		return m.RemoteMulticastGroupId
	}
	return ""
}

type ListRemoteMulticastDevicesResponse struct {
	// Total number of remote multicast-groups.
	TotalCount           int64                              `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	Result               []*RemoteMulticastDeploymentDevice `protobuf:"bytes,2,rep,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *ListRemoteMulticastDevicesResponse) Reset()         { *m = ListRemoteMulticastDevicesResponse{} }
func (m *ListRemoteMulticastDevicesResponse) String() string { return proto.CompactTextString(m) }
func (*ListRemoteMulticastDevicesResponse) ProtoMessage()    {}
func (*ListRemoteMulticastDevicesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a7745b072e8a8e4e, []int{16}
}

func (m *ListRemoteMulticastDevicesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRemoteMulticastDevicesResponse.Unmarshal(m, b)
}
func (m *ListRemoteMulticastDevicesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRemoteMulticastDevicesResponse.Marshal(b, m, deterministic)
}
func (m *ListRemoteMulticastDevicesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRemoteMulticastDevicesResponse.Merge(m, src)
}
func (m *ListRemoteMulticastDevicesResponse) XXX_Size() int {
	return xxx_messageInfo_ListRemoteMulticastDevicesResponse.Size(m)
}
func (m *ListRemoteMulticastDevicesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRemoteMulticastDevicesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListRemoteMulticastDevicesResponse proto.InternalMessageInfo

func (m *ListRemoteMulticastDevicesResponse) GetTotalCount() int64 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *ListRemoteMulticastDevicesResponse) GetResult() []*RemoteMulticastDeploymentDevice {
	if m != nil {
		return m.Result
	}
	return nil
}

type GetRemoteMulticastDeploymentDeviceRequest struct {
	// ID of the deployment (string formatted UUID).
	// This value will be automatically assigned on create.
	RemoteMulticastGroupId string `protobuf:"bytes,1,opt,name=remote_multicast_group_id,json=remoteMulticastDeploymentID,proto3" json:"remote_multicast_group_id,omitempty"`
	// Device EUI (HEX encoded).
	DevEui               string   `protobuf:"bytes,2,opt,name=dev_eui,json=devEUI,proto3" json:"dev_eui,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRemoteMulticastDeploymentDeviceRequest) Reset() {
	*m = GetRemoteMulticastDeploymentDeviceRequest{}
}
func (m *GetRemoteMulticastDeploymentDeviceRequest) String() string {
	return proto.CompactTextString(m)
}
func (*GetRemoteMulticastDeploymentDeviceRequest) ProtoMessage() {}
func (*GetRemoteMulticastDeploymentDeviceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a7745b072e8a8e4e, []int{17}
}

func (m *GetRemoteMulticastDeploymentDeviceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRemoteMulticastDeploymentDeviceRequest.Unmarshal(m, b)
}
func (m *GetRemoteMulticastDeploymentDeviceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRemoteMulticastDeploymentDeviceRequest.Marshal(b, m, deterministic)
}
func (m *GetRemoteMulticastDeploymentDeviceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRemoteMulticastDeploymentDeviceRequest.Merge(m, src)
}
func (m *GetRemoteMulticastDeploymentDeviceRequest) XXX_Size() int {
	return xxx_messageInfo_GetRemoteMulticastDeploymentDeviceRequest.Size(m)
}
func (m *GetRemoteMulticastDeploymentDeviceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRemoteMulticastDeploymentDeviceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRemoteMulticastDeploymentDeviceRequest proto.InternalMessageInfo

func (m *GetRemoteMulticastDeploymentDeviceRequest) GetRemoteMulticastGroupId() string {
	if m != nil {
		return m.RemoteMulticastGroupId
	}
	return ""
}

func (m *GetRemoteMulticastDeploymentDeviceRequest) GetDevEui() string {
	if m != nil {
		return m.DevEui
	}
	return ""
}

type GetRemoteMulticastDeploymentDeviceResponse struct {
	DeploymentDevice     *RemoteMulticastDeploymentDevice `protobuf:"bytes,1,opt,name=deployment_device,json=deploymentDevice,proto3" json:"deployment_device,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *GetRemoteMulticastDeploymentDeviceResponse) Reset() {
	*m = GetRemoteMulticastDeploymentDeviceResponse{}
}
func (m *GetRemoteMulticastDeploymentDeviceResponse) String() string {
	return proto.CompactTextString(m)
}
func (*GetRemoteMulticastDeploymentDeviceResponse) ProtoMessage() {}
func (*GetRemoteMulticastDeploymentDeviceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a7745b072e8a8e4e, []int{18}
}

func (m *GetRemoteMulticastDeploymentDeviceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRemoteMulticastDeploymentDeviceResponse.Unmarshal(m, b)
}
func (m *GetRemoteMulticastDeploymentDeviceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRemoteMulticastDeploymentDeviceResponse.Marshal(b, m, deterministic)
}
func (m *GetRemoteMulticastDeploymentDeviceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRemoteMulticastDeploymentDeviceResponse.Merge(m, src)
}
func (m *GetRemoteMulticastDeploymentDeviceResponse) XXX_Size() int {
	return xxx_messageInfo_GetRemoteMulticastDeploymentDeviceResponse.Size(m)
}
func (m *GetRemoteMulticastDeploymentDeviceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRemoteMulticastDeploymentDeviceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetRemoteMulticastDeploymentDeviceResponse proto.InternalMessageInfo

func (m *GetRemoteMulticastDeploymentDeviceResponse) GetDeploymentDevice() *RemoteMulticastDeploymentDevice {
	if m != nil {
		return m.DeploymentDevice
	}
	return nil
}

type RemoteMulticastQueueItem struct {
	// Remote Multicast-group ID (string formatted UUID).
	RemoteMulticastGroupId string `protobuf:"bytes,1,opt,name=remote_multicast_group_id,json=remoteMulticastGroupID,proto3" json:"remote_multicast_group_id,omitempty"`
	// Downlink frame-counter.
	// This will be automatically set on enqueue.
	FCnt uint32 `protobuf:"varint,2,opt,name=f_cnt,json=fCnt,proto3" json:"f_cnt,omitempty"`
	// FPort used (must be > 0).
	FPort uint32 `protobuf:"varint,3,opt,name=f_port,json=fPort,proto3" json:"f_port,omitempty"`
	// Base64 encoded data.
	Data                 []byte   `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoteMulticastQueueItem) Reset()         { *m = RemoteMulticastQueueItem{} }
func (m *RemoteMulticastQueueItem) String() string { return proto.CompactTextString(m) }
func (*RemoteMulticastQueueItem) ProtoMessage()    {}
func (*RemoteMulticastQueueItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_a7745b072e8a8e4e, []int{19}
}

func (m *RemoteMulticastQueueItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoteMulticastQueueItem.Unmarshal(m, b)
}
func (m *RemoteMulticastQueueItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoteMulticastQueueItem.Marshal(b, m, deterministic)
}
func (m *RemoteMulticastQueueItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoteMulticastQueueItem.Merge(m, src)
}
func (m *RemoteMulticastQueueItem) XXX_Size() int {
	return xxx_messageInfo_RemoteMulticastQueueItem.Size(m)
}
func (m *RemoteMulticastQueueItem) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoteMulticastQueueItem.DiscardUnknown(m)
}

var xxx_messageInfo_RemoteMulticastQueueItem proto.InternalMessageInfo

func (m *RemoteMulticastQueueItem) GetRemoteMulticastGroupId() string {
	if m != nil {
		return m.RemoteMulticastGroupId
	}
	return ""
}

func (m *RemoteMulticastQueueItem) GetFCnt() uint32 {
	if m != nil {
		return m.FCnt
	}
	return 0
}

func (m *RemoteMulticastQueueItem) GetFPort() uint32 {
	if m != nil {
		return m.FPort
	}
	return 0
}

func (m *RemoteMulticastQueueItem) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type EnqueueRemoteMulticastQueueItemRequest struct {
	// Remote Multicast queue-item object to enqueue.
	RemoteMulticastQueueItem *RemoteMulticastQueueItem `protobuf:"bytes,1,opt,name=remote_multicast_queue_item,json=remoteMulticastQueueItem,proto3" json:"remote_multicast_queue_item,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}                  `json:"-"`
	XXX_unrecognized         []byte                    `json:"-"`
	XXX_sizecache            int32                     `json:"-"`
}

func (m *EnqueueRemoteMulticastQueueItemRequest) Reset() {
	*m = EnqueueRemoteMulticastQueueItemRequest{}
}
func (m *EnqueueRemoteMulticastQueueItemRequest) String() string { return proto.CompactTextString(m) }
func (*EnqueueRemoteMulticastQueueItemRequest) ProtoMessage()    {}
func (*EnqueueRemoteMulticastQueueItemRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a7745b072e8a8e4e, []int{20}
}

func (m *EnqueueRemoteMulticastQueueItemRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnqueueRemoteMulticastQueueItemRequest.Unmarshal(m, b)
}
func (m *EnqueueRemoteMulticastQueueItemRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnqueueRemoteMulticastQueueItemRequest.Marshal(b, m, deterministic)
}
func (m *EnqueueRemoteMulticastQueueItemRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnqueueRemoteMulticastQueueItemRequest.Merge(m, src)
}
func (m *EnqueueRemoteMulticastQueueItemRequest) XXX_Size() int {
	return xxx_messageInfo_EnqueueRemoteMulticastQueueItemRequest.Size(m)
}
func (m *EnqueueRemoteMulticastQueueItemRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EnqueueRemoteMulticastQueueItemRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EnqueueRemoteMulticastQueueItemRequest proto.InternalMessageInfo

func (m *EnqueueRemoteMulticastQueueItemRequest) GetRemoteMulticastQueueItem() *RemoteMulticastQueueItem {
	if m != nil {
		return m.RemoteMulticastQueueItem
	}
	return nil
}

type EnqueueRemoteMulticastQueueItemResponse struct {
	// Frame-counter for the enqueued payload.
	FCnt                 uint32   `protobuf:"varint,1,opt,name=f_cnt,json=fCnt,proto3" json:"f_cnt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EnqueueRemoteMulticastQueueItemResponse) Reset() {
	*m = EnqueueRemoteMulticastQueueItemResponse{}
}
func (m *EnqueueRemoteMulticastQueueItemResponse) String() string { return proto.CompactTextString(m) }
func (*EnqueueRemoteMulticastQueueItemResponse) ProtoMessage()    {}
func (*EnqueueRemoteMulticastQueueItemResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a7745b072e8a8e4e, []int{21}
}

func (m *EnqueueRemoteMulticastQueueItemResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnqueueRemoteMulticastQueueItemResponse.Unmarshal(m, b)
}
func (m *EnqueueRemoteMulticastQueueItemResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnqueueRemoteMulticastQueueItemResponse.Marshal(b, m, deterministic)
}
func (m *EnqueueRemoteMulticastQueueItemResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnqueueRemoteMulticastQueueItemResponse.Merge(m, src)
}
func (m *EnqueueRemoteMulticastQueueItemResponse) XXX_Size() int {
	return xxx_messageInfo_EnqueueRemoteMulticastQueueItemResponse.Size(m)
}
func (m *EnqueueRemoteMulticastQueueItemResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EnqueueRemoteMulticastQueueItemResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EnqueueRemoteMulticastQueueItemResponse proto.InternalMessageInfo

func (m *EnqueueRemoteMulticastQueueItemResponse) GetFCnt() uint32 {
	if m != nil {
		return m.FCnt
	}
	return 0
}

type FlushRemoteMulticastGroupQueueItemsRequest struct {
	// Remote Multicast-group ID (string formatted UUID).
	RemoteMulticastGroupId string   `protobuf:"bytes,1,opt,name=remote_multicast_group_id,json=remoteMulticastGroupID,proto3" json:"remote_multicast_group_id,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *FlushRemoteMulticastGroupQueueItemsRequest) Reset() {
	*m = FlushRemoteMulticastGroupQueueItemsRequest{}
}
func (m *FlushRemoteMulticastGroupQueueItemsRequest) String() string {
	return proto.CompactTextString(m)
}
func (*FlushRemoteMulticastGroupQueueItemsRequest) ProtoMessage() {}
func (*FlushRemoteMulticastGroupQueueItemsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a7745b072e8a8e4e, []int{22}
}

func (m *FlushRemoteMulticastGroupQueueItemsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FlushRemoteMulticastGroupQueueItemsRequest.Unmarshal(m, b)
}
func (m *FlushRemoteMulticastGroupQueueItemsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FlushRemoteMulticastGroupQueueItemsRequest.Marshal(b, m, deterministic)
}
func (m *FlushRemoteMulticastGroupQueueItemsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FlushRemoteMulticastGroupQueueItemsRequest.Merge(m, src)
}
func (m *FlushRemoteMulticastGroupQueueItemsRequest) XXX_Size() int {
	return xxx_messageInfo_FlushRemoteMulticastGroupQueueItemsRequest.Size(m)
}
func (m *FlushRemoteMulticastGroupQueueItemsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FlushRemoteMulticastGroupQueueItemsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FlushRemoteMulticastGroupQueueItemsRequest proto.InternalMessageInfo

func (m *FlushRemoteMulticastGroupQueueItemsRequest) GetRemoteMulticastGroupId() string {
	if m != nil {
		return m.RemoteMulticastGroupId
	}
	return ""
}

type ListRemoteMulticastGroupQueueItemsRequest struct {
	// Remote Multicast-group ID (string formatted UUID).
	RemoteMulticastGroupId string   `protobuf:"bytes,1,opt,name=remote_multicast_group_id,json=remoteMulticastGroupID,proto3" json:"remote_multicast_group_id,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *ListRemoteMulticastGroupQueueItemsRequest) Reset() {
	*m = ListRemoteMulticastGroupQueueItemsRequest{}
}
func (m *ListRemoteMulticastGroupQueueItemsRequest) String() string {
	return proto.CompactTextString(m)
}
func (*ListRemoteMulticastGroupQueueItemsRequest) ProtoMessage() {}
func (*ListRemoteMulticastGroupQueueItemsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a7745b072e8a8e4e, []int{23}
}

func (m *ListRemoteMulticastGroupQueueItemsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRemoteMulticastGroupQueueItemsRequest.Unmarshal(m, b)
}
func (m *ListRemoteMulticastGroupQueueItemsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRemoteMulticastGroupQueueItemsRequest.Marshal(b, m, deterministic)
}
func (m *ListRemoteMulticastGroupQueueItemsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRemoteMulticastGroupQueueItemsRequest.Merge(m, src)
}
func (m *ListRemoteMulticastGroupQueueItemsRequest) XXX_Size() int {
	return xxx_messageInfo_ListRemoteMulticastGroupQueueItemsRequest.Size(m)
}
func (m *ListRemoteMulticastGroupQueueItemsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRemoteMulticastGroupQueueItemsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListRemoteMulticastGroupQueueItemsRequest proto.InternalMessageInfo

func (m *ListRemoteMulticastGroupQueueItemsRequest) GetRemoteMulticastGroupId() string {
	if m != nil {
		return m.RemoteMulticastGroupId
	}
	return ""
}

type ListRemoteMulticastGroupQueueItemsResponse struct {
	RemoteMulticastQueueItems []*RemoteMulticastQueueItem `protobuf:"bytes,1,rep,name=remote_multicast_queue_items,json=remoteMulticastQueueItems,proto3" json:"remote_multicast_queue_items,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}                    `json:"-"`
	XXX_unrecognized          []byte                      `json:"-"`
	XXX_sizecache             int32                       `json:"-"`
}

func (m *ListRemoteMulticastGroupQueueItemsResponse) Reset() {
	*m = ListRemoteMulticastGroupQueueItemsResponse{}
}
func (m *ListRemoteMulticastGroupQueueItemsResponse) String() string {
	return proto.CompactTextString(m)
}
func (*ListRemoteMulticastGroupQueueItemsResponse) ProtoMessage() {}
func (*ListRemoteMulticastGroupQueueItemsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a7745b072e8a8e4e, []int{24}
}

func (m *ListRemoteMulticastGroupQueueItemsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRemoteMulticastGroupQueueItemsResponse.Unmarshal(m, b)
}
func (m *ListRemoteMulticastGroupQueueItemsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRemoteMulticastGroupQueueItemsResponse.Marshal(b, m, deterministic)
}
func (m *ListRemoteMulticastGroupQueueItemsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRemoteMulticastGroupQueueItemsResponse.Merge(m, src)
}
func (m *ListRemoteMulticastGroupQueueItemsResponse) XXX_Size() int {
	return xxx_messageInfo_ListRemoteMulticastGroupQueueItemsResponse.Size(m)
}
func (m *ListRemoteMulticastGroupQueueItemsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRemoteMulticastGroupQueueItemsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListRemoteMulticastGroupQueueItemsResponse proto.InternalMessageInfo

func (m *ListRemoteMulticastGroupQueueItemsResponse) GetRemoteMulticastQueueItems() []*RemoteMulticastQueueItem {
	if m != nil {
		return m.RemoteMulticastQueueItems
	}
	return nil
}

func init() {
	proto.RegisterType((*RemoteMulticastGroup)(nil), "api.RemoteMulticastGroup")
	proto.RegisterType((*RemoteMulticastDeploymentDevice)(nil), "api.RemoteMulticastDeploymentDevice")
	proto.RegisterMapType((map[string]string)(nil), "api.RemoteMulticastDeploymentDevice.ErrorEntry")
	proto.RegisterType((*RemoteMulticastGroupListItem)(nil), "api.RemoteMulticastGroupListItem")
	proto.RegisterType((*CreateRemoteMulticastGroupRequest)(nil), "api.CreateRemoteMulticastGroupRequest")
	proto.RegisterType((*CreateRemoteMulticastGroupResponse)(nil), "api.CreateRemoteMulticastGroupResponse")
	proto.RegisterType((*GetRemoteMulticastGroupRequest)(nil), "api.GetRemoteMulticastGroupRequest")
	proto.RegisterType((*GetRemoteMulticastGroupResponse)(nil), "api.GetRemoteMulticastGroupResponse")
	proto.RegisterType((*ListRemoteMulticastGroupRequest)(nil), "api.ListRemoteMulticastGroupRequest")
	proto.RegisterType((*ListRemoteMulticastGroupResponse)(nil), "api.ListRemoteMulticastGroupResponse")
	proto.RegisterType((*UpdateRemoteMulticastGroupRequest)(nil), "api.UpdateRemoteMulticastGroupRequest")
	proto.RegisterType((*DeleteRemoteMulticastGroupRequest)(nil), "api.DeleteRemoteMulticastGroupRequest")
	proto.RegisterType((*AddDeviceToRemoteMulticastGroupRequest)(nil), "api.AddDeviceToRemoteMulticastGroupRequest")
	proto.RegisterType((*RemoveDeviceFromRemoteMulticastGroupRequest)(nil), "api.RemoveDeviceFromRemoteMulticastGroupRequest")
	proto.RegisterType((*ListRemoteMulticastDeviceRequest)(nil), "api.ListRemoteMulticastDeviceRequest")
	proto.RegisterType((*ListRemoteMulticastDeviceResponse)(nil), "api.ListRemoteMulticastDeviceResponse")
	proto.RegisterType((*ResetRemoteMulticastDeviceRequest)(nil), "api.ResetRemoteMulticastDeviceRequest")
	proto.RegisterType((*ListRemoteMulticastDevicesResponse)(nil), "api.ListRemoteMulticastDevicesResponse")
	proto.RegisterType((*GetRemoteMulticastDeploymentDeviceRequest)(nil), "api.GetRemoteMulticastDeploymentDeviceRequest")
	proto.RegisterType((*GetRemoteMulticastDeploymentDeviceResponse)(nil), "api.GetRemoteMulticastDeploymentDeviceResponse")
	proto.RegisterType((*RemoteMulticastQueueItem)(nil), "api.RemoteMulticastQueueItem")
	proto.RegisterType((*EnqueueRemoteMulticastQueueItemRequest)(nil), "api.EnqueueRemoteMulticastQueueItemRequest")
	proto.RegisterType((*EnqueueRemoteMulticastQueueItemResponse)(nil), "api.EnqueueRemoteMulticastQueueItemResponse")
	proto.RegisterType((*FlushRemoteMulticastGroupQueueItemsRequest)(nil), "api.FlushRemoteMulticastGroupQueueItemsRequest")
	proto.RegisterType((*ListRemoteMulticastGroupQueueItemsRequest)(nil), "api.ListRemoteMulticastGroupQueueItemsRequest")
	proto.RegisterType((*ListRemoteMulticastGroupQueueItemsResponse)(nil), "api.ListRemoteMulticastGroupQueueItemsResponse")
}

func init() {
	proto.RegisterFile("as/external/api/remoteMulticastGroup.proto", fileDescriptor_a7745b072e8a8e4e)
}

var fileDescriptor_a7745b072e8a8e4e = []byte{
	// 1824 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x59, 0x4b, 0x6f, 0x1b, 0xc9,
	0x11, 0xc6, 0x90, 0x12, 0x65, 0x96, 0x1e, 0x56, 0xda, 0x8a, 0x3c, 0xa6, 0xb5, 0x96, 0x34, 0xb6,
	0x25, 0x59, 0x5e, 0x93, 0x86, 0x9d, 0x87, 0xbd, 0xd8, 0x18, 0x2b, 0x9b, 0x92, 0xa2, 0xec, 0xc3,
	0xde, 0x91, 0x0c, 0x04, 0x8b, 0x24, 0x83, 0xf1, 0x4c, 0x93, 0x1e, 0x98, 0xf3, 0x70, 0x77, 0x8f,
	0x76, 0x19, 0xc7, 0x09, 0xb0, 0x09, 0xf6, 0x94, 0x20, 0x87, 0x20, 0xc7, 0x3d, 0x07, 0x08, 0x72,
	0xcc, 0x21, 0xa7, 0xfc, 0x80, 0xe4, 0x90, 0x43, 0x90, 0x7f, 0x90, 0x43, 0x4e, 0xf9, 0x0d, 0x41,
	0x57, 0x37, 0x29, 0x6a, 0xc4, 0x19, 0xd2, 0xb2, 0x9d, 0x1b, 0xa7, 0xfb, 0xeb, 0xaa, 0xaf, 0xaa,
	0xbf, 0xaa, 0x2e, 0xcb, 0xb0, 0xe9, 0xf2, 0x06, 0xfd, 0x42, 0x50, 0x16, 0xb9, 0x9d, 0x86, 0x9b,
	0x04, 0x0d, 0x46, 0xc3, 0x58, 0xd0, 0x8f, 0xd3, 0x8e, 0x08, 0x3c, 0x97, 0x8b, 0x5d, 0x16, 0xa7,
	0x49, 0x3d, 0x61, 0xb1, 0x88, 0x49, 0xd9, 0x4d, 0x82, 0xda, 0x52, 0x3b, 0x8e, 0xdb, 0x1d, 0x8a,
	0x58, 0x37, 0x8a, 0x62, 0xe1, 0x8a, 0x20, 0x8e, 0xb8, 0x82, 0xd4, 0x96, 0xf5, 0x2e, 0x7e, 0x3d,
	0x49, 0x5b, 0x0d, 0x11, 0x84, 0x94, 0x0b, 0x37, 0xd4, 0x36, 0x6a, 0x97, 0xb2, 0x00, 0x3f, 0x65,
	0x68, 0x41, 0xef, 0x5f, 0xcc, 0xee, 0xd3, 0x30, 0x11, 0x5d, 0xbd, 0xb9, 0x94, 0x25, 0xeb, 0xd3,
	0xc3, 0xc0, 0xa3, 0x7a, 0xf7, 0x4a, 0x76, 0x37, 0x1c, 0x12, 0x44, 0xed, 0x6a, 0x16, 0xd5, 0x4a,
	0x63, 0xe1, 0x36, 0x69, 0xd2, 0x89, 0xbb, 0x21, 0x8d, 0x84, 0x82, 0x59, 0x5f, 0x4d, 0xc0, 0x82,
	0x3d, 0x24, 0x15, 0x64, 0x0e, 0x4a, 0x81, 0x6f, 0x1a, 0x2b, 0xc6, 0x46, 0xd5, 0x2e, 0x05, 0x3e,
	0x21, 0x30, 0x11, 0xb9, 0x21, 0x35, 0x4b, 0xb8, 0x82, 0xbf, 0xc9, 0xbb, 0x40, 0x38, 0x65, 0x92,
	0x9a, 0x93, 0xb0, 0xb8, 0x15, 0x74, 0xa8, 0x13, 0xf8, 0x66, 0x19, 0x11, 0xf3, 0x7a, 0xe7, 0x91,
	0xda, 0xd8, 0x6b, 0x92, 0xef, 0x00, 0xb4, 0xa5, 0x69, 0x47, 0x74, 0x13, 0x6a, 0x4e, 0xac, 0x18,
	0x1b, 0x73, 0xb7, 0xce, 0xd7, 0xdd, 0x24, 0xa8, 0x1f, 0x77, 0x7d, 0xd0, 0x4d, 0xa8, 0x5d, 0x6d,
	0xf7, 0x7e, 0x4a, 0x26, 0x3e, 0x33, 0x27, 0x57, 0x8c, 0x8d, 0x59, 0xbb, 0xe4, 0x33, 0xb2, 0x04,
	0xd5, 0x16, 0xa3, 0xcf, 0x53, 0x1a, 0x79, 0x5d, 0xb3, 0x82, 0xcb, 0x47, 0x0b, 0x64, 0x03, 0xe6,
	0x93, 0x20, 0x6a, 0x3b, 0xbc, 0x13, 0x0b, 0x27, 0xa1, 0x2c, 0x88, 0x7d, 0x73, 0x0a, 0x41, 0x73,
	0x72, 0x7d, 0xbf, 0x13, 0x8b, 0x47, 0xb8, 0x4a, 0xce, 0xc3, 0x54, 0xe8, 0x39, 0xae, 0xef, 0x33,
	0xf3, 0x0c, 0x52, 0xae, 0x84, 0xde, 0x96, 0xef, 0x33, 0xb2, 0x0c, 0x33, 0xa1, 0xe7, 0x44, 0x9f,
	0x3f, 0x73, 0xb8, 0xf3, 0x8c, 0x76, 0xcd, 0x2a, 0xee, 0x56, 0x43, 0xef, 0x93, 0xcf, 0x9f, 0xed,
	0x7f, 0x48, 0xbb, 0x1a, 0xe0, 0x26, 0x89, 0x06, 0x40, 0x0f, 0xb0, 0x95, 0x24, 0x08, 0x38, 0x07,
	0x93, 0x2d, 0xc7, 0x8b, 0x84, 0x39, 0x8d, 0x9e, 0x27, 0x5a, 0x0f, 0x22, 0x41, 0x16, 0x60, 0x92,
	0x0b, 0x57, 0x50, 0x73, 0x06, 0xe1, 0xea, 0x83, 0xdc, 0x87, 0xb3, 0x69, 0x84, 0xc1, 0x3b, 0x52,
	0x43, 0x71, 0x2a, 0xcc, 0xd9, 0x15, 0x63, 0x63, 0xfa, 0xd6, 0x85, 0xba, 0x92, 0x48, 0xbd, 0x27,
	0x91, 0x7a, 0x53, 0x4b, 0xc8, 0x9e, 0xd3, 0x27, 0x0e, 0xd4, 0x01, 0x69, 0x23, 0xa2, 0x5f, 0x08,
	0x87, 0x0b, 0x9a, 0x38, 0x6e, 0x4b, 0x50, 0x66, 0xce, 0xa1, 0x8d, 0xda, 0x09, 0x1b, 0x07, 0x3d,
	0x9d, 0xda, 0xb3, 0xf2, 0xc8, 0xbe, 0xa0, 0xc9, 0x96, 0x3c, 0x60, 0xfd, 0x77, 0x02, 0x96, 0x33,
	0x42, 0x38, 0x12, 0x4b, 0x13, 0xf5, 0x77, 0x42, 0x13, 0xe7, 0x61, 0xca, 0xa7, 0x87, 0x0e, 0x4d,
	0x03, 0x2d, 0x8b, 0x8a, 0x4f, 0x0f, 0xb7, 0x1f, 0xef, 0x91, 0x65, 0x98, 0x56, 0x92, 0x75, 0x50,
	0x33, 0x4a, 0x11, 0xa0, 0x96, 0x3e, 0x91, 0xca, 0xb9, 0x0a, 0x73, 0x6e, 0x92, 0x74, 0x02, 0x0f,
	0x03, 0x92, 0xaa, 0x91, 0x7a, 0x28, 0xdb, 0xb3, 0x03, 0xab, 0x7b, 0x4d, 0x72, 0x0d, 0xe6, 0x07,
	0x61, 0x68, 0x6c, 0x12, 0x8d, 0x9d, 0x1d, 0x58, 0x47, 0x8b, 0xef, 0xc3, 0x4c, 0x47, 0x26, 0x91,
	0x53, 0x1a, 0x39, 0xae, 0x40, 0x61, 0x14, 0x27, 0x00, 0x24, 0x7e, 0x9f, 0xd2, 0x68, 0x4b, 0x90,
	0x4b, 0x30, 0x1d, 0x7a, 0x8e, 0x92, 0x67, 0xd0, 0x13, 0x4c, 0x35, 0xf4, 0x50, 0x90, 0x7b, 0x3e,
	0xb9, 0x0b, 0xe0, 0x31, 0xea, 0x0a, 0xea, 0x4b, 0xdb, 0x67, 0x46, 0xda, 0xae, 0x6a, 0xf4, 0x96,
	0x90, 0x47, 0xd3, 0xc4, 0xef, 0x1d, 0xad, 0x8e, 0x3e, 0xaa, 0xd1, 0x5b, 0x82, 0x7c, 0xbb, 0xa7,
	0x18, 0xc0, 0x62, 0x59, 0xc6, 0x62, 0xd9, 0x79, 0xfc, 0xf0, 0x60, 0x2b, 0x7b, 0x35, 0xfb, 0x12,
	0xd6, 0x93, 0xd4, 0x65, 0x98, 0xa5, 0x8c, 0xc5, 0xcc, 0x09, 0x29, 0xe7, 0x6e, 0x9b, 0xa2, 0x0a,
	0xab, 0xf6, 0x0c, 0x2e, 0x7e, 0xac, 0xd6, 0xc8, 0x36, 0x4c, 0xe2, 0xb7, 0x39, 0xb3, 0x52, 0xde,
	0x98, 0xbe, 0xd5, 0x40, 0xdb, 0x23, 0x04, 0x50, 0xdf, 0x96, 0x27, 0xb6, 0x23, 0xc1, 0xba, 0xb6,
	0x3a, 0x5d, 0xbb, 0x03, 0x70, 0xb4, 0x48, 0xe6, 0xa1, 0x2c, 0xeb, 0x41, 0x29, 0x44, 0xfe, 0x94,
	0xa2, 0x3f, 0x74, 0x3b, 0x69, 0xaf, 0x6f, 0xa8, 0x8f, 0xf7, 0x4a, 0x77, 0x0c, 0xeb, 0x2f, 0x06,
	0x2c, 0x0d, 0xeb, 0x3c, 0x1f, 0x05, 0x5c, 0xec, 0x09, 0x1a, 0xbe, 0x85, 0x0e, 0x74, 0x13, 0x16,
	0xb2, 0x68, 0xb4, 0x38, 0x81, 0x78, 0x72, 0x1c, 0x8f, 0xaa, 0xea, 0xd7, 0xec, 0xe4, 0x40, 0xcd,
	0x5a, 0x02, 0x56, 0x1f, 0xe0, 0xfd, 0x0e, 0xe3, 0x6f, 0xcb, 0x4e, 0xc4, 0x05, 0x79, 0x08, 0x8b,
	0xea, 0x8d, 0x71, 0xfa, 0xfd, 0x59, 0x09, 0x0c, 0x43, 0x92, 0xf5, 0x3d, 0x24, 0xe3, 0xca, 0xc2,
	0xc2, 0xb0, 0xc7, 0xc9, 0xfa, 0x16, 0x58, 0x45, 0x5e, 0x79, 0x12, 0x47, 0xfc, 0x44, 0x8d, 0x5a,
	0x37, 0xe1, 0xd2, 0x2e, 0x15, 0x45, 0x44, 0xb3, 0x27, 0xfe, 0x63, 0xc0, 0x72, 0xee, 0x11, 0xed,
	0xe5, 0x4d, 0x07, 0x97, 0x29, 0xb0, 0xd2, 0xe9, 0x0b, 0xac, 0xfc, 0x0a, 0x05, 0x66, 0xfd, 0xd5,
	0x80, 0x65, 0xa9, 0xb7, 0xa2, 0xf4, 0x2c, 0xc0, 0x64, 0x27, 0x08, 0x03, 0x81, 0x91, 0x95, 0x6d,
	0xf5, 0x41, 0x16, 0xa1, 0x12, 0xb7, 0x5a, 0x9c, 0x2a, 0xae, 0x65, 0x5b, 0x7f, 0x91, 0x75, 0x38,
	0x1b, 0xb3, 0xb6, 0x1b, 0x05, 0x3f, 0xed, 0x77, 0xb6, 0x32, 0x02, 0xe6, 0x06, 0x97, 0xf7, 0x9a,
	0x39, 0xca, 0x9d, 0xc8, 0x51, 0xee, 0x22, 0x54, 0x38, 0x75, 0x99, 0xf7, 0x54, 0x0b, 0x51, 0x7f,
	0x59, 0x3f, 0x87, 0x95, 0x7c, 0xfe, 0xfa, 0xae, 0x96, 0x61, 0x5a, 0xc4, 0xc2, 0xed, 0x38, 0x5e,
	0x9c, 0x46, 0xbd, 0x30, 0x00, 0x97, 0x1e, 0xc8, 0x15, 0x72, 0x17, 0x2a, 0x8c, 0xf2, 0xb4, 0x23,
	0x63, 0x91, 0xbd, 0x60, 0x35, 0xf7, 0xf2, 0x7a, 0xb5, 0x69, 0xeb, 0x03, 0xb2, 0x12, 0x1e, 0x63,
	0x36, 0xff, 0xaf, 0x95, 0x70, 0x1b, 0x56, 0x9b, 0xb4, 0x43, 0x8b, 0xbd, 0x66, 0x65, 0xfd, 0x4b,
	0x03, 0xd6, 0xb6, 0x7c, 0x5f, 0x75, 0xb2, 0x83, 0xb8, 0xe8, 0xe8, 0x3d, 0xb8, 0x30, 0x9c, 0xb0,
	0xd3, 0xb7, 0x78, 0x91, 0xe5, 0xb5, 0xca, 0xbd, 0x26, 0xb9, 0x00, 0x67, 0xf4, 0xbb, 0xc8, 0x31,
	0xa5, 0x55, 0x7b, 0x4a, 0x3d, 0x8c, 0xdc, 0xfa, 0xca, 0x80, 0xeb, 0xd2, 0xf5, 0x21, 0x55, 0x44,
	0x76, 0x58, 0x1c, 0xbe, 0x4d, 0x2a, 0x79, 0x4f, 0xb4, 0xf5, 0x0f, 0x63, 0xa8, 0x74, 0x14, 0xab,
	0xd3, 0x69, 0xbf, 0x90, 0x6b, 0x79, 0x34, 0xd7, 0x31, 0x87, 0x82, 0xbc, 0x5a, 0x78, 0x0e, 0xab,
	0x05, 0x01, 0x8d, 0x5b, 0x0c, 0xd7, 0x33, 0xc5, 0x70, 0x0e, 0xc5, 0xa9, 0xac, 0x9c, 0x90, 0xff,
	0xcf, 0x60, 0xd5, 0xa6, 0x9c, 0x16, 0x27, 0x71, 0xe0, 0x0a, 0x8c, 0x63, 0x53, 0x52, 0x61, 0xbe,
	0x4a, 0x23, 0xf3, 0x25, 0x15, 0x6d, 0xe5, 0x46, 0xcc, 0xc7, 0x0f, 0xf9, 0xfd, 0x4c, 0xc8, 0x57,
	0xc6, 0x99, 0x05, 0xfa, 0x39, 0xf8, 0x95, 0x01, 0xd7, 0x76, 0x87, 0xa4, 0x20, 0x03, 0x7f, 0xdb,
	0x7a, 0xfe, 0x05, 0x6c, 0x8e, 0xc3, 0x42, 0xe7, 0xe4, 0x53, 0xf8, 0x86, 0xdf, 0xdf, 0x73, 0xd4,
	0x60, 0xaa, 0xbb, 0xd1, 0x78, 0xd1, 0xcf, 0xfb, 0x99, 0x15, 0xeb, 0xf7, 0x06, 0x98, 0x99, 0x53,
	0x9f, 0xa6, 0x34, 0xa5, 0x38, 0xcb, 0xdc, 0x1d, 0x1d, 0xf6, 0xe2, 0xb0, 0x56, 0xb7, 0xd7, 0x3c,
	0xfa, 0xb7, 0x44, 0x69, 0xe0, 0xdf, 0x12, 0xdf, 0x84, 0x4a, 0xcb, 0x49, 0x62, 0xa6, 0xde, 0xbb,
	0x59, 0x7b, 0xb2, 0xf5, 0x28, 0x66, 0x42, 0x8e, 0x48, 0xbe, 0x2b, 0x5c, 0xac, 0x9b, 0x19, 0x1b,
	0x7f, 0xcb, 0x8e, 0xb3, 0xb6, 0x1d, 0x3d, 0x97, 0x54, 0xf2, 0xe8, 0xf5, 0x2e, 0xe7, 0x47, 0x70,
	0xf1, 0x04, 0x4b, 0x3c, 0xe8, 0x04, 0x82, 0x86, 0x3a, 0x3f, 0xef, 0x0c, 0xcb, 0xcf, 0x91, 0x29,
	0x93, 0xe5, 0xec, 0x58, 0xf7, 0x60, 0x7d, 0x24, 0x0f, 0x7d, 0x3d, 0xfd, 0x98, 0x8d, 0xa3, 0x98,
	0xad, 0x36, 0x6c, 0xee, 0x74, 0x52, 0xfe, 0x74, 0x58, 0xbb, 0xec, 0x9b, 0xe0, 0xbd, 0x58, 0x4e,
	0x9f, 0x71, 0xab, 0x05, 0xd7, 0xf2, 0x1e, 0xd5, 0x37, 0xea, 0xe7, 0xd7, 0x06, 0x6c, 0x8e, 0xe3,
	0x48, 0x27, 0xe5, 0x27, 0xb0, 0x54, 0x70, 0x3b, 0xdc, 0x34, 0xb0, 0x78, 0x47, 0x5c, 0xcf, 0x85,
	0xbc, 0xeb, 0xe1, 0xb7, 0x7e, 0x4b, 0xe0, 0xe2, 0x30, 0x2a, 0xfb, 0x6a, 0x18, 0x21, 0x5f, 0x1a,
	0x50, 0x51, 0x03, 0x28, 0x59, 0x43, 0x27, 0x23, 0x67, 0xe0, 0xda, 0xfa, 0x48, 0x9c, 0x8a, 0xcd,
	0x5a, 0xff, 0xf2, 0x9f, 0xff, 0xfe, 0x5d, 0x69, 0xd5, 0x5a, 0x1a, 0xf8, 0xdb, 0xcc, 0x8d, 0x7e,
	0x98, 0x37, 0x30, 0xa1, 0xfc, 0x3d, 0x63, 0x93, 0xbc, 0x80, 0xf2, 0x2e, 0x15, 0xe4, 0x32, 0x1a,
	0x2e, 0x1e, 0x6c, 0x6b, 0x57, 0x8a, 0x41, 0xda, 0xf5, 0x35, 0x74, 0x7d, 0x99, 0xac, 0x16, 0xb9,
	0x6e, 0xbc, 0x08, 0xfc, 0x97, 0xe4, 0x37, 0x06, 0x54, 0xd4, 0xb8, 0xa3, 0x33, 0x30, 0x72, 0xf6,
	0xa9, 0x2d, 0x9e, 0x18, 0x44, 0xb7, 0xc3, 0x44, 0x74, 0xad, 0x07, 0xe8, 0xf5, 0x7b, 0xb5, 0x3b,
	0xc5, 0x5e, 0x87, 0x4b, 0xab, 0x1e, 0xf8, 0x2f, 0x65, 0x32, 0x38, 0x54, 0xd4, 0x1c, 0xa4, 0xe9,
	0x8c, 0x1c, 0x8a, 0x72, 0xe9, 0xe8, 0x24, 0x6c, 0x8e, 0x91, 0x84, 0x2e, 0x4c, 0x48, 0xd1, 0x12,
	0x95, 0xdd, 0x11, 0xd3, 0x73, 0xed, 0xea, 0x08, 0x94, 0xbe, 0x84, 0x2b, 0xe8, 0xff, 0x12, 0x29,
	0xbc, 0x7f, 0xf2, 0xb5, 0x01, 0xd5, 0xfe, 0x08, 0x47, 0xae, 0xa3, 0xe9, 0xf1, 0x46, 0xba, 0xdc,
	0xc0, 0x3f, 0x44, 0xc7, 0xdb, 0xd6, 0x07, 0xa7, 0xb9, 0x07, 0x27, 0xf0, 0x5f, 0xea, 0xbf, 0xcd,
	0xa1, 0x38, 0xff, 0x60, 0xc0, 0x34, 0xce, 0x03, 0x9a, 0xe1, 0x9a, 0xae, 0xc5, 0x11, 0x13, 0x42,
	0x2e, 0xb9, 0x1f, 0x22, 0x39, 0xbb, 0xf6, 0xe8, 0x75, 0xc9, 0x35, 0x5e, 0xe8, 0x47, 0xf3, 0x65,
	0x83, 0x49, 0x36, 0xe4, 0x4f, 0x06, 0xcc, 0x0c, 0x8e, 0xa1, 0xe4, 0x66, 0xbf, 0x6d, 0x8c, 0x39,
	0x99, 0xe6, 0x92, 0xb6, 0x91, 0xf4, 0x47, 0x9b, 0x3f, 0x78, 0x73, 0xa4, 0xc9, 0xbf, 0x0c, 0x78,
	0x47, 0x6a, 0x48, 0x8f, 0x36, 0x3b, 0x31, 0xcb, 0x30, 0x23, 0xb9, 0x3a, 0x3b, 0x9e, 0xe9, 0xb5,
	0x51, 0x30, 0xad, 0x47, 0x8a, 0x41, 0x38, 0xe4, 0xc7, 0xa7, 0x0e, 0x62, 0x60, 0x66, 0x6d, 0xbc,
	0x38, 0x3e, 0xd6, 0xf6, 0x23, 0x24, 0x7f, 0x34, 0x60, 0x6e, 0xb7, 0x27, 0x17, 0x8e, 0x65, 0x35,
	0x66, 0x20, 0xeb, 0xc5, 0xb0, 0xfe, 0xab, 0x61, 0x7d, 0x1f, 0x23, 0xb9, 0x4f, 0x5e, 0x5b, 0xe0,
	0xe4, 0x6f, 0x06, 0x9c, 0x43, 0xb2, 0x99, 0xbf, 0x0a, 0xd6, 0x73, 0xda, 0x6c, 0xce, 0x08, 0x58,
	0x6b, 0x8c, 0x8d, 0xd7, 0x21, 0x68, 0x45, 0x91, 0x37, 0xa9, 0xa8, 0xbf, 0x1b, 0x30, 0xa5, 0xa7,
	0x11, 0xdd, 0x48, 0xc6, 0x9b, 0x91, 0x6a, 0xef, 0x8e, 0x07, 0x3e, 0xae, 0x23, 0xeb, 0xb3, 0x57,
	0xa4, 0x7e, 0xf4, 0xae, 0xd7, 0x0b, 0xc2, 0x42, 0x94, 0x6c, 0x3c, 0x5f, 0x1b, 0x00, 0x38, 0x1b,
	0x21, 0x03, 0xa2, 0x32, 0x3c, 0xfe, 0xb0, 0x94, 0x5b, 0xcb, 0x3b, 0x48, 0xff, 0x83, 0xcd, 0x7b,
	0xa7, 0xce, 0xbc, 0xca, 0xf0, 0x9f, 0x0d, 0xa8, 0x4a, 0xad, 0x2a, 0x7a, 0xf5, 0xc2, 0x37, 0xe1,
	0x24, 0xbb, 0xc6, 0xd8, 0x78, 0x9d, 0x75, 0x4d, 0x9b, 0xbc, 0x26, 0xed, 0xfb, 0x0f, 0x61, 0x21,
	0x88, 0xeb, 0xde, 0xd3, 0x80, 0x25, 0x5c, 0xb8, 0xde, 0x33, 0xe4, 0xe1, 0xf2, 0xcf, 0xbe, 0xdb,
	0x0e, 0xc4, 0xd3, 0xf4, 0x49, 0xdd, 0x8b, 0xc3, 0xc6, 0x13, 0x16, 0x7b, 0xae, 0xcb, 0x1a, 0x47,
	0xa8, 0x1b, 0xd2, 0x69, 0x3b, 0x6e, 0x1c, 0xde, 0x6e, 0x64, 0xfe, 0x0f, 0xe6, 0x49, 0x05, 0xf3,
	0x7b, 0xfb, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xf2, 0x98, 0x75, 0x9a, 0x8e, 0x1a, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RemoteMulticastGroupServiceClient is the client API for RemoteMulticastGroupService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RemoteMulticastGroupServiceClient interface {
	// Create creates the given remote multicast-group.
	Create(ctx context.Context, in *CreateRemoteMulticastGroupRequest, opts ...grpc.CallOption) (*CreateRemoteMulticastGroupResponse, error)
	// Get returns a remote multicast-group given an ID.
	Get(ctx context.Context, in *GetRemoteMulticastGroupRequest, opts ...grpc.CallOption) (*GetRemoteMulticastGroupResponse, error)
	// Update updates the given remote multicast-group.
	Update(ctx context.Context, in *UpdateRemoteMulticastGroupRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Delete deletes a remote multicast-group given an ID.
	Delete(ctx context.Context, in *DeleteRemoteMulticastGroupRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// List lists the available remote multicast-groups.
	List(ctx context.Context, in *ListRemoteMulticastGroupRequest, opts ...grpc.CallOption) (*ListRemoteMulticastGroupResponse, error)
	// AddDevice adds the given devices to the remote multicast-group.
	AddDevice(ctx context.Context, in *AddDeviceToRemoteMulticastGroupRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// ResetDevice Restart the remote multicast process of given device.
	ResetDevice(ctx context.Context, in *ResetRemoteMulticastDeviceRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// RemoveDevice removes the given device from the remote multicast-group.
	RemoveDevice(ctx context.Context, in *RemoveDeviceFromRemoteMulticastGroupRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// ListDevicesForRemoteMulticast Lists the available pending devices for joining to
	// remote multicast-group for given application id.
	ListDevicesForRemoteMulticast(ctx context.Context, in *ListRemoteMulticastDeviceRequest, opts ...grpc.CallOption) (*ListRemoteMulticastDeviceResponse, error)
	// GetDevicesList Lists the available devices in remote multicast-groups.
	GetDevicesList(ctx context.Context, in *ListRemoteMulticastDeviceRequest, opts ...grpc.CallOption) (*ListRemoteMulticastDevicesResponse, error)
	// GetDeploymentDevice returns the deployment device.
	GetDeploymentDevice(ctx context.Context, in *GetRemoteMulticastDeploymentDeviceRequest, opts ...grpc.CallOption) (*GetRemoteMulticastDeploymentDeviceResponse, error)
	// Enqueue adds the given item to the remote multicast-queue.
	Enqueue(ctx context.Context, in *EnqueueRemoteMulticastQueueItemRequest, opts ...grpc.CallOption) (*EnqueueRemoteMulticastQueueItemResponse, error)
	// FlushQueue flushes the remote multicast-group queue.
	FlushQueue(ctx context.Context, in *FlushRemoteMulticastGroupQueueItemsRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// ListQueue lists the items in the remote multicast-group queue.
	ListQueue(ctx context.Context, in *ListRemoteMulticastGroupQueueItemsRequest, opts ...grpc.CallOption) (*ListRemoteMulticastGroupQueueItemsResponse, error)
}

type remoteMulticastGroupServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewRemoteMulticastGroupServiceClient(cc grpc.ClientConnInterface) RemoteMulticastGroupServiceClient {
	return &remoteMulticastGroupServiceClient{cc}
}

func (c *remoteMulticastGroupServiceClient) Create(ctx context.Context, in *CreateRemoteMulticastGroupRequest, opts ...grpc.CallOption) (*CreateRemoteMulticastGroupResponse, error) {
	out := new(CreateRemoteMulticastGroupResponse)
	err := c.cc.Invoke(ctx, "/api.RemoteMulticastGroupService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteMulticastGroupServiceClient) Get(ctx context.Context, in *GetRemoteMulticastGroupRequest, opts ...grpc.CallOption) (*GetRemoteMulticastGroupResponse, error) {
	out := new(GetRemoteMulticastGroupResponse)
	err := c.cc.Invoke(ctx, "/api.RemoteMulticastGroupService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteMulticastGroupServiceClient) Update(ctx context.Context, in *UpdateRemoteMulticastGroupRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.RemoteMulticastGroupService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteMulticastGroupServiceClient) Delete(ctx context.Context, in *DeleteRemoteMulticastGroupRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.RemoteMulticastGroupService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteMulticastGroupServiceClient) List(ctx context.Context, in *ListRemoteMulticastGroupRequest, opts ...grpc.CallOption) (*ListRemoteMulticastGroupResponse, error) {
	out := new(ListRemoteMulticastGroupResponse)
	err := c.cc.Invoke(ctx, "/api.RemoteMulticastGroupService/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteMulticastGroupServiceClient) AddDevice(ctx context.Context, in *AddDeviceToRemoteMulticastGroupRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.RemoteMulticastGroupService/AddDevice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteMulticastGroupServiceClient) ResetDevice(ctx context.Context, in *ResetRemoteMulticastDeviceRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.RemoteMulticastGroupService/ResetDevice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteMulticastGroupServiceClient) RemoveDevice(ctx context.Context, in *RemoveDeviceFromRemoteMulticastGroupRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.RemoteMulticastGroupService/RemoveDevice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteMulticastGroupServiceClient) ListDevicesForRemoteMulticast(ctx context.Context, in *ListRemoteMulticastDeviceRequest, opts ...grpc.CallOption) (*ListRemoteMulticastDeviceResponse, error) {
	out := new(ListRemoteMulticastDeviceResponse)
	err := c.cc.Invoke(ctx, "/api.RemoteMulticastGroupService/ListDevicesForRemoteMulticast", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteMulticastGroupServiceClient) GetDevicesList(ctx context.Context, in *ListRemoteMulticastDeviceRequest, opts ...grpc.CallOption) (*ListRemoteMulticastDevicesResponse, error) {
	out := new(ListRemoteMulticastDevicesResponse)
	err := c.cc.Invoke(ctx, "/api.RemoteMulticastGroupService/GetDevicesList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteMulticastGroupServiceClient) GetDeploymentDevice(ctx context.Context, in *GetRemoteMulticastDeploymentDeviceRequest, opts ...grpc.CallOption) (*GetRemoteMulticastDeploymentDeviceResponse, error) {
	out := new(GetRemoteMulticastDeploymentDeviceResponse)
	err := c.cc.Invoke(ctx, "/api.RemoteMulticastGroupService/GetDeploymentDevice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteMulticastGroupServiceClient) Enqueue(ctx context.Context, in *EnqueueRemoteMulticastQueueItemRequest, opts ...grpc.CallOption) (*EnqueueRemoteMulticastQueueItemResponse, error) {
	out := new(EnqueueRemoteMulticastQueueItemResponse)
	err := c.cc.Invoke(ctx, "/api.RemoteMulticastGroupService/Enqueue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteMulticastGroupServiceClient) FlushQueue(ctx context.Context, in *FlushRemoteMulticastGroupQueueItemsRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.RemoteMulticastGroupService/FlushQueue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteMulticastGroupServiceClient) ListQueue(ctx context.Context, in *ListRemoteMulticastGroupQueueItemsRequest, opts ...grpc.CallOption) (*ListRemoteMulticastGroupQueueItemsResponse, error) {
	out := new(ListRemoteMulticastGroupQueueItemsResponse)
	err := c.cc.Invoke(ctx, "/api.RemoteMulticastGroupService/ListQueue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RemoteMulticastGroupServiceServer is the server API for RemoteMulticastGroupService service.
type RemoteMulticastGroupServiceServer interface {
	// Create creates the given remote multicast-group.
	Create(context.Context, *CreateRemoteMulticastGroupRequest) (*CreateRemoteMulticastGroupResponse, error)
	// Get returns a remote multicast-group given an ID.
	Get(context.Context, *GetRemoteMulticastGroupRequest) (*GetRemoteMulticastGroupResponse, error)
	// Update updates the given remote multicast-group.
	Update(context.Context, *UpdateRemoteMulticastGroupRequest) (*empty.Empty, error)
	// Delete deletes a remote multicast-group given an ID.
	Delete(context.Context, *DeleteRemoteMulticastGroupRequest) (*empty.Empty, error)
	// List lists the available remote multicast-groups.
	List(context.Context, *ListRemoteMulticastGroupRequest) (*ListRemoteMulticastGroupResponse, error)
	// AddDevice adds the given devices to the remote multicast-group.
	AddDevice(context.Context, *AddDeviceToRemoteMulticastGroupRequest) (*empty.Empty, error)
	// ResetDevice Restart the remote multicast process of given device.
	ResetDevice(context.Context, *ResetRemoteMulticastDeviceRequest) (*empty.Empty, error)
	// RemoveDevice removes the given device from the remote multicast-group.
	RemoveDevice(context.Context, *RemoveDeviceFromRemoteMulticastGroupRequest) (*empty.Empty, error)
	// ListDevicesForRemoteMulticast Lists the available pending devices for joining to
	// remote multicast-group for given application id.
	ListDevicesForRemoteMulticast(context.Context, *ListRemoteMulticastDeviceRequest) (*ListRemoteMulticastDeviceResponse, error)
	// GetDevicesList Lists the available devices in remote multicast-groups.
	GetDevicesList(context.Context, *ListRemoteMulticastDeviceRequest) (*ListRemoteMulticastDevicesResponse, error)
	// GetDeploymentDevice returns the deployment device.
	GetDeploymentDevice(context.Context, *GetRemoteMulticastDeploymentDeviceRequest) (*GetRemoteMulticastDeploymentDeviceResponse, error)
	// Enqueue adds the given item to the remote multicast-queue.
	Enqueue(context.Context, *EnqueueRemoteMulticastQueueItemRequest) (*EnqueueRemoteMulticastQueueItemResponse, error)
	// FlushQueue flushes the remote multicast-group queue.
	FlushQueue(context.Context, *FlushRemoteMulticastGroupQueueItemsRequest) (*empty.Empty, error)
	// ListQueue lists the items in the remote multicast-group queue.
	ListQueue(context.Context, *ListRemoteMulticastGroupQueueItemsRequest) (*ListRemoteMulticastGroupQueueItemsResponse, error)
}

// UnimplementedRemoteMulticastGroupServiceServer can be embedded to have forward compatible implementations.
type UnimplementedRemoteMulticastGroupServiceServer struct {
}

func (*UnimplementedRemoteMulticastGroupServiceServer) Create(ctx context.Context, req *CreateRemoteMulticastGroupRequest) (*CreateRemoteMulticastGroupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedRemoteMulticastGroupServiceServer) Get(ctx context.Context, req *GetRemoteMulticastGroupRequest) (*GetRemoteMulticastGroupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedRemoteMulticastGroupServiceServer) Update(ctx context.Context, req *UpdateRemoteMulticastGroupRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedRemoteMulticastGroupServiceServer) Delete(ctx context.Context, req *DeleteRemoteMulticastGroupRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedRemoteMulticastGroupServiceServer) List(ctx context.Context, req *ListRemoteMulticastGroupRequest) (*ListRemoteMulticastGroupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedRemoteMulticastGroupServiceServer) AddDevice(ctx context.Context, req *AddDeviceToRemoteMulticastGroupRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddDevice not implemented")
}
func (*UnimplementedRemoteMulticastGroupServiceServer) ResetDevice(ctx context.Context, req *ResetRemoteMulticastDeviceRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ResetDevice not implemented")
}
func (*UnimplementedRemoteMulticastGroupServiceServer) RemoveDevice(ctx context.Context, req *RemoveDeviceFromRemoteMulticastGroupRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveDevice not implemented")
}
func (*UnimplementedRemoteMulticastGroupServiceServer) ListDevicesForRemoteMulticast(ctx context.Context, req *ListRemoteMulticastDeviceRequest) (*ListRemoteMulticastDeviceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListDevicesForRemoteMulticast not implemented")
}
func (*UnimplementedRemoteMulticastGroupServiceServer) GetDevicesList(ctx context.Context, req *ListRemoteMulticastDeviceRequest) (*ListRemoteMulticastDevicesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDevicesList not implemented")
}
func (*UnimplementedRemoteMulticastGroupServiceServer) GetDeploymentDevice(ctx context.Context, req *GetRemoteMulticastDeploymentDeviceRequest) (*GetRemoteMulticastDeploymentDeviceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDeploymentDevice not implemented")
}
func (*UnimplementedRemoteMulticastGroupServiceServer) Enqueue(ctx context.Context, req *EnqueueRemoteMulticastQueueItemRequest) (*EnqueueRemoteMulticastQueueItemResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Enqueue not implemented")
}
func (*UnimplementedRemoteMulticastGroupServiceServer) FlushQueue(ctx context.Context, req *FlushRemoteMulticastGroupQueueItemsRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FlushQueue not implemented")
}
func (*UnimplementedRemoteMulticastGroupServiceServer) ListQueue(ctx context.Context, req *ListRemoteMulticastGroupQueueItemsRequest) (*ListRemoteMulticastGroupQueueItemsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListQueue not implemented")
}

func RegisterRemoteMulticastGroupServiceServer(s *grpc.Server, srv RemoteMulticastGroupServiceServer) {
	s.RegisterService(&_RemoteMulticastGroupService_serviceDesc, srv)
}

func _RemoteMulticastGroupService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRemoteMulticastGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteMulticastGroupServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.RemoteMulticastGroupService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteMulticastGroupServiceServer).Create(ctx, req.(*CreateRemoteMulticastGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RemoteMulticastGroupService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRemoteMulticastGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteMulticastGroupServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.RemoteMulticastGroupService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteMulticastGroupServiceServer).Get(ctx, req.(*GetRemoteMulticastGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RemoteMulticastGroupService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRemoteMulticastGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteMulticastGroupServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.RemoteMulticastGroupService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteMulticastGroupServiceServer).Update(ctx, req.(*UpdateRemoteMulticastGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RemoteMulticastGroupService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRemoteMulticastGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteMulticastGroupServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.RemoteMulticastGroupService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteMulticastGroupServiceServer).Delete(ctx, req.(*DeleteRemoteMulticastGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RemoteMulticastGroupService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRemoteMulticastGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteMulticastGroupServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.RemoteMulticastGroupService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteMulticastGroupServiceServer).List(ctx, req.(*ListRemoteMulticastGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RemoteMulticastGroupService_AddDevice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddDeviceToRemoteMulticastGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteMulticastGroupServiceServer).AddDevice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.RemoteMulticastGroupService/AddDevice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteMulticastGroupServiceServer).AddDevice(ctx, req.(*AddDeviceToRemoteMulticastGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RemoteMulticastGroupService_ResetDevice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResetRemoteMulticastDeviceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteMulticastGroupServiceServer).ResetDevice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.RemoteMulticastGroupService/ResetDevice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteMulticastGroupServiceServer).ResetDevice(ctx, req.(*ResetRemoteMulticastDeviceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RemoteMulticastGroupService_RemoveDevice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveDeviceFromRemoteMulticastGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteMulticastGroupServiceServer).RemoveDevice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.RemoteMulticastGroupService/RemoveDevice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteMulticastGroupServiceServer).RemoveDevice(ctx, req.(*RemoveDeviceFromRemoteMulticastGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RemoteMulticastGroupService_ListDevicesForRemoteMulticast_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRemoteMulticastDeviceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteMulticastGroupServiceServer).ListDevicesForRemoteMulticast(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.RemoteMulticastGroupService/ListDevicesForRemoteMulticast",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteMulticastGroupServiceServer).ListDevicesForRemoteMulticast(ctx, req.(*ListRemoteMulticastDeviceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RemoteMulticastGroupService_GetDevicesList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRemoteMulticastDeviceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteMulticastGroupServiceServer).GetDevicesList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.RemoteMulticastGroupService/GetDevicesList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteMulticastGroupServiceServer).GetDevicesList(ctx, req.(*ListRemoteMulticastDeviceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RemoteMulticastGroupService_GetDeploymentDevice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRemoteMulticastDeploymentDeviceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteMulticastGroupServiceServer).GetDeploymentDevice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.RemoteMulticastGroupService/GetDeploymentDevice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteMulticastGroupServiceServer).GetDeploymentDevice(ctx, req.(*GetRemoteMulticastDeploymentDeviceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RemoteMulticastGroupService_Enqueue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EnqueueRemoteMulticastQueueItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteMulticastGroupServiceServer).Enqueue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.RemoteMulticastGroupService/Enqueue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteMulticastGroupServiceServer).Enqueue(ctx, req.(*EnqueueRemoteMulticastQueueItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RemoteMulticastGroupService_FlushQueue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FlushRemoteMulticastGroupQueueItemsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteMulticastGroupServiceServer).FlushQueue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.RemoteMulticastGroupService/FlushQueue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteMulticastGroupServiceServer).FlushQueue(ctx, req.(*FlushRemoteMulticastGroupQueueItemsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RemoteMulticastGroupService_ListQueue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRemoteMulticastGroupQueueItemsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteMulticastGroupServiceServer).ListQueue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.RemoteMulticastGroupService/ListQueue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteMulticastGroupServiceServer).ListQueue(ctx, req.(*ListRemoteMulticastGroupQueueItemsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RemoteMulticastGroupService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.RemoteMulticastGroupService",
	HandlerType: (*RemoteMulticastGroupServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _RemoteMulticastGroupService_Create_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _RemoteMulticastGroupService_Get_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _RemoteMulticastGroupService_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _RemoteMulticastGroupService_Delete_Handler,
		},
		{
			MethodName: "List",
			Handler:    _RemoteMulticastGroupService_List_Handler,
		},
		{
			MethodName: "AddDevice",
			Handler:    _RemoteMulticastGroupService_AddDevice_Handler,
		},
		{
			MethodName: "ResetDevice",
			Handler:    _RemoteMulticastGroupService_ResetDevice_Handler,
		},
		{
			MethodName: "RemoveDevice",
			Handler:    _RemoteMulticastGroupService_RemoveDevice_Handler,
		},
		{
			MethodName: "ListDevicesForRemoteMulticast",
			Handler:    _RemoteMulticastGroupService_ListDevicesForRemoteMulticast_Handler,
		},
		{
			MethodName: "GetDevicesList",
			Handler:    _RemoteMulticastGroupService_GetDevicesList_Handler,
		},
		{
			MethodName: "GetDeploymentDevice",
			Handler:    _RemoteMulticastGroupService_GetDeploymentDevice_Handler,
		},
		{
			MethodName: "Enqueue",
			Handler:    _RemoteMulticastGroupService_Enqueue_Handler,
		},
		{
			MethodName: "FlushQueue",
			Handler:    _RemoteMulticastGroupService_FlushQueue_Handler,
		},
		{
			MethodName: "ListQueue",
			Handler:    _RemoteMulticastGroupService_ListQueue_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "as/external/api/remoteMulticastGroup.proto",
}
