// Code generated by protoc-gen-go. DO NOT EDIT.
// source: as/external/api/fragmentationDeployment.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FragmentationDeployment struct {
	// ID of the deployment (string formatted UUID).
	// This value will be automatically assigned on create.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Name of the deployment.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Device EUI (HEX encoded).
	DevEui string `protobuf:"bytes,3,opt,name=dev_eui,json=devEUI,proto3" json:"dev_eui,omitempty"`
	// Payload.
	Payload []byte `protobuf:"bytes,4,opt,name=payload,proto3" json:"payload,omitempty"`
	// Fragmentation deployment group type.
	GroupType MulticastGroupType `protobuf:"varint,5,opt,name=group_type,json=groupType,proto3,enum=api.MulticastGroupType" json:"group_type,omitempty"`
	// Ping-slot period.
	// Mandatory for Class-B fragmentation deployment.
	PingSlotPeriod uint32 `protobuf:"varint,6,opt,name=ping_slot_period,json=pingSlotPeriod,proto3" json:"ping_slot_period,omitempty"`
	// Redundancy (number of packages).
	Redundancy uint32 `protobuf:"varint,7,opt,name=redundancy,proto3" json:"redundancy,omitempty"`
	// Unicast time-out.
	// Set this to the value in which you at least expect an uplink frame from the
	// device. The FUOTA deployment engine will wait at least for the given time
	// before proceeding with the next steps.
	UnicastTimeout *duration.Duration `protobuf:"bytes,8,opt,name=unicast_timeout,json=unicastTimeout,proto3" json:"unicast_timeout,omitempty"`
	// Deployment state.
	// This value will be automatically set on create.
	State string `protobuf:"bytes,9,opt,name=state,proto3" json:"state,omitempty"`
	// Next step after.
	// This value will be automatically set on create.
	NextStepAfter        *timestamp.Timestamp `protobuf:"bytes,10,opt,name=next_step_after,json=nextStepAfter,proto3" json:"next_step_after,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *FragmentationDeployment) Reset()         { *m = FragmentationDeployment{} }
func (m *FragmentationDeployment) String() string { return proto.CompactTextString(m) }
func (*FragmentationDeployment) ProtoMessage()    {}
func (*FragmentationDeployment) Descriptor() ([]byte, []int) {
	return fileDescriptor_722af8b07dab37c2, []int{0}
}

func (m *FragmentationDeployment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FragmentationDeployment.Unmarshal(m, b)
}
func (m *FragmentationDeployment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FragmentationDeployment.Marshal(b, m, deterministic)
}
func (m *FragmentationDeployment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FragmentationDeployment.Merge(m, src)
}
func (m *FragmentationDeployment) XXX_Size() int {
	return xxx_messageInfo_FragmentationDeployment.Size(m)
}
func (m *FragmentationDeployment) XXX_DiscardUnknown() {
	xxx_messageInfo_FragmentationDeployment.DiscardUnknown(m)
}

var xxx_messageInfo_FragmentationDeployment proto.InternalMessageInfo

func (m *FragmentationDeployment) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *FragmentationDeployment) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FragmentationDeployment) GetDevEui() string {
	if m != nil {
		return m.DevEui
	}
	return ""
}

func (m *FragmentationDeployment) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *FragmentationDeployment) GetGroupType() MulticastGroupType {
	if m != nil {
		return m.GroupType
	}
	return MulticastGroupType_CLASS_C
}

func (m *FragmentationDeployment) GetPingSlotPeriod() uint32 {
	if m != nil {
		return m.PingSlotPeriod
	}
	return 0
}

func (m *FragmentationDeployment) GetRedundancy() uint32 {
	if m != nil {
		return m.Redundancy
	}
	return 0
}

func (m *FragmentationDeployment) GetUnicastTimeout() *duration.Duration {
	if m != nil {
		return m.UnicastTimeout
	}
	return nil
}

func (m *FragmentationDeployment) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *FragmentationDeployment) GetNextStepAfter() *timestamp.Timestamp {
	if m != nil {
		return m.NextStepAfter
	}
	return nil
}

type GetFragmentationDeployment struct {
	// ID of the deployment (string formatted UUID).
	// This value will be automatically assigned on create.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Name of the deployment.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Device EUI (HEX encoded).
	DevEui string `protobuf:"bytes,3,opt,name=dev_eui,json=devEUI,proto3" json:"dev_eui,omitempty"`
	// Payload.
	Payload []byte `protobuf:"bytes,4,opt,name=payload,proto3" json:"payload,omitempty"`
	// Payload Size.
	PayloadSize uint32 `protobuf:"varint,5,opt,name=payload_size,json=payloadSize,proto3" json:"payload_size,omitempty"`
	// Fragmentation deployment group type.
	GroupType MulticastGroupType `protobuf:"varint,6,opt,name=group_type,json=groupType,proto3,enum=api.MulticastGroupType" json:"group_type,omitempty"`
	// Ping-slot period.
	// Mandatory for Class-B fragmentation deployment.
	PingSlotPeriod uint32 `protobuf:"varint,7,opt,name=ping_slot_period,json=pingSlotPeriod,proto3" json:"ping_slot_period,omitempty"`
	// Frag Size.
	FragSize uint32 `protobuf:"varint,8,opt,name=frag_size,json=fragSize,proto3" json:"frag_size,omitempty"`
	// Redundancy (number of packages).
	Redundancy uint32 `protobuf:"varint,9,opt,name=redundancy,proto3" json:"redundancy,omitempty"`
	// Unicast time-out.
	// Set this to the value in which you at least expect an uplink frame from the
	// device. The FUOTA deployment engine will wait at least for the given time
	// before proceeding with the next steps.
	UnicastTimeout *duration.Duration `protobuf:"bytes,10,opt,name=unicast_timeout,json=unicastTimeout,proto3" json:"unicast_timeout,omitempty"`
	// Deployment state.
	// This value will be automatically set on create.
	State string `protobuf:"bytes,11,opt,name=state,proto3" json:"state,omitempty"`
	// Device Deployment state.
	DeviceState string `protobuf:"bytes,12,opt,name=device_state,json=deviceState,proto3" json:"device_state,omitempty"`
	// Device Error Message.
	ErrorMessage string `protobuf:"bytes,13,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// Next step after.
	// This value will be automatically set on create.
	NextStepAfter        *timestamp.Timestamp `protobuf:"bytes,14,opt,name=next_step_after,json=nextStepAfter,proto3" json:"next_step_after,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GetFragmentationDeployment) Reset()         { *m = GetFragmentationDeployment{} }
func (m *GetFragmentationDeployment) String() string { return proto.CompactTextString(m) }
func (*GetFragmentationDeployment) ProtoMessage()    {}
func (*GetFragmentationDeployment) Descriptor() ([]byte, []int) {
	return fileDescriptor_722af8b07dab37c2, []int{1}
}

func (m *GetFragmentationDeployment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFragmentationDeployment.Unmarshal(m, b)
}
func (m *GetFragmentationDeployment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFragmentationDeployment.Marshal(b, m, deterministic)
}
func (m *GetFragmentationDeployment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFragmentationDeployment.Merge(m, src)
}
func (m *GetFragmentationDeployment) XXX_Size() int {
	return xxx_messageInfo_GetFragmentationDeployment.Size(m)
}
func (m *GetFragmentationDeployment) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFragmentationDeployment.DiscardUnknown(m)
}

var xxx_messageInfo_GetFragmentationDeployment proto.InternalMessageInfo

func (m *GetFragmentationDeployment) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *GetFragmentationDeployment) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetFragmentationDeployment) GetDevEui() string {
	if m != nil {
		return m.DevEui
	}
	return ""
}

func (m *GetFragmentationDeployment) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *GetFragmentationDeployment) GetPayloadSize() uint32 {
	if m != nil {
		return m.PayloadSize
	}
	return 0
}

func (m *GetFragmentationDeployment) GetGroupType() MulticastGroupType {
	if m != nil {
		return m.GroupType
	}
	return MulticastGroupType_CLASS_C
}

func (m *GetFragmentationDeployment) GetPingSlotPeriod() uint32 {
	if m != nil {
		return m.PingSlotPeriod
	}
	return 0
}

func (m *GetFragmentationDeployment) GetFragSize() uint32 {
	if m != nil {
		return m.FragSize
	}
	return 0
}

func (m *GetFragmentationDeployment) GetRedundancy() uint32 {
	if m != nil {
		return m.Redundancy
	}
	return 0
}

func (m *GetFragmentationDeployment) GetUnicastTimeout() *duration.Duration {
	if m != nil {
		return m.UnicastTimeout
	}
	return nil
}

func (m *GetFragmentationDeployment) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *GetFragmentationDeployment) GetDeviceState() string {
	if m != nil {
		return m.DeviceState
	}
	return ""
}

func (m *GetFragmentationDeployment) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

func (m *GetFragmentationDeployment) GetNextStepAfter() *timestamp.Timestamp {
	if m != nil {
		return m.NextStepAfter
	}
	return nil
}

type FragmentationDeploymentRequest struct {
	// Fragmentation Deployment object to create.
	FragmentationDeployment *FragmentationDeployment `protobuf:"bytes,1,opt,name=fragmentationDeployment,proto3" json:"fragmentationDeployment,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}                 `json:"-"`
	XXX_unrecognized        []byte                   `json:"-"`
	XXX_sizecache           int32                    `json:"-"`
}

func (m *FragmentationDeploymentRequest) Reset()         { *m = FragmentationDeploymentRequest{} }
func (m *FragmentationDeploymentRequest) String() string { return proto.CompactTextString(m) }
func (*FragmentationDeploymentRequest) ProtoMessage()    {}
func (*FragmentationDeploymentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_722af8b07dab37c2, []int{2}
}

func (m *FragmentationDeploymentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FragmentationDeploymentRequest.Unmarshal(m, b)
}
func (m *FragmentationDeploymentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FragmentationDeploymentRequest.Marshal(b, m, deterministic)
}
func (m *FragmentationDeploymentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FragmentationDeploymentRequest.Merge(m, src)
}
func (m *FragmentationDeploymentRequest) XXX_Size() int {
	return xxx_messageInfo_FragmentationDeploymentRequest.Size(m)
}
func (m *FragmentationDeploymentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FragmentationDeploymentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FragmentationDeploymentRequest proto.InternalMessageInfo

func (m *FragmentationDeploymentRequest) GetFragmentationDeployment() *FragmentationDeployment {
	if m != nil {
		return m.FragmentationDeployment
	}
	return nil
}

type FragmentationDeploymentResponse struct {
	// ID of created group (string formatted UUID).
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FragmentationDeploymentResponse) Reset()         { *m = FragmentationDeploymentResponse{} }
func (m *FragmentationDeploymentResponse) String() string { return proto.CompactTextString(m) }
func (*FragmentationDeploymentResponse) ProtoMessage()    {}
func (*FragmentationDeploymentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_722af8b07dab37c2, []int{3}
}

func (m *FragmentationDeploymentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FragmentationDeploymentResponse.Unmarshal(m, b)
}
func (m *FragmentationDeploymentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FragmentationDeploymentResponse.Marshal(b, m, deterministic)
}
func (m *FragmentationDeploymentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FragmentationDeploymentResponse.Merge(m, src)
}
func (m *FragmentationDeploymentResponse) XXX_Size() int {
	return xxx_messageInfo_FragmentationDeploymentResponse.Size(m)
}
func (m *FragmentationDeploymentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FragmentationDeploymentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FragmentationDeploymentResponse proto.InternalMessageInfo

func (m *FragmentationDeploymentResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetFragmentationDeploymentRequest struct {
	// ID (string formatted UUID).
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetFragmentationDeploymentRequest) Reset()         { *m = GetFragmentationDeploymentRequest{} }
func (m *GetFragmentationDeploymentRequest) String() string { return proto.CompactTextString(m) }
func (*GetFragmentationDeploymentRequest) ProtoMessage()    {}
func (*GetFragmentationDeploymentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_722af8b07dab37c2, []int{4}
}

func (m *GetFragmentationDeploymentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFragmentationDeploymentRequest.Unmarshal(m, b)
}
func (m *GetFragmentationDeploymentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFragmentationDeploymentRequest.Marshal(b, m, deterministic)
}
func (m *GetFragmentationDeploymentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFragmentationDeploymentRequest.Merge(m, src)
}
func (m *GetFragmentationDeploymentRequest) XXX_Size() int {
	return xxx_messageInfo_GetFragmentationDeploymentRequest.Size(m)
}
func (m *GetFragmentationDeploymentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFragmentationDeploymentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetFragmentationDeploymentRequest proto.InternalMessageInfo

func (m *GetFragmentationDeploymentRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetFragmentationDeploymentResponse struct {
	// Fragmentation Deployment object to create.
	FragmentationDeployment *GetFragmentationDeployment `protobuf:"bytes,1,opt,name=fragmentationDeployment,proto3" json:"fragmentationDeployment,omitempty"`
	// Created at timestamp.
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Last update timestamp.
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GetFragmentationDeploymentResponse) Reset()         { *m = GetFragmentationDeploymentResponse{} }
func (m *GetFragmentationDeploymentResponse) String() string { return proto.CompactTextString(m) }
func (*GetFragmentationDeploymentResponse) ProtoMessage()    {}
func (*GetFragmentationDeploymentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_722af8b07dab37c2, []int{5}
}

func (m *GetFragmentationDeploymentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFragmentationDeploymentResponse.Unmarshal(m, b)
}
func (m *GetFragmentationDeploymentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFragmentationDeploymentResponse.Marshal(b, m, deterministic)
}
func (m *GetFragmentationDeploymentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFragmentationDeploymentResponse.Merge(m, src)
}
func (m *GetFragmentationDeploymentResponse) XXX_Size() int {
	return xxx_messageInfo_GetFragmentationDeploymentResponse.Size(m)
}
func (m *GetFragmentationDeploymentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFragmentationDeploymentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetFragmentationDeploymentResponse proto.InternalMessageInfo

func (m *GetFragmentationDeploymentResponse) GetFragmentationDeployment() *GetFragmentationDeployment {
	if m != nil {
		return m.FragmentationDeployment
	}
	return nil
}

func (m *GetFragmentationDeploymentResponse) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *GetFragmentationDeploymentResponse) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

type UpdateFragmentationDeploymentRequest struct {
	// Fragmentation Deployment object to create.
	FragmentationDeployment *FragmentationDeployment `protobuf:"bytes,1,opt,name=fragmentation_deployment,json=fragmentationDeployment,proto3" json:"fragmentation_deployment,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}                 `json:"-"`
	XXX_unrecognized        []byte                   `json:"-"`
	XXX_sizecache           int32                    `json:"-"`
}

func (m *UpdateFragmentationDeploymentRequest) Reset()         { *m = UpdateFragmentationDeploymentRequest{} }
func (m *UpdateFragmentationDeploymentRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateFragmentationDeploymentRequest) ProtoMessage()    {}
func (*UpdateFragmentationDeploymentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_722af8b07dab37c2, []int{6}
}

func (m *UpdateFragmentationDeploymentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateFragmentationDeploymentRequest.Unmarshal(m, b)
}
func (m *UpdateFragmentationDeploymentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateFragmentationDeploymentRequest.Marshal(b, m, deterministic)
}
func (m *UpdateFragmentationDeploymentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateFragmentationDeploymentRequest.Merge(m, src)
}
func (m *UpdateFragmentationDeploymentRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateFragmentationDeploymentRequest.Size(m)
}
func (m *UpdateFragmentationDeploymentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateFragmentationDeploymentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateFragmentationDeploymentRequest proto.InternalMessageInfo

func (m *UpdateFragmentationDeploymentRequest) GetFragmentationDeployment() *FragmentationDeployment {
	if m != nil {
		return m.FragmentationDeployment
	}
	return nil
}

type DeleteFragmentationDeploymentRequest struct {
	// ID (string formatted UUID).
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteFragmentationDeploymentRequest) Reset()         { *m = DeleteFragmentationDeploymentRequest{} }
func (m *DeleteFragmentationDeploymentRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteFragmentationDeploymentRequest) ProtoMessage()    {}
func (*DeleteFragmentationDeploymentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_722af8b07dab37c2, []int{7}
}

func (m *DeleteFragmentationDeploymentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteFragmentationDeploymentRequest.Unmarshal(m, b)
}
func (m *DeleteFragmentationDeploymentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteFragmentationDeploymentRequest.Marshal(b, m, deterministic)
}
func (m *DeleteFragmentationDeploymentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteFragmentationDeploymentRequest.Merge(m, src)
}
func (m *DeleteFragmentationDeploymentRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteFragmentationDeploymentRequest.Size(m)
}
func (m *DeleteFragmentationDeploymentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteFragmentationDeploymentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteFragmentationDeploymentRequest proto.InternalMessageInfo

func (m *DeleteFragmentationDeploymentRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ListFragmentationDeploymentRequest struct {
	// Max number of items to return.
	Limit int64 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	// Offset in the result-set (for pagination).
	Offset int64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// Search can be used to search on the fragmentation deployment name.
	Search string `protobuf:"bytes,3,opt,name=search,proto3" json:"search,omitempty"`
	// Device EUI (HEX encoded).
	DevEui               string   `protobuf:"bytes,4,opt,name=dev_eui,json=devEUI,proto3" json:"dev_eui,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListFragmentationDeploymentRequest) Reset()         { *m = ListFragmentationDeploymentRequest{} }
func (m *ListFragmentationDeploymentRequest) String() string { return proto.CompactTextString(m) }
func (*ListFragmentationDeploymentRequest) ProtoMessage()    {}
func (*ListFragmentationDeploymentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_722af8b07dab37c2, []int{8}
}

func (m *ListFragmentationDeploymentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListFragmentationDeploymentRequest.Unmarshal(m, b)
}
func (m *ListFragmentationDeploymentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListFragmentationDeploymentRequest.Marshal(b, m, deterministic)
}
func (m *ListFragmentationDeploymentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListFragmentationDeploymentRequest.Merge(m, src)
}
func (m *ListFragmentationDeploymentRequest) XXX_Size() int {
	return xxx_messageInfo_ListFragmentationDeploymentRequest.Size(m)
}
func (m *ListFragmentationDeploymentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListFragmentationDeploymentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListFragmentationDeploymentRequest proto.InternalMessageInfo

func (m *ListFragmentationDeploymentRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListFragmentationDeploymentRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ListFragmentationDeploymentRequest) GetSearch() string {
	if m != nil {
		return m.Search
	}
	return ""
}

func (m *ListFragmentationDeploymentRequest) GetDevEui() string {
	if m != nil {
		return m.DevEui
	}
	return ""
}

type ListFragmentationDeploymentResponse struct {
	// Total number of fragmentation deployments.
	TotalCount           int64                         `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	Result               []*GetFragmentationDeployment `protobuf:"bytes,2,rep,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *ListFragmentationDeploymentResponse) Reset()         { *m = ListFragmentationDeploymentResponse{} }
func (m *ListFragmentationDeploymentResponse) String() string { return proto.CompactTextString(m) }
func (*ListFragmentationDeploymentResponse) ProtoMessage()    {}
func (*ListFragmentationDeploymentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_722af8b07dab37c2, []int{9}
}

func (m *ListFragmentationDeploymentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListFragmentationDeploymentResponse.Unmarshal(m, b)
}
func (m *ListFragmentationDeploymentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListFragmentationDeploymentResponse.Marshal(b, m, deterministic)
}
func (m *ListFragmentationDeploymentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListFragmentationDeploymentResponse.Merge(m, src)
}
func (m *ListFragmentationDeploymentResponse) XXX_Size() int {
	return xxx_messageInfo_ListFragmentationDeploymentResponse.Size(m)
}
func (m *ListFragmentationDeploymentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListFragmentationDeploymentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListFragmentationDeploymentResponse proto.InternalMessageInfo

func (m *ListFragmentationDeploymentResponse) GetTotalCount() int64 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *ListFragmentationDeploymentResponse) GetResult() []*GetFragmentationDeployment {
	if m != nil {
		return m.Result
	}
	return nil
}

func init() {
	proto.RegisterType((*FragmentationDeployment)(nil), "api.FragmentationDeployment")
	proto.RegisterType((*GetFragmentationDeployment)(nil), "api.GetFragmentationDeployment")
	proto.RegisterType((*FragmentationDeploymentRequest)(nil), "api.FragmentationDeploymentRequest")
	proto.RegisterType((*FragmentationDeploymentResponse)(nil), "api.FragmentationDeploymentResponse")
	proto.RegisterType((*GetFragmentationDeploymentRequest)(nil), "api.GetFragmentationDeploymentRequest")
	proto.RegisterType((*GetFragmentationDeploymentResponse)(nil), "api.GetFragmentationDeploymentResponse")
	proto.RegisterType((*UpdateFragmentationDeploymentRequest)(nil), "api.UpdateFragmentationDeploymentRequest")
	proto.RegisterType((*DeleteFragmentationDeploymentRequest)(nil), "api.DeleteFragmentationDeploymentRequest")
	proto.RegisterType((*ListFragmentationDeploymentRequest)(nil), "api.ListFragmentationDeploymentRequest")
	proto.RegisterType((*ListFragmentationDeploymentResponse)(nil), "api.ListFragmentationDeploymentResponse")
}

func init() {
	proto.RegisterFile("as/external/api/fragmentationDeployment.proto", fileDescriptor_722af8b07dab37c2)
}

var fileDescriptor_722af8b07dab37c2 = []byte{
	// 921 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x56, 0x5d, 0x6b, 0x1b, 0x47,
	0x17, 0x66, 0x2d, 0x59, 0xb6, 0x8e, 0x3e, 0xde, 0x97, 0x69, 0x1a, 0x6f, 0xe5, 0x60, 0xcb, 0x6b,
	0xd3, 0xaa, 0x81, 0x48, 0xc4, 0x06, 0x87, 0x94, 0xde, 0x38, 0x71, 0x6a, 0x0a, 0x0d, 0x94, 0x95,
	0xd3, 0xd2, 0xde, 0x2c, 0xe3, 0xdd, 0x23, 0x79, 0xe8, 0xee, 0xce, 0x76, 0x66, 0x56, 0x58, 0x29,
	0x21, 0x90, 0x5e, 0xf5, 0xae, 0xd0, 0xcb, 0xfe, 0xac, 0xfe, 0x85, 0xfe, 0x85, 0xde, 0x97, 0x9d,
	0x19, 0x81, 0x2d, 0x6b, 0x25, 0xf7, 0x83, 0xde, 0xed, 0x39, 0xf3, 0x9c, 0xcf, 0xe7, 0x99, 0x61,
	0xe1, 0x11, 0x95, 0x03, 0xbc, 0x52, 0x28, 0x52, 0x1a, 0x0f, 0x68, 0xc6, 0x06, 0x23, 0x41, 0xc7,
	0x09, 0xa6, 0x8a, 0x2a, 0xc6, 0xd3, 0x53, 0xcc, 0x62, 0x3e, 0x2d, 0xcc, 0x7e, 0x26, 0xb8, 0xe2,
	0xa4, 0x42, 0x33, 0xd6, 0x79, 0x30, 0xe6, 0x7c, 0x1c, 0xa3, 0x86, 0xd3, 0x34, 0xe5, 0x06, 0x2b,
	0x0d, 0xa4, 0xb3, 0x6b, 0x4f, 0xb5, 0x75, 0x91, 0x8f, 0x06, 0x8a, 0x25, 0x28, 0x15, 0x4d, 0x32,
	0x0b, 0xd8, 0x99, 0x07, 0x44, 0xb9, 0xd0, 0x19, 0xec, 0xf9, 0xf6, 0xfc, 0x39, 0x26, 0x99, 0x9a,
	0xda, 0xc3, 0x83, 0xf9, 0x7e, 0x93, 0x3c, 0x56, 0x2c, 0xa4, 0x52, 0x9d, 0x09, 0x9e, 0xdb, 0x12,
	0xde, 0xcf, 0x15, 0xd8, 0xfa, 0x6c, 0xf1, 0x20, 0xa4, 0x0d, 0x6b, 0x2c, 0x72, 0x9d, 0xae, 0xd3,
	0xab, 0xfb, 0x6b, 0x2c, 0x22, 0x04, 0xaa, 0x29, 0x4d, 0xd0, 0x5d, 0xd3, 0x1e, 0xfd, 0x4d, 0xb6,
	0x60, 0x23, 0xc2, 0x49, 0x80, 0x39, 0x73, 0x2b, 0xda, 0x5d, 0x8b, 0x70, 0xf2, 0xe2, 0xd5, 0xe7,
	0xc4, 0x85, 0x8d, 0x8c, 0x4e, 0x63, 0x4e, 0x23, 0xb7, 0xda, 0x75, 0x7a, 0x4d, 0x7f, 0x66, 0x92,
	0x63, 0x80, 0x71, 0xd1, 0x41, 0xa0, 0xa6, 0x19, 0xba, 0xeb, 0x5d, 0xa7, 0xd7, 0x3e, 0xdc, 0xea,
	0xd3, 0x8c, 0xf5, 0x5f, 0xde, 0xe8, 0xf0, 0x7c, 0x9a, 0xa1, 0x5f, 0x1f, 0xcf, 0x3e, 0x49, 0x0f,
	0xfe, 0x9f, 0xb1, 0x74, 0x1c, 0xc8, 0x98, 0xab, 0x20, 0x43, 0xc1, 0x78, 0xe4, 0xd6, 0xba, 0x4e,
	0xaf, 0xe5, 0xb7, 0x0b, 0xff, 0x30, 0xe6, 0xea, 0x4b, 0xed, 0x25, 0x3b, 0x00, 0x02, 0xa3, 0x3c,
	0x8d, 0x68, 0x1a, 0x4e, 0xdd, 0x0d, 0x8d, 0xb9, 0xe6, 0x21, 0xcf, 0xe0, 0x7f, 0x79, 0xaa, 0x0b,
	0x05, 0xc5, 0xca, 0x79, 0xae, 0xdc, 0xcd, 0xae, 0xd3, 0x6b, 0x1c, 0x7e, 0xd0, 0x37, 0x1b, 0xed,
	0xcf, 0x36, 0xda, 0x3f, 0xb5, 0x1b, 0xf7, 0xdb, 0x36, 0xe2, 0xdc, 0x04, 0x90, 0x7b, 0xb0, 0x2e,
	0x15, 0x55, 0xe8, 0xd6, 0xf5, 0xd8, 0xc6, 0x28, 0x32, 0xa7, 0x78, 0xa5, 0x02, 0xa9, 0x30, 0x0b,
	0xe8, 0x48, 0xa1, 0x70, 0x41, 0x67, 0xee, 0xdc, 0xca, 0x7c, 0x3e, 0x23, 0xdb, 0x6f, 0x15, 0x21,
	0x43, 0x85, 0xd9, 0x49, 0x11, 0xe0, 0xfd, 0x5a, 0x85, 0xce, 0x19, 0xaa, 0xff, 0x98, 0x95, 0x3d,
	0x68, 0xda, 0xcf, 0x40, 0xb2, 0xd7, 0x86, 0x97, 0x96, 0xdf, 0xb0, 0xbe, 0x21, 0x7b, 0x8d, 0x73,
	0xc4, 0xd5, 0xfe, 0x11, 0x71, 0x1b, 0x0b, 0x89, 0xdb, 0x86, 0x7a, 0x71, 0xab, 0x4c, 0x07, 0x9b,
	0x1a, 0xb2, 0x59, 0x38, 0x74, 0xf9, 0x9b, 0xac, 0xd6, 0xef, 0xc2, 0x2a, 0xfc, 0x6d, 0x56, 0x1b,
	0xd7, 0x59, 0xdd, 0x83, 0x66, 0x84, 0x13, 0x16, 0x62, 0x60, 0x0e, 0x9b, 0xfa, 0xb0, 0x61, 0x7c,
	0x43, 0x0d, 0xd9, 0x87, 0x16, 0x0a, 0xc1, 0x45, 0x90, 0xa0, 0x94, 0x74, 0x8c, 0x6e, 0x4b, 0x63,
	0x9a, 0xda, 0xf9, 0xd2, 0xf8, 0x16, 0xa9, 0xa3, 0xfd, 0x57, 0xd5, 0x71, 0x05, 0x3b, 0x25, 0xca,
	0xf0, 0xf1, 0xfb, 0x1c, 0xa5, 0x22, 0x5f, 0xc1, 0x56, 0xc9, 0xd3, 0xa4, 0x55, 0xd3, 0x38, 0x7c,
	0xa0, 0x39, 0x2b, 0xcb, 0x52, 0x16, 0xec, 0x3d, 0x86, 0xdd, 0xd2, 0xca, 0x32, 0xe3, 0xa9, 0xc4,
	0x79, 0x6d, 0x7a, 0x47, 0xb0, 0x57, 0xae, 0xe4, 0x59, 0xbf, 0xf3, 0x41, 0x7f, 0x38, 0xe0, 0x2d,
	0x8b, 0xb2, 0xb5, 0xbe, 0x59, 0x35, 0xe6, 0xae, 0x1e, 0x73, 0x49, 0xa6, 0xb2, 0x78, 0xf2, 0x14,
	0x20, 0x14, 0x48, 0x15, 0x46, 0x01, 0x55, 0xfa, 0x62, 0x2d, 0xa7, 0xa8, 0x6e, 0xd1, 0x27, 0x3a,
	0x34, 0xcf, 0xa2, 0x59, 0x68, 0x65, 0x75, 0xa8, 0x45, 0x9f, 0x28, 0xef, 0x2d, 0x1c, 0xbc, 0xd2,
	0xc6, 0x8a, 0x7d, 0x7d, 0x0d, 0xee, 0x8d, 0xc6, 0x83, 0xe8, 0x5f, 0x22, 0xf8, 0x18, 0x0e, 0x4e,
	0x31, 0xc6, 0x95, 0x0d, 0xcc, 0x13, 0xf6, 0xa3, 0x03, 0xde, 0x17, 0x4c, 0xae, 0xe2, 0xf9, 0x1e,
	0xac, 0xc7, 0x2c, 0x61, 0xa6, 0xc9, 0x8a, 0x6f, 0x0c, 0x72, 0x1f, 0x6a, 0x7c, 0x34, 0x92, 0x68,
	0xf6, 0x5c, 0xf1, 0xad, 0x55, 0xf8, 0x25, 0x52, 0x11, 0x5e, 0xce, 0x5e, 0x30, 0x63, 0x5d, 0x7f,
	0xda, 0xaa, 0xd7, 0x9f, 0x36, 0xef, 0x2d, 0xec, 0x2f, 0x6d, 0xc2, 0xca, 0x66, 0x17, 0x1a, 0x8a,
	0x2b, 0x1a, 0x07, 0x21, 0xcf, 0xd3, 0x59, 0x2f, 0xa0, 0x5d, 0xcf, 0x0b, 0x0f, 0x79, 0x02, 0x35,
	0x81, 0x32, 0x8f, 0x8b, 0x86, 0x2a, 0x77, 0x91, 0x91, 0x85, 0x1f, 0xbe, 0x5b, 0x2f, 0xbd, 0x9a,
	0x43, 0x14, 0xc5, 0x53, 0x41, 0x24, 0xd4, 0x9e, 0x6b, 0xa9, 0x90, 0xfd, 0xa5, 0x14, 0x99, 0x8d,
	0x75, 0x0e, 0x96, 0x83, 0xcc, 0x44, 0xde, 0xce, 0xbb, 0xdf, 0x7e, 0xff, 0x65, 0xcd, 0xf5, 0xde,
	0xbb, 0xfd, 0x57, 0x22, 0x3f, 0x71, 0x1e, 0x92, 0x2b, 0xa8, 0x9c, 0xa1, 0x22, 0x1f, 0xae, 0x9a,
	0xc3, 0x16, 0xfd, 0x68, 0x25, 0xce, 0xd6, 0xed, 0xea, 0xba, 0x1d, 0xe2, 0x2e, 0xa8, 0x3b, 0xf8,
	0x81, 0x45, 0x6f, 0xc8, 0x4f, 0x0e, 0xd4, 0x8c, 0xa4, 0xc9, 0xc7, 0x3a, 0xeb, 0x5d, 0xf4, 0xdd,
	0xb9, 0x7f, 0xeb, 0xba, 0xbc, 0x28, 0x7e, 0x6b, 0xbc, 0x4f, 0x75, 0xbd, 0xe3, 0xce, 0xe3, 0x85,
	0xf5, 0xca, 0xae, 0x44, 0x9f, 0x45, 0x6f, 0x8a, 0x2d, 0x24, 0x50, 0x33, 0xe2, 0xb6, 0xad, 0xdc,
	0x45, 0xe9, 0xa5, 0xad, 0xd8, 0xd1, 0x1f, 0x96, 0x8f, 0x3e, 0x81, 0x6a, 0xa1, 0x46, 0x62, 0xb6,
	0xb9, 0xfa, 0x76, 0x74, 0x7a, 0xab, 0x81, 0x76, 0xef, 0xdb, 0xba, 0xf8, 0xfb, 0x64, 0x11, 0xdf,
	0xcf, 0x9e, 0x7e, 0xfb, 0x64, 0xcc, 0xd4, 0x65, 0x7e, 0xd1, 0x0f, 0x79, 0x32, 0xb8, 0x10, 0x3c,
	0xa4, 0x54, 0x0c, 0xc2, 0x4b, 0x26, 0x32, 0xa9, 0x68, 0xf8, 0xdd, 0xa3, 0x22, 0x66, 0xcc, 0x07,
	0x93, 0xa3, 0xc1, 0xdc, 0xff, 0xe1, 0x45, 0x4d, 0x0f, 0x79, 0xf4, 0x67, 0x00, 0x00, 0x00, 0xff,
	0xff, 0xba, 0x0c, 0xcc, 0xc5, 0xe9, 0x0a, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// FragmentationDeploymentServiceClient is the client API for FragmentationDeploymentService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FragmentationDeploymentServiceClient interface {
	// Create creates the given fragmentation deployment for given DevEUI.
	Create(ctx context.Context, in *FragmentationDeploymentRequest, opts ...grpc.CallOption) (*FragmentationDeploymentResponse, error)
	// Get returns a fragmentation deployment given an ID.
	Get(ctx context.Context, in *GetFragmentationDeploymentRequest, opts ...grpc.CallOption) (*GetFragmentationDeploymentResponse, error)
	// Update updates the given fragmentation deployment.
	Update(ctx context.Context, in *UpdateFragmentationDeploymentRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Delete deletes a fragmentation deployment given an ID.
	Delete(ctx context.Context, in *DeleteFragmentationDeploymentRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// List lists the available fragmentation deployment.
	List(ctx context.Context, in *ListFragmentationDeploymentRequest, opts ...grpc.CallOption) (*ListFragmentationDeploymentResponse, error)
}

type fragmentationDeploymentServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewFragmentationDeploymentServiceClient(cc grpc.ClientConnInterface) FragmentationDeploymentServiceClient {
	return &fragmentationDeploymentServiceClient{cc}
}

func (c *fragmentationDeploymentServiceClient) Create(ctx context.Context, in *FragmentationDeploymentRequest, opts ...grpc.CallOption) (*FragmentationDeploymentResponse, error) {
	out := new(FragmentationDeploymentResponse)
	err := c.cc.Invoke(ctx, "/api.FragmentationDeploymentService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fragmentationDeploymentServiceClient) Get(ctx context.Context, in *GetFragmentationDeploymentRequest, opts ...grpc.CallOption) (*GetFragmentationDeploymentResponse, error) {
	out := new(GetFragmentationDeploymentResponse)
	err := c.cc.Invoke(ctx, "/api.FragmentationDeploymentService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fragmentationDeploymentServiceClient) Update(ctx context.Context, in *UpdateFragmentationDeploymentRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.FragmentationDeploymentService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fragmentationDeploymentServiceClient) Delete(ctx context.Context, in *DeleteFragmentationDeploymentRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.FragmentationDeploymentService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fragmentationDeploymentServiceClient) List(ctx context.Context, in *ListFragmentationDeploymentRequest, opts ...grpc.CallOption) (*ListFragmentationDeploymentResponse, error) {
	out := new(ListFragmentationDeploymentResponse)
	err := c.cc.Invoke(ctx, "/api.FragmentationDeploymentService/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FragmentationDeploymentServiceServer is the server API for FragmentationDeploymentService service.
type FragmentationDeploymentServiceServer interface {
	// Create creates the given fragmentation deployment for given DevEUI.
	Create(context.Context, *FragmentationDeploymentRequest) (*FragmentationDeploymentResponse, error)
	// Get returns a fragmentation deployment given an ID.
	Get(context.Context, *GetFragmentationDeploymentRequest) (*GetFragmentationDeploymentResponse, error)
	// Update updates the given fragmentation deployment.
	Update(context.Context, *UpdateFragmentationDeploymentRequest) (*empty.Empty, error)
	// Delete deletes a fragmentation deployment given an ID.
	Delete(context.Context, *DeleteFragmentationDeploymentRequest) (*empty.Empty, error)
	// List lists the available fragmentation deployment.
	List(context.Context, *ListFragmentationDeploymentRequest) (*ListFragmentationDeploymentResponse, error)
}

// UnimplementedFragmentationDeploymentServiceServer can be embedded to have forward compatible implementations.
type UnimplementedFragmentationDeploymentServiceServer struct {
}

func (*UnimplementedFragmentationDeploymentServiceServer) Create(ctx context.Context, req *FragmentationDeploymentRequest) (*FragmentationDeploymentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedFragmentationDeploymentServiceServer) Get(ctx context.Context, req *GetFragmentationDeploymentRequest) (*GetFragmentationDeploymentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedFragmentationDeploymentServiceServer) Update(ctx context.Context, req *UpdateFragmentationDeploymentRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedFragmentationDeploymentServiceServer) Delete(ctx context.Context, req *DeleteFragmentationDeploymentRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedFragmentationDeploymentServiceServer) List(ctx context.Context, req *ListFragmentationDeploymentRequest) (*ListFragmentationDeploymentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}

func RegisterFragmentationDeploymentServiceServer(s *grpc.Server, srv FragmentationDeploymentServiceServer) {
	s.RegisterService(&_FragmentationDeploymentService_serviceDesc, srv)
}

func _FragmentationDeploymentService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FragmentationDeploymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FragmentationDeploymentServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.FragmentationDeploymentService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FragmentationDeploymentServiceServer).Create(ctx, req.(*FragmentationDeploymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FragmentationDeploymentService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFragmentationDeploymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FragmentationDeploymentServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.FragmentationDeploymentService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FragmentationDeploymentServiceServer).Get(ctx, req.(*GetFragmentationDeploymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FragmentationDeploymentService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateFragmentationDeploymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FragmentationDeploymentServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.FragmentationDeploymentService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FragmentationDeploymentServiceServer).Update(ctx, req.(*UpdateFragmentationDeploymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FragmentationDeploymentService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteFragmentationDeploymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FragmentationDeploymentServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.FragmentationDeploymentService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FragmentationDeploymentServiceServer).Delete(ctx, req.(*DeleteFragmentationDeploymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FragmentationDeploymentService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListFragmentationDeploymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FragmentationDeploymentServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.FragmentationDeploymentService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FragmentationDeploymentServiceServer).List(ctx, req.(*ListFragmentationDeploymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _FragmentationDeploymentService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.FragmentationDeploymentService",
	HandlerType: (*FragmentationDeploymentServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _FragmentationDeploymentService_Create_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _FragmentationDeploymentService_Get_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _FragmentationDeploymentService_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _FragmentationDeploymentService_Delete_Handler,
		},
		{
			MethodName: "List",
			Handler:    _FragmentationDeploymentService_List_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "as/external/api/fragmentationDeployment.proto",
}
