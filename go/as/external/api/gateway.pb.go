// Code generated by protoc-gen-go. DO NOT EDIT.
// source: as/external/api/gateway.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	common "github.com/sagar-patel-sls/chirpstack-api/go/v3/common"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ISMBand int32

const (
	ISMBand_IN865   ISMBand = 0
	ISMBand_EU868   ISMBand = 1
	ISMBand_US915   ISMBand = 2
	ISMBand_CN779   ISMBand = 3
	ISMBand_EU433   ISMBand = 4
	ISMBand_AU915   ISMBand = 5
	ISMBand_CN470   ISMBand = 6
	ISMBand_AS923   ISMBand = 7
	ISMBand_AS923_2 ISMBand = 8
	ISMBand_AS923_3 ISMBand = 9
	ISMBand_AS923_4 ISMBand = 10
	ISMBand_KR920   ISMBand = 11
	ISMBand_RU864   ISMBand = 12
	ISMBand_ISM2400 ISMBand = 13
)

var ISMBand_name = map[int32]string{
	0:  "IN865",
	1:  "EU868",
	2:  "US915",
	3:  "CN779",
	4:  "EU433",
	5:  "AU915",
	6:  "CN470",
	7:  "AS923",
	8:  "AS923_2",
	9:  "AS923_3",
	10: "AS923_4",
	11: "KR920",
	12: "RU864",
	13: "ISM2400",
}

var ISMBand_value = map[string]int32{
	"IN865":   0,
	"EU868":   1,
	"US915":   2,
	"CN779":   3,
	"EU433":   4,
	"AU915":   5,
	"CN470":   6,
	"AS923":   7,
	"AS923_2": 8,
	"AS923_3": 9,
	"AS923_4": 10,
	"KR920":   11,
	"RU864":   12,
	"ISM2400": 13,
}

func (x ISMBand) String() string {
	return proto.EnumName(ISMBand_name, int32(x))
}

func (ISMBand) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f909ac54118d345f, []int{0}
}

type Gateway struct {
	// Gateway ID (HEX encoded).
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Gateway name.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Gateway description.
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Gateway location.
	Location *common.Location `protobuf:"bytes,4,opt,name=location,proto3" json:"location,omitempty"`
	// Organization ID to which the gateway belongs.
	// This can't be changed after creating the gateway.
	OrganizationId int64 `protobuf:"varint,5,opt,name=organization_id,json=organizationID,proto3" json:"organization_id,omitempty"`
	// Set to true to enable gateway discovery.
	DiscoveryEnabled bool `protobuf:"varint,6,opt,name=discovery_enabled,json=discoveryEnabled,proto3" json:"discovery_enabled,omitempty"`
	// Network-server ID on which the gateway is provisioned.
	NetworkServerId int64 `protobuf:"varint,7,opt,name=network_server_id,json=networkServerID,proto3" json:"network_server_id,omitempty"`
	// Gateway-profile ID (UUID string, optional).
	GatewayProfileId string `protobuf:"bytes,8,opt,name=gateway_profile_id,json=gatewayProfileID,proto3" json:"gateway_profile_id,omitempty"`
	// Gateway boards configuration (optional).
	// This is (currently) only needed when the gateway supports the fine-timestamp
	// and you you would like to add the FPGA ID to the gateway meta-data or would
	// like ChirpStack Network Server to decrypt the fine-timestamp.
	Boards []*GatewayBoard `protobuf:"bytes,9,rep,name=boards,proto3" json:"boards,omitempty"`
	// Tags (user defined).
	Tags map[string]string `protobuf:"bytes,10,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Metadata (provided by the gateway).
	Metadata map[string]string `protobuf:"bytes,11,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Service-profile ID (UUID string, optional).
	ServiceProfileId string `protobuf:"bytes,12,opt,name=service_profile_id,json=serviceProfileID,proto3" json:"service_profile_id,omitempty"`
	// Set to true to enable gateway stat notification on global integration.
	StatNotification     bool     `protobuf:"varint,13,opt,name=stat_notification,json=statNotification,proto3" json:"stat_notification,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Gateway) Reset()         { *m = Gateway{} }
func (m *Gateway) String() string { return proto.CompactTextString(m) }
func (*Gateway) ProtoMessage()    {}
func (*Gateway) Descriptor() ([]byte, []int) {
	return fileDescriptor_f909ac54118d345f, []int{0}
}

func (m *Gateway) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Gateway.Unmarshal(m, b)
}
func (m *Gateway) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Gateway.Marshal(b, m, deterministic)
}
func (m *Gateway) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Gateway.Merge(m, src)
}
func (m *Gateway) XXX_Size() int {
	return xxx_messageInfo_Gateway.Size(m)
}
func (m *Gateway) XXX_DiscardUnknown() {
	xxx_messageInfo_Gateway.DiscardUnknown(m)
}

var xxx_messageInfo_Gateway proto.InternalMessageInfo

func (m *Gateway) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Gateway) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Gateway) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Gateway) GetLocation() *common.Location {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *Gateway) GetOrganizationId() int64 {
	if m != nil {
		return m.OrganizationId
	}
	return 0
}

func (m *Gateway) GetDiscoveryEnabled() bool {
	if m != nil {
		return m.DiscoveryEnabled
	}
	return false
}

func (m *Gateway) GetNetworkServerId() int64 {
	if m != nil {
		return m.NetworkServerId
	}
	return 0
}

func (m *Gateway) GetGatewayProfileId() string {
	if m != nil {
		return m.GatewayProfileId
	}
	return ""
}

func (m *Gateway) GetBoards() []*GatewayBoard {
	if m != nil {
		return m.Boards
	}
	return nil
}

func (m *Gateway) GetTags() map[string]string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Gateway) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *Gateway) GetServiceProfileId() string {
	if m != nil {
		return m.ServiceProfileId
	}
	return ""
}

func (m *Gateway) GetStatNotification() bool {
	if m != nil {
		return m.StatNotification
	}
	return false
}

type GatewayBoard struct {
	// FPGA ID of the gateway (HEX encoded) (optional).
	FpgaId string `protobuf:"bytes,1,opt,name=fpga_id,json=fpgaID,proto3" json:"fpga_id,omitempty"`
	// Fine-timestamp AES decryption key (HEX encoded) (optional).
	FineTimestampKey     string   `protobuf:"bytes,2,opt,name=fine_timestamp_key,json=fineTimestampKey,proto3" json:"fine_timestamp_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GatewayBoard) Reset()         { *m = GatewayBoard{} }
func (m *GatewayBoard) String() string { return proto.CompactTextString(m) }
func (*GatewayBoard) ProtoMessage()    {}
func (*GatewayBoard) Descriptor() ([]byte, []int) {
	return fileDescriptor_f909ac54118d345f, []int{1}
}

func (m *GatewayBoard) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GatewayBoard.Unmarshal(m, b)
}
func (m *GatewayBoard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GatewayBoard.Marshal(b, m, deterministic)
}
func (m *GatewayBoard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GatewayBoard.Merge(m, src)
}
func (m *GatewayBoard) XXX_Size() int {
	return xxx_messageInfo_GatewayBoard.Size(m)
}
func (m *GatewayBoard) XXX_DiscardUnknown() {
	xxx_messageInfo_GatewayBoard.DiscardUnknown(m)
}

var xxx_messageInfo_GatewayBoard proto.InternalMessageInfo

func (m *GatewayBoard) GetFpgaId() string {
	if m != nil {
		return m.FpgaId
	}
	return ""
}

func (m *GatewayBoard) GetFineTimestampKey() string {
	if m != nil {
		return m.FineTimestampKey
	}
	return ""
}

type CreateGatewayRequest struct {
	// Gateway object to create.
	Gateway              *Gateway `protobuf:"bytes,1,opt,name=gateway,proto3" json:"gateway,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateGatewayRequest) Reset()         { *m = CreateGatewayRequest{} }
func (m *CreateGatewayRequest) String() string { return proto.CompactTextString(m) }
func (*CreateGatewayRequest) ProtoMessage()    {}
func (*CreateGatewayRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f909ac54118d345f, []int{2}
}

func (m *CreateGatewayRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateGatewayRequest.Unmarshal(m, b)
}
func (m *CreateGatewayRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateGatewayRequest.Marshal(b, m, deterministic)
}
func (m *CreateGatewayRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateGatewayRequest.Merge(m, src)
}
func (m *CreateGatewayRequest) XXX_Size() int {
	return xxx_messageInfo_CreateGatewayRequest.Size(m)
}
func (m *CreateGatewayRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateGatewayRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateGatewayRequest proto.InternalMessageInfo

func (m *CreateGatewayRequest) GetGateway() *Gateway {
	if m != nil {
		return m.Gateway
	}
	return nil
}

type GetGatewayRequest struct {
	// Gateway ID (HEX encoded).
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetGatewayRequest) Reset()         { *m = GetGatewayRequest{} }
func (m *GetGatewayRequest) String() string { return proto.CompactTextString(m) }
func (*GetGatewayRequest) ProtoMessage()    {}
func (*GetGatewayRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f909ac54118d345f, []int{3}
}

func (m *GetGatewayRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetGatewayRequest.Unmarshal(m, b)
}
func (m *GetGatewayRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetGatewayRequest.Marshal(b, m, deterministic)
}
func (m *GetGatewayRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGatewayRequest.Merge(m, src)
}
func (m *GetGatewayRequest) XXX_Size() int {
	return xxx_messageInfo_GetGatewayRequest.Size(m)
}
func (m *GetGatewayRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGatewayRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetGatewayRequest proto.InternalMessageInfo

func (m *GetGatewayRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetGatewayResponse struct {
	// Gateway object.
	Gateway *Gateway `protobuf:"bytes,1,opt,name=gateway,proto3" json:"gateway,omitempty"`
	// Created at timestamp.
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Last update timestamp.
	UpdatedAt *timestamp.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// First seen at timestamp.
	FirstSeenAt *timestamp.Timestamp `protobuf:"bytes,4,opt,name=first_seen_at,json=firstSeenAt,proto3" json:"first_seen_at,omitempty"`
	// Last seen at timestamp.
	LastSeenAt *timestamp.Timestamp `protobuf:"bytes,5,opt,name=last_seen_at,json=lastSeenAt,proto3" json:"last_seen_at,omitempty"`
	// Gateway Connection Stat.
	ConnStat             string   `protobuf:"bytes,6,opt,name=conn_stat,json=connStat,proto3" json:"conn_stat,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetGatewayResponse) Reset()         { *m = GetGatewayResponse{} }
func (m *GetGatewayResponse) String() string { return proto.CompactTextString(m) }
func (*GetGatewayResponse) ProtoMessage()    {}
func (*GetGatewayResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f909ac54118d345f, []int{4}
}

func (m *GetGatewayResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetGatewayResponse.Unmarshal(m, b)
}
func (m *GetGatewayResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetGatewayResponse.Marshal(b, m, deterministic)
}
func (m *GetGatewayResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGatewayResponse.Merge(m, src)
}
func (m *GetGatewayResponse) XXX_Size() int {
	return xxx_messageInfo_GetGatewayResponse.Size(m)
}
func (m *GetGatewayResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGatewayResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetGatewayResponse proto.InternalMessageInfo

func (m *GetGatewayResponse) GetGateway() *Gateway {
	if m != nil {
		return m.Gateway
	}
	return nil
}

func (m *GetGatewayResponse) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *GetGatewayResponse) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *GetGatewayResponse) GetFirstSeenAt() *timestamp.Timestamp {
	if m != nil {
		return m.FirstSeenAt
	}
	return nil
}

func (m *GetGatewayResponse) GetLastSeenAt() *timestamp.Timestamp {
	if m != nil {
		return m.LastSeenAt
	}
	return nil
}

func (m *GetGatewayResponse) GetConnStat() string {
	if m != nil {
		return m.ConnStat
	}
	return ""
}

type DeleteGatewayRequest struct {
	// Gateway ID (HEX encoded).
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteGatewayRequest) Reset()         { *m = DeleteGatewayRequest{} }
func (m *DeleteGatewayRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteGatewayRequest) ProtoMessage()    {}
func (*DeleteGatewayRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f909ac54118d345f, []int{5}
}

func (m *DeleteGatewayRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteGatewayRequest.Unmarshal(m, b)
}
func (m *DeleteGatewayRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteGatewayRequest.Marshal(b, m, deterministic)
}
func (m *DeleteGatewayRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteGatewayRequest.Merge(m, src)
}
func (m *DeleteGatewayRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteGatewayRequest.Size(m)
}
func (m *DeleteGatewayRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteGatewayRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteGatewayRequest proto.InternalMessageInfo

func (m *DeleteGatewayRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GenerateGatewayClientCertificateRequest struct {
	// Gateway ID (HEX encoded).
	GatewayId            string   `protobuf:"bytes,1,opt,name=gateway_id,json=gatewayId,proto3" json:"gateway_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GenerateGatewayClientCertificateRequest) Reset() {
	*m = GenerateGatewayClientCertificateRequest{}
}
func (m *GenerateGatewayClientCertificateRequest) String() string { return proto.CompactTextString(m) }
func (*GenerateGatewayClientCertificateRequest) ProtoMessage()    {}
func (*GenerateGatewayClientCertificateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f909ac54118d345f, []int{6}
}

func (m *GenerateGatewayClientCertificateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GenerateGatewayClientCertificateRequest.Unmarshal(m, b)
}
func (m *GenerateGatewayClientCertificateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GenerateGatewayClientCertificateRequest.Marshal(b, m, deterministic)
}
func (m *GenerateGatewayClientCertificateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenerateGatewayClientCertificateRequest.Merge(m, src)
}
func (m *GenerateGatewayClientCertificateRequest) XXX_Size() int {
	return xxx_messageInfo_GenerateGatewayClientCertificateRequest.Size(m)
}
func (m *GenerateGatewayClientCertificateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GenerateGatewayClientCertificateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GenerateGatewayClientCertificateRequest proto.InternalMessageInfo

func (m *GenerateGatewayClientCertificateRequest) GetGatewayId() string {
	if m != nil {
		return m.GatewayId
	}
	return ""
}

type GenerateGatewayClientCertificateResponse struct {
	// TLS certificate.
	TlsCert string `protobuf:"bytes,1,opt,name=tls_cert,json=tlsCert,proto3" json:"tls_cert,omitempty"`
	// TLS key.
	TlsKey string `protobuf:"bytes,2,opt,name=tls_key,json=tlsKey,proto3" json:"tls_key,omitempty"`
	// CA certificate.
	CaCert string `protobuf:"bytes,3,opt,name=ca_cert,json=caCert,proto3" json:"ca_cert,omitempty"`
	// Expires at defines the expiration date of the certificate.
	ExpiresAt            *timestamp.Timestamp `protobuf:"bytes,4,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GenerateGatewayClientCertificateResponse) Reset() {
	*m = GenerateGatewayClientCertificateResponse{}
}
func (m *GenerateGatewayClientCertificateResponse) String() string { return proto.CompactTextString(m) }
func (*GenerateGatewayClientCertificateResponse) ProtoMessage()    {}
func (*GenerateGatewayClientCertificateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f909ac54118d345f, []int{7}
}

func (m *GenerateGatewayClientCertificateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GenerateGatewayClientCertificateResponse.Unmarshal(m, b)
}
func (m *GenerateGatewayClientCertificateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GenerateGatewayClientCertificateResponse.Marshal(b, m, deterministic)
}
func (m *GenerateGatewayClientCertificateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenerateGatewayClientCertificateResponse.Merge(m, src)
}
func (m *GenerateGatewayClientCertificateResponse) XXX_Size() int {
	return xxx_messageInfo_GenerateGatewayClientCertificateResponse.Size(m)
}
func (m *GenerateGatewayClientCertificateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GenerateGatewayClientCertificateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GenerateGatewayClientCertificateResponse proto.InternalMessageInfo

func (m *GenerateGatewayClientCertificateResponse) GetTlsCert() string {
	if m != nil {
		return m.TlsCert
	}
	return ""
}

func (m *GenerateGatewayClientCertificateResponse) GetTlsKey() string {
	if m != nil {
		return m.TlsKey
	}
	return ""
}

func (m *GenerateGatewayClientCertificateResponse) GetCaCert() string {
	if m != nil {
		return m.CaCert
	}
	return ""
}

func (m *GenerateGatewayClientCertificateResponse) GetExpiresAt() *timestamp.Timestamp {
	if m != nil {
		return m.ExpiresAt
	}
	return nil
}

type ListGatewayRequest struct {
	// Max number of nodes to return in the result-set.
	Limit int32 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	// Offset of the result-set (for pagination).
	Offset int32 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// ID of the organization for which to filter on, when left blank the
	// response will return all gateways to which the user has access to.
	OrganizationId int64 `protobuf:"varint,3,opt,name=organization_id,json=organizationID,proto3" json:"organization_id,omitempty"`
	// Search on name or gateway MAC (optional).
	Search               string   `protobuf:"bytes,4,opt,name=search,proto3" json:"search,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListGatewayRequest) Reset()         { *m = ListGatewayRequest{} }
func (m *ListGatewayRequest) String() string { return proto.CompactTextString(m) }
func (*ListGatewayRequest) ProtoMessage()    {}
func (*ListGatewayRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f909ac54118d345f, []int{8}
}

func (m *ListGatewayRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListGatewayRequest.Unmarshal(m, b)
}
func (m *ListGatewayRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListGatewayRequest.Marshal(b, m, deterministic)
}
func (m *ListGatewayRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListGatewayRequest.Merge(m, src)
}
func (m *ListGatewayRequest) XXX_Size() int {
	return xxx_messageInfo_ListGatewayRequest.Size(m)
}
func (m *ListGatewayRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListGatewayRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListGatewayRequest proto.InternalMessageInfo

func (m *ListGatewayRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListGatewayRequest) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ListGatewayRequest) GetOrganizationId() int64 {
	if m != nil {
		return m.OrganizationId
	}
	return 0
}

func (m *ListGatewayRequest) GetSearch() string {
	if m != nil {
		return m.Search
	}
	return ""
}

type GatewayListItem struct {
	// Gateway ID (HEX encoded).
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// A name for the gateway
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// A description for the gateway
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Create timestamp.
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Last update timestamp.
	UpdatedAt *timestamp.Timestamp `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// First seen timestamp.
	FirstSeenAt *timestamp.Timestamp `protobuf:"bytes,8,opt,name=first_seen_at,json=firstSeenAt,proto3" json:"first_seen_at,omitempty"`
	// Last seen timestamp.
	LastSeenAt *timestamp.Timestamp `protobuf:"bytes,9,opt,name=last_seen_at,json=lastSeenAt,proto3" json:"last_seen_at,omitempty"`
	// Organization ID.
	OrganizationId int64 `protobuf:"varint,6,opt,name=organization_id,json=organizationID,proto3" json:"organization_id,omitempty"`
	// Network-server ID.
	NetworkServerId int64 `protobuf:"varint,7,opt,name=network_server_id,json=networkServerID,proto3" json:"network_server_id,omitempty"`
	// Location.
	Location *common.Location `protobuf:"bytes,10,opt,name=location,proto3" json:"location,omitempty"`
	// Network-server name.
	NetworkServerName string `protobuf:"bytes,11,opt,name=network_server_name,json=networkServerName,proto3" json:"network_server_name,omitempty"`
	// Gateway Connection Stat.
	ConnStat             string   `protobuf:"bytes,12,opt,name=conn_stat,json=connStat,proto3" json:"conn_stat,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GatewayListItem) Reset()         { *m = GatewayListItem{} }
func (m *GatewayListItem) String() string { return proto.CompactTextString(m) }
func (*GatewayListItem) ProtoMessage()    {}
func (*GatewayListItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_f909ac54118d345f, []int{9}
}

func (m *GatewayListItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GatewayListItem.Unmarshal(m, b)
}
func (m *GatewayListItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GatewayListItem.Marshal(b, m, deterministic)
}
func (m *GatewayListItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GatewayListItem.Merge(m, src)
}
func (m *GatewayListItem) XXX_Size() int {
	return xxx_messageInfo_GatewayListItem.Size(m)
}
func (m *GatewayListItem) XXX_DiscardUnknown() {
	xxx_messageInfo_GatewayListItem.DiscardUnknown(m)
}

var xxx_messageInfo_GatewayListItem proto.InternalMessageInfo

func (m *GatewayListItem) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *GatewayListItem) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GatewayListItem) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *GatewayListItem) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *GatewayListItem) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *GatewayListItem) GetFirstSeenAt() *timestamp.Timestamp {
	if m != nil {
		return m.FirstSeenAt
	}
	return nil
}

func (m *GatewayListItem) GetLastSeenAt() *timestamp.Timestamp {
	if m != nil {
		return m.LastSeenAt
	}
	return nil
}

func (m *GatewayListItem) GetOrganizationId() int64 {
	if m != nil {
		return m.OrganizationId
	}
	return 0
}

func (m *GatewayListItem) GetNetworkServerId() int64 {
	if m != nil {
		return m.NetworkServerId
	}
	return 0
}

func (m *GatewayListItem) GetLocation() *common.Location {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *GatewayListItem) GetNetworkServerName() string {
	if m != nil {
		return m.NetworkServerName
	}
	return ""
}

func (m *GatewayListItem) GetConnStat() string {
	if m != nil {
		return m.ConnStat
	}
	return ""
}

type ListGatewayResponse struct {
	// Total number of nodes available within the result-set.
	TotalCount int64 `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	// Nodes within this result-set.
	Result               []*GatewayListItem `protobuf:"bytes,2,rep,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ListGatewayResponse) Reset()         { *m = ListGatewayResponse{} }
func (m *ListGatewayResponse) String() string { return proto.CompactTextString(m) }
func (*ListGatewayResponse) ProtoMessage()    {}
func (*ListGatewayResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f909ac54118d345f, []int{10}
}

func (m *ListGatewayResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListGatewayResponse.Unmarshal(m, b)
}
func (m *ListGatewayResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListGatewayResponse.Marshal(b, m, deterministic)
}
func (m *ListGatewayResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListGatewayResponse.Merge(m, src)
}
func (m *ListGatewayResponse) XXX_Size() int {
	return xxx_messageInfo_ListGatewayResponse.Size(m)
}
func (m *ListGatewayResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListGatewayResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListGatewayResponse proto.InternalMessageInfo

func (m *ListGatewayResponse) GetTotalCount() int64 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *ListGatewayResponse) GetResult() []*GatewayListItem {
	if m != nil {
		return m.Result
	}
	return nil
}

type UpdateGatewayRequest struct {
	// Gateway object to update.
	Gateway              *Gateway `protobuf:"bytes,1,opt,name=gateway,proto3" json:"gateway,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateGatewayRequest) Reset()         { *m = UpdateGatewayRequest{} }
func (m *UpdateGatewayRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateGatewayRequest) ProtoMessage()    {}
func (*UpdateGatewayRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f909ac54118d345f, []int{11}
}

func (m *UpdateGatewayRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateGatewayRequest.Unmarshal(m, b)
}
func (m *UpdateGatewayRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateGatewayRequest.Marshal(b, m, deterministic)
}
func (m *UpdateGatewayRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateGatewayRequest.Merge(m, src)
}
func (m *UpdateGatewayRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateGatewayRequest.Size(m)
}
func (m *UpdateGatewayRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateGatewayRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateGatewayRequest proto.InternalMessageInfo

func (m *UpdateGatewayRequest) GetGateway() *Gateway {
	if m != nil {
		return m.Gateway
	}
	return nil
}

type GatewayStats struct {
	// Timestamp of the (aggregated) measurement.
	Timestamp *timestamp.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Packets received by the gateway.
	RxPacketsReceived int32 `protobuf:"varint,2,opt,name=rx_packets_received,json=rxPacketsReceived,proto3" json:"rx_packets_received,omitempty"`
	// Packets received by the gateway that passed the CRC check.
	RxPacketsReceivedOk int32 `protobuf:"varint,3,opt,name=rx_packets_received_ok,json=rxPacketsReceivedOK,proto3" json:"rx_packets_received_ok,omitempty"`
	// Packets received by the gateway for transmission.
	TxPacketsReceived int32 `protobuf:"varint,4,opt,name=tx_packets_received,json=txPacketsReceived,proto3" json:"tx_packets_received,omitempty"`
	// Packets transmitted by the gateway.
	TxPacketsEmitted int32 `protobuf:"varint,5,opt,name=tx_packets_emitted,json=txPacketsEmitted,proto3" json:"tx_packets_emitted,omitempty"`
	// Tx packets per frequency.
	TxPacketsPerFrequency map[uint32]uint32 `protobuf:"bytes,6,rep,name=tx_packets_per_frequency,json=txPacketsPerFrequency,proto3" json:"tx_packets_per_frequency,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	// Rx packets per frequency.
	RxPacketsPerFrequency map[uint32]uint32 `protobuf:"bytes,7,rep,name=rx_packets_per_frequency,json=rxPacketsPerFrequency,proto3" json:"rx_packets_per_frequency,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	// Tx packets per DR.
	TxPacketsPerDr map[uint32]uint32 `protobuf:"bytes,8,rep,name=tx_packets_per_dr,json=txPacketsPerDr,proto3" json:"tx_packets_per_dr,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	// Rx packets per DR.
	RxPacketsPerDr map[uint32]uint32 `protobuf:"bytes,9,rep,name=rx_packets_per_dr,json=rxPacketsPerDr,proto3" json:"rx_packets_per_dr,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	// Tx packets per status.
	TxPacketsPerStatus   map[string]uint32 `protobuf:"bytes,10,rep,name=tx_packets_per_status,json=txPacketsPerStatus,proto3" json:"tx_packets_per_status,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GatewayStats) Reset()         { *m = GatewayStats{} }
func (m *GatewayStats) String() string { return proto.CompactTextString(m) }
func (*GatewayStats) ProtoMessage()    {}
func (*GatewayStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_f909ac54118d345f, []int{12}
}

func (m *GatewayStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GatewayStats.Unmarshal(m, b)
}
func (m *GatewayStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GatewayStats.Marshal(b, m, deterministic)
}
func (m *GatewayStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GatewayStats.Merge(m, src)
}
func (m *GatewayStats) XXX_Size() int {
	return xxx_messageInfo_GatewayStats.Size(m)
}
func (m *GatewayStats) XXX_DiscardUnknown() {
	xxx_messageInfo_GatewayStats.DiscardUnknown(m)
}

var xxx_messageInfo_GatewayStats proto.InternalMessageInfo

func (m *GatewayStats) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *GatewayStats) GetRxPacketsReceived() int32 {
	if m != nil {
		return m.RxPacketsReceived
	}
	return 0
}

func (m *GatewayStats) GetRxPacketsReceivedOk() int32 {
	if m != nil {
		return m.RxPacketsReceivedOk
	}
	return 0
}

func (m *GatewayStats) GetTxPacketsReceived() int32 {
	if m != nil {
		return m.TxPacketsReceived
	}
	return 0
}

func (m *GatewayStats) GetTxPacketsEmitted() int32 {
	if m != nil {
		return m.TxPacketsEmitted
	}
	return 0
}

func (m *GatewayStats) GetTxPacketsPerFrequency() map[uint32]uint32 {
	if m != nil {
		return m.TxPacketsPerFrequency
	}
	return nil
}

func (m *GatewayStats) GetRxPacketsPerFrequency() map[uint32]uint32 {
	if m != nil {
		return m.RxPacketsPerFrequency
	}
	return nil
}

func (m *GatewayStats) GetTxPacketsPerDr() map[uint32]uint32 {
	if m != nil {
		return m.TxPacketsPerDr
	}
	return nil
}

func (m *GatewayStats) GetRxPacketsPerDr() map[uint32]uint32 {
	if m != nil {
		return m.RxPacketsPerDr
	}
	return nil
}

func (m *GatewayStats) GetTxPacketsPerStatus() map[string]uint32 {
	if m != nil {
		return m.TxPacketsPerStatus
	}
	return nil
}

type GetGatewayStatsRequest struct {
	// Gateway ID (HEX encoded).
	GatewayId string `protobuf:"bytes,1,opt,name=gateway_id,json=gatewayID,proto3" json:"gateway_id,omitempty"`
	// Aggregation interval.  One of "second", "minute", "hour", "day", "week",
	// "month", "quarter", "year".  Case insensitive.
	Interval string `protobuf:"bytes,2,opt,name=interval,proto3" json:"interval,omitempty"`
	// Timestamp to start from.
	StartTimestamp *timestamp.Timestamp `protobuf:"bytes,3,opt,name=start_timestamp,json=startTimestamp,proto3" json:"start_timestamp,omitempty"`
	// Timestamp until to get from.
	EndTimestamp         *timestamp.Timestamp `protobuf:"bytes,4,opt,name=end_timestamp,json=endTimestamp,proto3" json:"end_timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GetGatewayStatsRequest) Reset()         { *m = GetGatewayStatsRequest{} }
func (m *GetGatewayStatsRequest) String() string { return proto.CompactTextString(m) }
func (*GetGatewayStatsRequest) ProtoMessage()    {}
func (*GetGatewayStatsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f909ac54118d345f, []int{13}
}

func (m *GetGatewayStatsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetGatewayStatsRequest.Unmarshal(m, b)
}
func (m *GetGatewayStatsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetGatewayStatsRequest.Marshal(b, m, deterministic)
}
func (m *GetGatewayStatsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGatewayStatsRequest.Merge(m, src)
}
func (m *GetGatewayStatsRequest) XXX_Size() int {
	return xxx_messageInfo_GetGatewayStatsRequest.Size(m)
}
func (m *GetGatewayStatsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGatewayStatsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetGatewayStatsRequest proto.InternalMessageInfo

func (m *GetGatewayStatsRequest) GetGatewayId() string {
	if m != nil {
		return m.GatewayId
	}
	return ""
}

func (m *GetGatewayStatsRequest) GetInterval() string {
	if m != nil {
		return m.Interval
	}
	return ""
}

func (m *GetGatewayStatsRequest) GetStartTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.StartTimestamp
	}
	return nil
}

func (m *GetGatewayStatsRequest) GetEndTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.EndTimestamp
	}
	return nil
}

type GetGatewayStatsResponse struct {
	Result               []*GatewayStats `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *GetGatewayStatsResponse) Reset()         { *m = GetGatewayStatsResponse{} }
func (m *GetGatewayStatsResponse) String() string { return proto.CompactTextString(m) }
func (*GetGatewayStatsResponse) ProtoMessage()    {}
func (*GetGatewayStatsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f909ac54118d345f, []int{14}
}

func (m *GetGatewayStatsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetGatewayStatsResponse.Unmarshal(m, b)
}
func (m *GetGatewayStatsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetGatewayStatsResponse.Marshal(b, m, deterministic)
}
func (m *GetGatewayStatsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGatewayStatsResponse.Merge(m, src)
}
func (m *GetGatewayStatsResponse) XXX_Size() int {
	return xxx_messageInfo_GetGatewayStatsResponse.Size(m)
}
func (m *GetGatewayStatsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGatewayStatsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetGatewayStatsResponse proto.InternalMessageInfo

func (m *GetGatewayStatsResponse) GetResult() []*GatewayStats {
	if m != nil {
		return m.Result
	}
	return nil
}

type PingRX struct {
	// Gateway ID (HEX encoded).
	GatewayId string `protobuf:"bytes,1,opt,name=gateway_id,json=gatewayID,proto3" json:"gateway_id,omitempty"`
	// RSSI.
	Rssi int32 `protobuf:"varint,2,opt,name=rssi,proto3" json:"rssi,omitempty"`
	// LoRa SNR.
	LoraSnr float64 `protobuf:"fixed64,3,opt,name=lora_snr,json=loRaSNR,proto3" json:"lora_snr,omitempty"`
	// Latitude of the gateway -90.0 to 90.0.
	Latitude float64 `protobuf:"fixed64,4,opt,name=latitude,proto3" json:"latitude,omitempty"`
	// Longitude of the gateway -180.0 to 180.0.
	Longitude float64 `protobuf:"fixed64,5,opt,name=longitude,proto3" json:"longitude,omitempty"`
	// Altitude of the gateway in meters.
	Altitude             float64  `protobuf:"fixed64,6,opt,name=altitude,proto3" json:"altitude,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingRX) Reset()         { *m = PingRX{} }
func (m *PingRX) String() string { return proto.CompactTextString(m) }
func (*PingRX) ProtoMessage()    {}
func (*PingRX) Descriptor() ([]byte, []int) {
	return fileDescriptor_f909ac54118d345f, []int{15}
}

func (m *PingRX) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingRX.Unmarshal(m, b)
}
func (m *PingRX) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingRX.Marshal(b, m, deterministic)
}
func (m *PingRX) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingRX.Merge(m, src)
}
func (m *PingRX) XXX_Size() int {
	return xxx_messageInfo_PingRX.Size(m)
}
func (m *PingRX) XXX_DiscardUnknown() {
	xxx_messageInfo_PingRX.DiscardUnknown(m)
}

var xxx_messageInfo_PingRX proto.InternalMessageInfo

func (m *PingRX) GetGatewayId() string {
	if m != nil {
		return m.GatewayId
	}
	return ""
}

func (m *PingRX) GetRssi() int32 {
	if m != nil {
		return m.Rssi
	}
	return 0
}

func (m *PingRX) GetLoraSnr() float64 {
	if m != nil {
		return m.LoraSnr
	}
	return 0
}

func (m *PingRX) GetLatitude() float64 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *PingRX) GetLongitude() float64 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

func (m *PingRX) GetAltitude() float64 {
	if m != nil {
		return m.Altitude
	}
	return 0
}

type GetLastPingRequest struct {
	// Gateway ID (HEX encoded).
	GatewayId            string   `protobuf:"bytes,1,opt,name=gateway_id,json=gatewayID,proto3" json:"gateway_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetLastPingRequest) Reset()         { *m = GetLastPingRequest{} }
func (m *GetLastPingRequest) String() string { return proto.CompactTextString(m) }
func (*GetLastPingRequest) ProtoMessage()    {}
func (*GetLastPingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f909ac54118d345f, []int{16}
}

func (m *GetLastPingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLastPingRequest.Unmarshal(m, b)
}
func (m *GetLastPingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLastPingRequest.Marshal(b, m, deterministic)
}
func (m *GetLastPingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLastPingRequest.Merge(m, src)
}
func (m *GetLastPingRequest) XXX_Size() int {
	return xxx_messageInfo_GetLastPingRequest.Size(m)
}
func (m *GetLastPingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLastPingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetLastPingRequest proto.InternalMessageInfo

func (m *GetLastPingRequest) GetGatewayId() string {
	if m != nil {
		return m.GatewayId
	}
	return ""
}

type GetLastPingResponse struct {
	// Created at timestamp.
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,1,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Frequency (Hz).
	Frequency uint32 `protobuf:"varint,2,opt,name=frequency,proto3" json:"frequency,omitempty"`
	// Data-rate.
	Dr uint32 `protobuf:"varint,3,opt,name=dr,proto3" json:"dr,omitempty"`
	// Gateways and meta-data of reception.
	PingRx               []*PingRX `protobuf:"bytes,4,rep,name=ping_rx,json=pingRX,proto3" json:"ping_rx,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GetLastPingResponse) Reset()         { *m = GetLastPingResponse{} }
func (m *GetLastPingResponse) String() string { return proto.CompactTextString(m) }
func (*GetLastPingResponse) ProtoMessage()    {}
func (*GetLastPingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f909ac54118d345f, []int{17}
}

func (m *GetLastPingResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLastPingResponse.Unmarshal(m, b)
}
func (m *GetLastPingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLastPingResponse.Marshal(b, m, deterministic)
}
func (m *GetLastPingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLastPingResponse.Merge(m, src)
}
func (m *GetLastPingResponse) XXX_Size() int {
	return xxx_messageInfo_GetLastPingResponse.Size(m)
}
func (m *GetLastPingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLastPingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetLastPingResponse proto.InternalMessageInfo

func (m *GetLastPingResponse) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *GetLastPingResponse) GetFrequency() uint32 {
	if m != nil {
		return m.Frequency
	}
	return 0
}

func (m *GetLastPingResponse) GetDr() uint32 {
	if m != nil {
		return m.Dr
	}
	return 0
}

func (m *GetLastPingResponse) GetPingRx() []*PingRX {
	if m != nil {
		return m.PingRx
	}
	return nil
}

type StreamGatewayFrameLogsRequest struct {
	// Gateway ID (HEX encoded).
	GatewayId            string   `protobuf:"bytes,1,opt,name=gateway_id,json=gatewayID,proto3" json:"gateway_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamGatewayFrameLogsRequest) Reset()         { *m = StreamGatewayFrameLogsRequest{} }
func (m *StreamGatewayFrameLogsRequest) String() string { return proto.CompactTextString(m) }
func (*StreamGatewayFrameLogsRequest) ProtoMessage()    {}
func (*StreamGatewayFrameLogsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f909ac54118d345f, []int{18}
}

func (m *StreamGatewayFrameLogsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamGatewayFrameLogsRequest.Unmarshal(m, b)
}
func (m *StreamGatewayFrameLogsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamGatewayFrameLogsRequest.Marshal(b, m, deterministic)
}
func (m *StreamGatewayFrameLogsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamGatewayFrameLogsRequest.Merge(m, src)
}
func (m *StreamGatewayFrameLogsRequest) XXX_Size() int {
	return xxx_messageInfo_StreamGatewayFrameLogsRequest.Size(m)
}
func (m *StreamGatewayFrameLogsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamGatewayFrameLogsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StreamGatewayFrameLogsRequest proto.InternalMessageInfo

func (m *StreamGatewayFrameLogsRequest) GetGatewayId() string {
	if m != nil {
		return m.GatewayId
	}
	return ""
}

type StreamGatewayFrameLogsResponse struct {
	// Types that are valid to be assigned to Frame:
	//	*StreamGatewayFrameLogsResponse_UplinkFrame
	//	*StreamGatewayFrameLogsResponse_DownlinkFrame
	Frame                isStreamGatewayFrameLogsResponse_Frame `protobuf_oneof:"frame"`
	XXX_NoUnkeyedLiteral struct{}                               `json:"-"`
	XXX_unrecognized     []byte                                 `json:"-"`
	XXX_sizecache        int32                                  `json:"-"`
}

func (m *StreamGatewayFrameLogsResponse) Reset()         { *m = StreamGatewayFrameLogsResponse{} }
func (m *StreamGatewayFrameLogsResponse) String() string { return proto.CompactTextString(m) }
func (*StreamGatewayFrameLogsResponse) ProtoMessage()    {}
func (*StreamGatewayFrameLogsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f909ac54118d345f, []int{19}
}

func (m *StreamGatewayFrameLogsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamGatewayFrameLogsResponse.Unmarshal(m, b)
}
func (m *StreamGatewayFrameLogsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamGatewayFrameLogsResponse.Marshal(b, m, deterministic)
}
func (m *StreamGatewayFrameLogsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamGatewayFrameLogsResponse.Merge(m, src)
}
func (m *StreamGatewayFrameLogsResponse) XXX_Size() int {
	return xxx_messageInfo_StreamGatewayFrameLogsResponse.Size(m)
}
func (m *StreamGatewayFrameLogsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamGatewayFrameLogsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StreamGatewayFrameLogsResponse proto.InternalMessageInfo

type isStreamGatewayFrameLogsResponse_Frame interface {
	isStreamGatewayFrameLogsResponse_Frame()
}

type StreamGatewayFrameLogsResponse_UplinkFrame struct {
	UplinkFrame *UplinkFrameLog `protobuf:"bytes,1,opt,name=uplink_frame,json=uplinkFrame,proto3,oneof"`
}

type StreamGatewayFrameLogsResponse_DownlinkFrame struct {
	DownlinkFrame *DownlinkFrameLog `protobuf:"bytes,2,opt,name=downlink_frame,json=downlinkFrame,proto3,oneof"`
}

func (*StreamGatewayFrameLogsResponse_UplinkFrame) isStreamGatewayFrameLogsResponse_Frame() {}

func (*StreamGatewayFrameLogsResponse_DownlinkFrame) isStreamGatewayFrameLogsResponse_Frame() {}

func (m *StreamGatewayFrameLogsResponse) GetFrame() isStreamGatewayFrameLogsResponse_Frame {
	if m != nil {
		return m.Frame
	}
	return nil
}

func (m *StreamGatewayFrameLogsResponse) GetUplinkFrame() *UplinkFrameLog {
	if x, ok := m.GetFrame().(*StreamGatewayFrameLogsResponse_UplinkFrame); ok {
		return x.UplinkFrame
	}
	return nil
}

func (m *StreamGatewayFrameLogsResponse) GetDownlinkFrame() *DownlinkFrameLog {
	if x, ok := m.GetFrame().(*StreamGatewayFrameLogsResponse_DownlinkFrame); ok {
		return x.DownlinkFrame
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*StreamGatewayFrameLogsResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*StreamGatewayFrameLogsResponse_UplinkFrame)(nil),
		(*StreamGatewayFrameLogsResponse_DownlinkFrame)(nil),
	}
}

type StreamGlobalGatewayFrameLogsRequest struct {
	// Organization ID.
	OrganizationId int64 `protobuf:"varint,1,opt,name=organization_id,json=organizationID,proto3" json:"organization_id,omitempty"`
	//LoRaWAN ISM Band (Regions).
	Region               ISMBand  `protobuf:"varint,2,opt,name=region,proto3,enum=api.ISMBand" json:"region,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamGlobalGatewayFrameLogsRequest) Reset()         { *m = StreamGlobalGatewayFrameLogsRequest{} }
func (m *StreamGlobalGatewayFrameLogsRequest) String() string { return proto.CompactTextString(m) }
func (*StreamGlobalGatewayFrameLogsRequest) ProtoMessage()    {}
func (*StreamGlobalGatewayFrameLogsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f909ac54118d345f, []int{20}
}

func (m *StreamGlobalGatewayFrameLogsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamGlobalGatewayFrameLogsRequest.Unmarshal(m, b)
}
func (m *StreamGlobalGatewayFrameLogsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamGlobalGatewayFrameLogsRequest.Marshal(b, m, deterministic)
}
func (m *StreamGlobalGatewayFrameLogsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamGlobalGatewayFrameLogsRequest.Merge(m, src)
}
func (m *StreamGlobalGatewayFrameLogsRequest) XXX_Size() int {
	return xxx_messageInfo_StreamGlobalGatewayFrameLogsRequest.Size(m)
}
func (m *StreamGlobalGatewayFrameLogsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamGlobalGatewayFrameLogsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StreamGlobalGatewayFrameLogsRequest proto.InternalMessageInfo

func (m *StreamGlobalGatewayFrameLogsRequest) GetOrganizationId() int64 {
	if m != nil {
		return m.OrganizationId
	}
	return 0
}

func (m *StreamGlobalGatewayFrameLogsRequest) GetRegion() ISMBand {
	if m != nil {
		return m.Region
	}
	return ISMBand_IN865
}

type StreamGlobalGatewayFrameLogsResponse struct {
	// Gateway ID (HEX encoded).
	GatewayEui string `protobuf:"bytes,1,opt,name=gateway_eui,json=gatewayEUI,proto3" json:"gateway_eui,omitempty"`
	// Types that are valid to be assigned to Frame:
	//	*StreamGlobalGatewayFrameLogsResponse_UplinkFrame
	//	*StreamGlobalGatewayFrameLogsResponse_DownlinkFrame
	Frame                isStreamGlobalGatewayFrameLogsResponse_Frame `protobuf_oneof:"frame"`
	XXX_NoUnkeyedLiteral struct{}                                     `json:"-"`
	XXX_unrecognized     []byte                                       `json:"-"`
	XXX_sizecache        int32                                        `json:"-"`
}

func (m *StreamGlobalGatewayFrameLogsResponse) Reset()         { *m = StreamGlobalGatewayFrameLogsResponse{} }
func (m *StreamGlobalGatewayFrameLogsResponse) String() string { return proto.CompactTextString(m) }
func (*StreamGlobalGatewayFrameLogsResponse) ProtoMessage()    {}
func (*StreamGlobalGatewayFrameLogsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f909ac54118d345f, []int{21}
}

func (m *StreamGlobalGatewayFrameLogsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamGlobalGatewayFrameLogsResponse.Unmarshal(m, b)
}
func (m *StreamGlobalGatewayFrameLogsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamGlobalGatewayFrameLogsResponse.Marshal(b, m, deterministic)
}
func (m *StreamGlobalGatewayFrameLogsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamGlobalGatewayFrameLogsResponse.Merge(m, src)
}
func (m *StreamGlobalGatewayFrameLogsResponse) XXX_Size() int {
	return xxx_messageInfo_StreamGlobalGatewayFrameLogsResponse.Size(m)
}
func (m *StreamGlobalGatewayFrameLogsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamGlobalGatewayFrameLogsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StreamGlobalGatewayFrameLogsResponse proto.InternalMessageInfo

func (m *StreamGlobalGatewayFrameLogsResponse) GetGatewayEui() string {
	if m != nil {
		return m.GatewayEui
	}
	return ""
}

type isStreamGlobalGatewayFrameLogsResponse_Frame interface {
	isStreamGlobalGatewayFrameLogsResponse_Frame()
}

type StreamGlobalGatewayFrameLogsResponse_UplinkFrame struct {
	UplinkFrame *UplinkFrameLog `protobuf:"bytes,2,opt,name=uplink_frame,json=uplinkFrame,proto3,oneof"`
}

type StreamGlobalGatewayFrameLogsResponse_DownlinkFrame struct {
	DownlinkFrame *DownlinkFrameLog `protobuf:"bytes,3,opt,name=downlink_frame,json=downlinkFrame,proto3,oneof"`
}

func (*StreamGlobalGatewayFrameLogsResponse_UplinkFrame) isStreamGlobalGatewayFrameLogsResponse_Frame() {
}

func (*StreamGlobalGatewayFrameLogsResponse_DownlinkFrame) isStreamGlobalGatewayFrameLogsResponse_Frame() {
}

func (m *StreamGlobalGatewayFrameLogsResponse) GetFrame() isStreamGlobalGatewayFrameLogsResponse_Frame {
	if m != nil {
		return m.Frame
	}
	return nil
}

func (m *StreamGlobalGatewayFrameLogsResponse) GetUplinkFrame() *UplinkFrameLog {
	if x, ok := m.GetFrame().(*StreamGlobalGatewayFrameLogsResponse_UplinkFrame); ok {
		return x.UplinkFrame
	}
	return nil
}

func (m *StreamGlobalGatewayFrameLogsResponse) GetDownlinkFrame() *DownlinkFrameLog {
	if x, ok := m.GetFrame().(*StreamGlobalGatewayFrameLogsResponse_DownlinkFrame); ok {
		return x.DownlinkFrame
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*StreamGlobalGatewayFrameLogsResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*StreamGlobalGatewayFrameLogsResponse_UplinkFrame)(nil),
		(*StreamGlobalGatewayFrameLogsResponse_DownlinkFrame)(nil),
	}
}

func init() {
	proto.RegisterEnum("api.ISMBand", ISMBand_name, ISMBand_value)
	proto.RegisterType((*Gateway)(nil), "api.Gateway")
	proto.RegisterMapType((map[string]string)(nil), "api.Gateway.MetadataEntry")
	proto.RegisterMapType((map[string]string)(nil), "api.Gateway.TagsEntry")
	proto.RegisterType((*GatewayBoard)(nil), "api.GatewayBoard")
	proto.RegisterType((*CreateGatewayRequest)(nil), "api.CreateGatewayRequest")
	proto.RegisterType((*GetGatewayRequest)(nil), "api.GetGatewayRequest")
	proto.RegisterType((*GetGatewayResponse)(nil), "api.GetGatewayResponse")
	proto.RegisterType((*DeleteGatewayRequest)(nil), "api.DeleteGatewayRequest")
	proto.RegisterType((*GenerateGatewayClientCertificateRequest)(nil), "api.GenerateGatewayClientCertificateRequest")
	proto.RegisterType((*GenerateGatewayClientCertificateResponse)(nil), "api.GenerateGatewayClientCertificateResponse")
	proto.RegisterType((*ListGatewayRequest)(nil), "api.ListGatewayRequest")
	proto.RegisterType((*GatewayListItem)(nil), "api.GatewayListItem")
	proto.RegisterType((*ListGatewayResponse)(nil), "api.ListGatewayResponse")
	proto.RegisterType((*UpdateGatewayRequest)(nil), "api.UpdateGatewayRequest")
	proto.RegisterType((*GatewayStats)(nil), "api.GatewayStats")
	proto.RegisterMapType((map[uint32]uint32)(nil), "api.GatewayStats.RxPacketsPerDrEntry")
	proto.RegisterMapType((map[uint32]uint32)(nil), "api.GatewayStats.RxPacketsPerFrequencyEntry")
	proto.RegisterMapType((map[uint32]uint32)(nil), "api.GatewayStats.TxPacketsPerDrEntry")
	proto.RegisterMapType((map[uint32]uint32)(nil), "api.GatewayStats.TxPacketsPerFrequencyEntry")
	proto.RegisterMapType((map[string]uint32)(nil), "api.GatewayStats.TxPacketsPerStatusEntry")
	proto.RegisterType((*GetGatewayStatsRequest)(nil), "api.GetGatewayStatsRequest")
	proto.RegisterType((*GetGatewayStatsResponse)(nil), "api.GetGatewayStatsResponse")
	proto.RegisterType((*PingRX)(nil), "api.PingRX")
	proto.RegisterType((*GetLastPingRequest)(nil), "api.GetLastPingRequest")
	proto.RegisterType((*GetLastPingResponse)(nil), "api.GetLastPingResponse")
	proto.RegisterType((*StreamGatewayFrameLogsRequest)(nil), "api.StreamGatewayFrameLogsRequest")
	proto.RegisterType((*StreamGatewayFrameLogsResponse)(nil), "api.StreamGatewayFrameLogsResponse")
	proto.RegisterType((*StreamGlobalGatewayFrameLogsRequest)(nil), "api.StreamGlobalGatewayFrameLogsRequest")
	proto.RegisterType((*StreamGlobalGatewayFrameLogsResponse)(nil), "api.StreamGlobalGatewayFrameLogsResponse")
}

func init() {
	proto.RegisterFile("as/external/api/gateway.proto", fileDescriptor_f909ac54118d345f)
}

var fileDescriptor_f909ac54118d345f = []byte{
	// 2074 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x58, 0xcf, 0x6f, 0xdb, 0xc8,
	0xf5, 0x5f, 0x5a, 0xbf, 0x9f, 0x2c, 0x5b, 0x1e, 0x3b, 0x8e, 0x96, 0x49, 0x36, 0x5e, 0x26, 0xd9,
	0x38, 0xd9, 0x58, 0xca, 0xda, 0xde, 0xc4, 0xde, 0xef, 0x22, 0x0b, 0xc7, 0xf6, 0x26, 0x46, 0x7e,
	0x7c, 0x0d, 0x2a, 0x46, 0x8b, 0xa2, 0x00, 0x31, 0x16, 0x47, 0x0a, 0x61, 0x8a, 0x64, 0x67, 0x46,
	0x8e, 0xdd, 0x45, 0x2e, 0xed, 0xa1, 0xa7, 0x9e, 0x7a, 0xec, 0xa5, 0x40, 0x7b, 0xeb, 0x9e, 0x7a,
	0xea, 0xa1, 0x7f, 0x41, 0x81, 0x9e, 0x7a, 0xea, 0xbd, 0x7f, 0x48, 0x31, 0x3f, 0x28, 0x51, 0x12,
	0x2d, 0xdb, 0xc9, 0x9e, 0xc8, 0x79, 0x3f, 0x3f, 0xf3, 0xde, 0xbc, 0x99, 0x37, 0x03, 0x37, 0x30,
	0x6b, 0x90, 0x13, 0x4e, 0x68, 0x80, 0xfd, 0x06, 0x8e, 0xbc, 0x46, 0x07, 0x73, 0xf2, 0x0e, 0x9f,
	0xd6, 0x23, 0x1a, 0xf2, 0x10, 0x65, 0x70, 0xe4, 0x99, 0xd7, 0x3b, 0x61, 0xd8, 0xf1, 0x89, 0x64,
	0xe3, 0x20, 0x08, 0x39, 0xe6, 0x5e, 0x18, 0x30, 0x25, 0x62, 0xde, 0xd4, 0x5c, 0x39, 0x3a, 0xec,
	0xb5, 0x1b, 0xdc, 0xeb, 0x12, 0xc6, 0x71, 0x37, 0xd2, 0x02, 0xd7, 0x46, 0x05, 0x48, 0x37, 0xe2,
	0xda, 0x81, 0x39, 0xdf, 0x0a, 0xbb, 0xdd, 0x30, 0x68, 0xa8, 0x8f, 0x26, 0x7e, 0x36, 0x0a, 0xaa,
	0x4d, 0x71, 0x97, 0xbc, 0x0c, 0x3b, 0x8a, 0x6f, 0xfd, 0x3e, 0x07, 0x85, 0x67, 0x0a, 0x27, 0x9a,
	0x81, 0x29, 0xcf, 0xad, 0x19, 0x4b, 0xc6, 0x72, 0xc9, 0x9e, 0xf2, 0x5c, 0x84, 0x20, 0x1b, 0xe0,
	0x2e, 0xa9, 0x4d, 0x49, 0x8a, 0xfc, 0x47, 0x4b, 0x50, 0x76, 0x09, 0x6b, 0x51, 0x2f, 0x12, 0xc0,
	0x6b, 0x19, 0xc9, 0x4a, 0x92, 0xd0, 0x03, 0x28, 0xfa, 0x61, 0x4b, 0xce, 0xab, 0x96, 0x5d, 0x32,
	0x96, 0xcb, 0xab, 0xd5, 0xba, 0x86, 0xf4, 0x52, 0xd3, 0xed, 0xbe, 0x04, 0xba, 0x0b, 0xb3, 0x21,
	0xed, 0xe0, 0xc0, 0xfb, 0xb5, 0x1c, 0x3b, 0x9e, 0x5b, 0xcb, 0x2d, 0x19, 0xcb, 0x19, 0x7b, 0x26,
	0x49, 0xde, 0xdb, 0x41, 0x5f, 0xc2, 0x9c, 0xeb, 0xb1, 0x56, 0x78, 0x4c, 0xe8, 0xa9, 0x43, 0x02,
	0x7c, 0xe8, 0x13, 0xb7, 0x96, 0x5f, 0x32, 0x96, 0x8b, 0x76, 0xb5, 0xcf, 0xd8, 0x55, 0x74, 0x74,
	0x1f, 0xe6, 0x02, 0xc2, 0xdf, 0x85, 0xf4, 0xc8, 0x61, 0x84, 0x1e, 0x13, 0x2a, 0xec, 0x16, 0xa4,
	0xdd, 0x59, 0xcd, 0x68, 0x4a, 0xfa, 0xde, 0x0e, 0x7a, 0x00, 0x48, 0x27, 0xca, 0x89, 0x68, 0xd8,
	0xf6, 0x7c, 0x22, 0x84, 0x8b, 0x72, 0x62, 0x55, 0xcd, 0xd9, 0x57, 0x8c, 0xbd, 0x1d, 0x74, 0x0f,
	0xf2, 0x87, 0x21, 0xa6, 0x2e, 0xab, 0x95, 0x96, 0x32, 0xcb, 0xe5, 0xd5, 0xb9, 0x3a, 0x8e, 0xbc,
	0xba, 0x8e, 0xe0, 0x53, 0xc1, 0xb1, 0xb5, 0x00, 0xba, 0x0f, 0x59, 0x8e, 0x3b, 0xac, 0x06, 0x52,
	0x70, 0x31, 0x29, 0x58, 0x7f, 0x83, 0x3b, 0x6c, 0x37, 0xe0, 0xf4, 0xd4, 0x96, 0x32, 0xe8, 0x11,
	0x14, 0xbb, 0x84, 0x63, 0x17, 0x73, 0x5c, 0x2b, 0x4b, 0x79, 0x73, 0x48, 0xfe, 0x95, 0x66, 0x2a,
	0x9d, 0xbe, 0xac, 0x00, 0x2f, 0x26, 0xe8, 0xb5, 0x48, 0x12, 0xfc, 0xb4, 0x02, 0xaf, 0x39, 0x03,
	0xf0, 0x5f, 0xc2, 0x1c, 0xe3, 0x98, 0x3b, 0x41, 0xc8, 0xbd, 0xb6, 0xa7, 0x73, 0x54, 0x51, 0x31,
	0x14, 0x8c, 0xd7, 0x09, 0xba, 0xf9, 0x18, 0x4a, 0x7d, 0x94, 0xa8, 0x0a, 0x99, 0x23, 0x72, 0xaa,
	0xd7, 0x86, 0xf8, 0x45, 0x0b, 0x90, 0x3b, 0xc6, 0x7e, 0x2f, 0x5e, 0x1d, 0x6a, 0xf0, 0xcd, 0xd4,
	0x86, 0x61, 0xfe, 0x1f, 0x54, 0x86, 0xe0, 0x5e, 0x46, 0xd9, 0x3a, 0x80, 0xe9, 0x64, 0x30, 0xd1,
	0x55, 0x28, 0xb4, 0xa3, 0x0e, 0x76, 0xfa, 0x0b, 0x33, 0x2f, 0x86, 0x2a, 0x6d, 0x6d, 0x2f, 0x20,
	0x4e, 0xbf, 0x44, 0x1c, 0xe1, 0x43, 0xd9, 0xab, 0x0a, 0xce, 0x9b, 0x98, 0xf1, 0x82, 0x9c, 0x5a,
	0x4f, 0x60, 0x61, 0x9b, 0x12, 0xcc, 0x89, 0x36, 0x6e, 0x93, 0x5f, 0xf5, 0x08, 0xe3, 0xe8, 0x0b,
	0x28, 0xe8, 0x14, 0x4b, 0xf3, 0xe5, 0xd5, 0xe9, 0x64, 0xd8, 0xed, 0x98, 0x69, 0xdd, 0x82, 0xb9,
	0x67, 0x84, 0x8f, 0x28, 0x8f, 0xd4, 0x8b, 0xf5, 0xaf, 0x29, 0x40, 0x49, 0x29, 0x16, 0x85, 0x01,
	0x23, 0x17, 0xf5, 0x81, 0x36, 0x01, 0x5a, 0x12, 0xa3, 0xeb, 0x60, 0x2e, 0x67, 0x22, 0x56, 0x81,
	0xaa, 0xf8, 0x7a, 0x5c, 0xf1, 0xf5, 0xfe, 0xb4, 0xec, 0x92, 0x96, 0xde, 0xe2, 0x42, 0xb5, 0x17,
	0xb9, 0xb1, 0x6a, 0xe6, 0x7c, 0x55, 0x2d, 0xbd, 0xc5, 0xd1, 0x13, 0xa8, 0xb4, 0x3d, 0xca, 0xb8,
	0xc3, 0x08, 0x09, 0x84, 0x76, 0xf6, 0x5c, 0xed, 0xb2, 0x54, 0x68, 0x12, 0x12, 0x6c, 0x71, 0xf4,
	0x2d, 0x4c, 0xfb, 0x38, 0xa1, 0x9e, 0x3b, 0x57, 0x1d, 0x84, 0xbc, 0xd6, 0xbe, 0x06, 0xa5, 0x56,
	0x18, 0x04, 0x8e, 0x58, 0x7d, 0xb2, 0x9a, 0x4b, 0x76, 0x51, 0x10, 0x9a, 0x1c, 0x73, 0xeb, 0x0b,
	0x58, 0xd8, 0x21, 0x3e, 0x19, 0x4b, 0xda, 0x68, 0xdc, 0x9f, 0xc3, 0xdd, 0x67, 0x24, 0x20, 0x74,
	0x90, 0xde, 0x6d, 0xdf, 0x23, 0x01, 0xdf, 0x26, 0x54, 0xaf, 0x67, 0x12, 0xab, 0xde, 0x00, 0x88,
	0x8b, 0xbd, 0x6f, 0xa2, 0xa4, 0x29, 0x7b, 0xae, 0xf5, 0x37, 0x03, 0x96, 0xcf, 0x37, 0xa5, 0xf3,
	0xfa, 0x29, 0x14, 0xb9, 0xcf, 0x9c, 0x16, 0xa1, 0x5c, 0x5b, 0x2a, 0x70, 0x9f, 0x09, 0x49, 0xb1,
	0x6a, 0x05, 0x6b, 0xb0, 0x22, 0xf3, 0xdc, 0x67, 0x2f, 0xc8, 0xa9, 0x60, 0xb4, 0xb0, 0x52, 0x51,
	0x5b, 0x67, 0xbe, 0x85, 0xa5, 0xc6, 0x26, 0x00, 0x39, 0x89, 0x3c, 0x4a, 0xd8, 0xc5, 0x72, 0x50,
	0xd2, 0xd2, 0x5b, 0xdc, 0xfa, 0xad, 0x01, 0xe8, 0xa5, 0xc7, 0x46, 0x57, 0xe7, 0x02, 0xe4, 0x7c,
	0xaf, 0xeb, 0x29, 0x6c, 0x39, 0x5b, 0x0d, 0xd0, 0x22, 0xe4, 0xc3, 0x76, 0x9b, 0x11, 0xb5, 0xc0,
	0x72, 0xb6, 0x1e, 0xa5, 0xed, 0xc3, 0x99, 0xd4, 0x7d, 0x78, 0x11, 0xf2, 0x8c, 0x60, 0xda, 0x7a,
	0x2b, 0x41, 0x96, 0x6c, 0x3d, 0xb2, 0xfe, 0x98, 0x85, 0x59, 0x8d, 0x40, 0x80, 0xd9, 0xe3, 0xa4,
	0xfb, 0x13, 0x1d, 0x28, 0xc3, 0x75, 0x91, 0xfd, 0xf0, 0xba, 0xc8, 0x7d, 0x54, 0x5d, 0x14, 0x3f,
	0xae, 0x2e, 0x4a, 0x97, 0xaa, 0x8b, 0x94, 0x74, 0xe4, 0x53, 0xd3, 0x71, 0xb9, 0x93, 0x6e, 0x70,
	0x32, 0xc3, 0xb9, 0x27, 0x73, 0x1d, 0xe6, 0x47, 0x2c, 0xcb, 0xdc, 0x95, 0x65, 0x82, 0xe6, 0x86,
	0x6c, 0xbf, 0x16, 0x89, 0x1c, 0x2a, 0xe5, 0xe9, 0x91, 0x52, 0x76, 0x61, 0x7e, 0x68, 0x89, 0xea,
	0x12, 0xba, 0x09, 0x65, 0x1e, 0x72, 0xec, 0x3b, 0xad, 0xb0, 0x17, 0xa8, 0x95, 0x9a, 0xb1, 0x41,
	0x92, 0xb6, 0x05, 0x05, 0x3d, 0x80, 0x3c, 0x25, 0xac, 0xe7, 0x8b, 0xe5, 0x2a, 0x4e, 0xc5, 0x85,
	0xe4, 0xd6, 0x19, 0xaf, 0x33, 0x5b, 0xcb, 0x88, 0x5d, 0xfe, 0x40, 0x26, 0xf0, 0x03, 0x77, 0xf9,
	0x7f, 0x14, 0xfb, 0xa7, 0x8f, 0x40, 0xcd, 0xd0, 0x06, 0x94, 0xfa, 0xe7, 0x8b, 0x56, 0x9d, 0xb8,
	0x7c, 0xfa, 0xc2, 0x22, 0x7a, 0xf4, 0xc4, 0x89, 0x70, 0xeb, 0x88, 0x70, 0xe6, 0x50, 0xd2, 0x22,
	0xde, 0x31, 0x71, 0x75, 0xd1, 0xcd, 0xd1, 0x93, 0x7d, 0xc5, 0xb1, 0x35, 0x03, 0xad, 0xc1, 0x62,
	0x8a, 0xbc, 0x13, 0x1e, 0xc9, 0x8a, 0xc8, 0xd9, 0xf3, 0x63, 0x2a, 0xff, 0xff, 0x42, 0x38, 0xe1,
	0x29, 0x4e, 0xb2, 0xca, 0x09, 0x1f, 0x73, 0xf2, 0x00, 0x50, 0x42, 0x9e, 0x74, 0x3d, 0xce, 0x89,
	0xea, 0xb7, 0x72, 0x76, 0xb5, 0x2f, 0xbe, 0xab, 0xe8, 0x88, 0x40, 0x2d, 0x21, 0x1d, 0x11, 0xea,
	0xb4, 0xa9, 0x08, 0x68, 0xd0, 0x3a, 0xad, 0xe5, 0x65, 0x36, 0x1e, 0x24, 0xc3, 0x28, 0x23, 0x56,
	0x7f, 0x13, 0x5b, 0xd9, 0x27, 0xf4, 0xfb, 0x58, 0x5c, 0x75, 0x2d, 0x57, 0x78, 0x1a, 0x4f, 0xb8,
	0xa1, 0x67, 0xb9, 0x29, 0x9c, 0xe5, 0xc6, 0x9e, 0xe0, 0x86, 0xa6, 0xba, 0xd9, 0x87, 0xb9, 0x91,
	0xd9, 0xb8, 0xb4, 0x56, 0x94, 0xf6, 0xef, 0x4c, 0x9e, 0xc6, 0x0e, 0x55, 0x86, 0x67, 0xf8, 0x10,
	0x51, 0x58, 0xa4, 0x63, 0x16, 0x4b, 0x67, 0x59, 0xb4, 0xd3, 0x2c, 0xd2, 0x61, 0x8b, 0xbf, 0x84,
	0x2b, 0x23, 0x18, 0x45, 0x31, 0xf5, 0xe2, 0x16, 0xf2, 0xde, 0x64, 0x9c, 0x4d, 0x29, 0xab, 0x2c,
	0x23, 0x3e, 0xc6, 0x30, 0x9f, 0x83, 0x79, 0x76, 0x76, 0x92, 0x4d, 0x5a, 0x25, 0xa5, 0x49, 0xab,
	0x24, 0x3b, 0xbc, 0xe7, 0x60, 0xda, 0x3f, 0x8d, 0xa5, 0x2d, 0x98, 0x4f, 0x09, 0xf5, 0x65, 0x4d,
	0xd8, 0x1f, 0x69, 0x62, 0x17, 0xae, 0x9e, 0x11, 0xc8, 0xf3, 0x7a, 0xd7, 0xa4, 0x19, 0xeb, 0x3f,
	0x06, 0x2c, 0x0e, 0xfa, 0x3f, 0x99, 0xa0, 0x0b, 0xf5, 0x1d, 0x3b, 0xc8, 0x84, 0xa2, 0x17, 0x70,
	0x42, 0x8f, 0xb1, 0xaf, 0x0f, 0xc7, 0xfe, 0x18, 0x6d, 0xc3, 0x2c, 0xe3, 0x98, 0xf2, 0x41, 0xa7,
	0x7b, 0x81, 0x06, 0x6f, 0x46, 0xaa, 0xf4, 0xc7, 0xe8, 0x3b, 0xa8, 0x90, 0xc0, 0x4d, 0x98, 0x38,
	0xff, 0x18, 0x9d, 0x26, 0x81, 0xdb, 0x1f, 0x59, 0x3b, 0x70, 0x75, 0x6c, 0x6a, 0x7a, 0x13, 0xbf,
	0xd7, 0xdf, 0xa3, 0x8d, 0xf1, 0x2b, 0x91, 0x12, 0x8d, 0x37, 0xe8, 0x1f, 0x0d, 0xc8, 0xef, 0x7b,
	0x41, 0xc7, 0xfe, 0xf9, 0x79, 0x11, 0x41, 0x90, 0xa5, 0x8c, 0x79, 0x7a, 0xc3, 0x94, 0xff, 0xa2,
	0xe1, 0xf2, 0x43, 0x8a, 0x1d, 0x16, 0x50, 0x19, 0x02, 0xc3, 0x2e, 0xf8, 0xa1, 0x8d, 0x9b, 0xaf,
	0x6d, 0x11, 0x40, 0x1f, 0x73, 0x8f, 0xf7, 0x5c, 0x22, 0xa7, 0x66, 0xd8, 0xfd, 0x31, 0xba, 0x0e,
	0x25, 0x3f, 0x0c, 0x3a, 0x8a, 0x99, 0x93, 0xcc, 0x01, 0x41, 0x68, 0x62, 0x5f, 0x6b, 0xe6, 0x95,
	0x66, 0x3c, 0xb6, 0xd6, 0x64, 0x3f, 0xff, 0x12, 0x33, 0x2e, 0x41, 0x5f, 0x28, 0x97, 0xd6, 0x5f,
	0x0c, 0x98, 0x1f, 0xd2, 0xd2, 0x61, 0x1a, 0x6e, 0x63, 0x8c, 0xcb, 0xb4, 0x31, 0xd7, 0xa1, 0x34,
	0xd8, 0x13, 0xd5, 0xb2, 0x1b, 0x10, 0x44, 0x97, 0xe5, 0xaa, 0x80, 0x54, 0xec, 0x29, 0x97, 0xa2,
	0xdb, 0x50, 0x88, 0xbc, 0xa0, 0xe3, 0xd0, 0x93, 0x5a, 0x56, 0x26, 0xa4, 0x2c, 0x13, 0xa2, 0xe2,
	0x6e, 0xe7, 0x23, 0xf9, 0xb5, 0x9e, 0xc0, 0x8d, 0x26, 0xa7, 0x04, 0x77, 0x75, 0xa2, 0xbe, 0xd7,
	0xef, 0x02, 0x17, 0x5c, 0xb2, 0xd6, 0x9f, 0x0d, 0xf8, 0xec, 0x2c, 0x03, 0x7a, 0xc6, 0x1b, 0x30,
	0xdd, 0x8b, 0x7c, 0x2f, 0x38, 0x72, 0xe4, 0xa3, 0x83, 0x9e, 0xf3, 0xbc, 0x44, 0x73, 0x20, 0x19,
	0xb1, 0xce, 0xf3, 0x4f, 0xec, 0x72, 0x6f, 0x40, 0x41, 0x4f, 0x60, 0xc6, 0x0d, 0xdf, 0x05, 0x09,
	0x5d, 0x75, 0x1d, 0xba, 0x22, 0x75, 0x77, 0x34, 0x2b, 0xa1, 0x5d, 0x71, 0x93, 0xb4, 0xa7, 0x05,
	0xc8, 0x49, 0x35, 0x8b, 0xc3, 0x2d, 0x0d, 0xd2, 0x0f, 0x0f, 0xb1, 0x7f, 0xd6, 0x5c, 0x53, 0xda,
	0x2d, 0x23, 0xb5, 0xdd, 0xba, 0x2d, 0xd6, 0x7a, 0x47, 0x34, 0x50, 0x02, 0xd0, 0x8c, 0x6e, 0x24,
	0xf6, 0x9a, 0xaf, 0x9e, 0xe2, 0xc0, 0xb5, 0x35, 0xcf, 0xfa, 0xa7, 0x01, 0xb7, 0x27, 0xbb, 0x1d,
	0xf4, 0x3f, 0x71, 0x8c, 0x49, 0xcf, 0xd3, 0x41, 0x8e, 0xc3, 0xbe, 0x7b, 0xb0, 0x37, 0x16, 0xc2,
	0xa9, 0x8f, 0x08, 0x61, 0xe6, 0x83, 0x42, 0x78, 0xff, 0xaf, 0x06, 0x14, 0xf4, 0x04, 0x51, 0x09,
	0x72, 0x7b, 0xaf, 0x37, 0x1e, 0x7d, 0x5d, 0xfd, 0x44, 0xfc, 0xee, 0x1e, 0x6c, 0x3c, 0xda, 0xa8,
	0x1a, 0xe2, 0xf7, 0xa0, 0xb9, 0xf9, 0xd5, 0xd7, 0xd5, 0x29, 0xf1, 0xbb, 0xfd, 0xfa, 0xf1, 0xe3,
	0xcd, 0x6a, 0x46, 0x09, 0xac, 0xaf, 0xad, 0x55, 0xb3, 0xe2, 0x77, 0xeb, 0x40, 0x08, 0xe4, 0x94,
	0xc0, 0xfa, 0xe3, 0x87, 0xd5, 0xbc, 0xa4, 0x36, 0x37, 0x57, 0xd7, 0xaa, 0x05, 0x54, 0x86, 0x82,
	0xfc, 0x75, 0x56, 0xab, 0xc5, 0xc1, 0x60, 0xad, 0x5a, 0x1a, 0x0c, 0xd6, 0xab, 0x20, 0x34, 0x5e,
	0xd8, 0x9b, 0xab, 0x0f, 0xab, 0x65, 0xf1, 0x6b, 0x1f, 0x6c, 0x3c, 0x5a, 0xaf, 0x4e, 0x0b, 0x91,
	0xbd, 0xe6, 0xab, 0xd5, 0xf5, 0x87, 0x0f, 0xab, 0x95, 0xd5, 0x3f, 0x95, 0x60, 0x26, 0xde, 0x7a,
	0xd4, 0xf3, 0x07, 0x3a, 0x80, 0xbc, 0xba, 0xfb, 0xa3, 0x4f, 0xe5, 0xdc, 0xd3, 0x1e, 0x02, 0xcc,
	0xc5, 0xb1, 0x4a, 0xdc, 0xed, 0x46, 0xfc, 0xd4, 0xaa, 0xfd, 0xe6, 0xdf, 0xff, 0xfd, 0xc3, 0x14,
	0xb2, 0x2a, 0xc9, 0x17, 0x3d, 0xf6, 0x8d, 0x71, 0x1f, 0xd9, 0x90, 0x79, 0x46, 0x38, 0xd2, 0xef,
	0x3a, 0xa3, 0x8f, 0x03, 0xe6, 0xd5, 0x31, 0xba, 0xca, 0xb9, 0x65, 0x4a, 0x8b, 0x0b, 0x08, 0x0d,
	0x59, 0x6c, 0xfc, 0xe0, 0xb9, 0xef, 0xd1, 0x21, 0xe4, 0x55, 0x03, 0xab, 0xa1, 0xa6, 0x75, 0xb3,
	0x67, 0x42, 0xbd, 0x23, 0x0d, 0xdf, 0x34, 0xcd, 0x11, 0xc3, 0xf1, 0x33, 0xa4, 0xe7, 0xbe, 0x17,
	0xb8, 0x7f, 0x06, 0x79, 0x75, 0xab, 0xd6, 0x3e, 0xd2, 0xae, 0xd8, 0x67, 0xfa, 0xd0, 0xe0, 0xef,
	0xa7, 0x81, 0xdf, 0x87, 0xac, 0xe8, 0xc8, 0x91, 0x9a, 0xf9, 0xf8, 0x8d, 0xd4, 0xac, 0x8d, 0x33,
	0x74, 0x4c, 0xae, 0x48, 0xb3, 0xb3, 0x68, 0x38, 0xca, 0x28, 0x84, 0xe2, 0x33, 0xc2, 0x55, 0x2b,
	0x7e, 0x6d, 0x24, 0x9e, 0xc9, 0xe3, 0xd5, 0xbc, 0x9e, 0xce, 0xd4, 0xd6, 0x97, 0xa5, 0x75, 0x0b,
	0x2d, 0xa5, 0x07, 0xc6, 0xf1, 0xdc, 0xf7, 0x0d, 0x26, 0x9d, 0x84, 0x50, 0x4e, 0x6c, 0xdd, 0xa8,
	0x9f, 0xc3, 0x91, 0x23, 0x40, 0xcf, 0x24, 0x65, 0x97, 0xb7, 0x56, 0xa4, 0xaf, 0xbb, 0xe8, 0xce,
	0x04, 0x5f, 0x62, 0x07, 0x66, 0x0d, 0x71, 0xdb, 0x43, 0x7f, 0x37, 0x60, 0xe9, 0xbc, 0x07, 0x07,
	0xa4, 0xfb, 0xdf, 0x8b, 0x3d, 0x71, 0x98, 0x2b, 0x17, 0x94, 0xd6, 0x80, 0x1f, 0x4b, 0xc0, 0x5f,
	0x59, 0x8d, 0x09, 0x80, 0x3b, 0xda, 0xd8, 0x4a, 0x2b, 0x81, 0xea, 0x77, 0x06, 0xcc, 0xaa, 0x4d,
	0xae, 0xbf, 0xaf, 0x21, 0x4b, 0xfa, 0x9e, 0x78, 0xae, 0x98, 0xb7, 0x26, 0xca, 0x68, 0x54, 0xf7,
	0x24, 0xaa, 0x5b, 0xe8, 0xf3, 0x09, 0xa8, 0xe4, 0xf6, 0xc4, 0x1e, 0x1a, 0xe8, 0x47, 0x03, 0xae,
	0x24, 0xb7, 0xdb, 0x01, 0x9e, 0xe5, 0xa4, 0xaf, 0x49, 0x27, 0x80, 0x79, 0xef, 0x02, 0x92, 0x1a,
	0xdb, 0xb7, 0x12, 0xdb, 0x23, 0xb4, 0x2e, 0xb1, 0x25, 0x0f, 0x08, 0xd6, 0xf8, 0x61, 0xe4, 0x18,
	0x79, 0x3f, 0xc0, 0x1e, 0xc3, 0x7d, 0xca, 0xe1, 0x73, 0x2f, 0xac, 0xb7, 0xde, 0x7a, 0x34, 0x62,
	0x1c, 0xb7, 0x8e, 0xa4, 0x67, 0xcc, 0xea, 0xf1, 0x33, 0xbd, 0x18, 0x3f, 0x8d, 0xef, 0xa1, 0xfb,
	0xa2, 0xfe, 0xf6, 0x8d, 0x5f, 0x7c, 0xd7, 0xf1, 0xf8, 0xdb, 0xde, 0xa1, 0xb8, 0xaf, 0x37, 0x18,
	0xee, 0x60, 0xba, 0x12, 0x61, 0x4e, 0xfc, 0x15, 0xe6, 0xb3, 0xc6, 0xc0, 0xd4, 0x8a, 0x8c, 0x56,
	0xd8, 0x38, 0x5e, 0x6b, 0x8c, 0xbc, 0xfb, 0x1f, 0xe6, 0x65, 0x25, 0xaf, 0xfd, 0x2f, 0x00, 0x00,
	0xff, 0xff, 0xf1, 0x01, 0xcb, 0xe7, 0xa6, 0x18, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GatewayServiceClient is the client API for GatewayService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GatewayServiceClient interface {
	// Create creates the given gateway.
	Create(ctx context.Context, in *CreateGatewayRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Get returns the gateway for the requested mac address.
	Get(ctx context.Context, in *GetGatewayRequest, opts ...grpc.CallOption) (*GetGatewayResponse, error)
	// Update updates the gateway matching the given mac address.
	Update(ctx context.Context, in *UpdateGatewayRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Delete deletes the gateway matching the given mac address.
	Delete(ctx context.Context, in *DeleteGatewayRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// List lists the gateways.
	List(ctx context.Context, in *ListGatewayRequest, opts ...grpc.CallOption) (*ListGatewayResponse, error)
	// GetStats lists the gateway stats given the query parameters.
	GetStats(ctx context.Context, in *GetGatewayStatsRequest, opts ...grpc.CallOption) (*GetGatewayStatsResponse, error)
	// GetLastPing returns the last emitted ping and gateways receiving this ping.
	GetLastPing(ctx context.Context, in *GetLastPingRequest, opts ...grpc.CallOption) (*GetLastPingResponse, error)
	// GenerateGatewayClientCertificate returns TLS certificate gateway authentication / authorization.
	// This endpoint can ony be used when ChirpStack Network Server is configured with a gateway
	// CA certificate and key, which is used for signing the TLS certificate. The returned TLS
	// certificate will have the Gateway ID as Common Name.
	GenerateGatewayClientCertificate(ctx context.Context, in *GenerateGatewayClientCertificateRequest, opts ...grpc.CallOption) (*GenerateGatewayClientCertificateResponse, error)
	// StreamFrameLogs streams the uplink and downlink frame-logs for the given gateway ID.
	// Notes:
	//   * These are the raw LoRaWAN frames and this endpoint is intended for debugging only.
	//   * This endpoint does not work from a web-browser.
	StreamFrameLogs(ctx context.Context, in *StreamGatewayFrameLogsRequest, opts ...grpc.CallOption) (GatewayService_StreamFrameLogsClient, error)
	// StreamGlobalFrameLogs streams the uplink and downlink frame-logs for all gateways of given organization.
	// Notes:
	//   * These are the raw LoRaWAN frames and this endpoint is intended for debugging only.
	//   * This endpoint does not work from a web-browser.
	StreamGlobalFrameLogs(ctx context.Context, in *StreamGlobalGatewayFrameLogsRequest, opts ...grpc.CallOption) (GatewayService_StreamGlobalFrameLogsClient, error)
}

type gatewayServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewGatewayServiceClient(cc grpc.ClientConnInterface) GatewayServiceClient {
	return &gatewayServiceClient{cc}
}

func (c *gatewayServiceClient) Create(ctx context.Context, in *CreateGatewayRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.GatewayService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewayServiceClient) Get(ctx context.Context, in *GetGatewayRequest, opts ...grpc.CallOption) (*GetGatewayResponse, error) {
	out := new(GetGatewayResponse)
	err := c.cc.Invoke(ctx, "/api.GatewayService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewayServiceClient) Update(ctx context.Context, in *UpdateGatewayRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.GatewayService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewayServiceClient) Delete(ctx context.Context, in *DeleteGatewayRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.GatewayService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewayServiceClient) List(ctx context.Context, in *ListGatewayRequest, opts ...grpc.CallOption) (*ListGatewayResponse, error) {
	out := new(ListGatewayResponse)
	err := c.cc.Invoke(ctx, "/api.GatewayService/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewayServiceClient) GetStats(ctx context.Context, in *GetGatewayStatsRequest, opts ...grpc.CallOption) (*GetGatewayStatsResponse, error) {
	out := new(GetGatewayStatsResponse)
	err := c.cc.Invoke(ctx, "/api.GatewayService/GetStats", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewayServiceClient) GetLastPing(ctx context.Context, in *GetLastPingRequest, opts ...grpc.CallOption) (*GetLastPingResponse, error) {
	out := new(GetLastPingResponse)
	err := c.cc.Invoke(ctx, "/api.GatewayService/GetLastPing", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewayServiceClient) GenerateGatewayClientCertificate(ctx context.Context, in *GenerateGatewayClientCertificateRequest, opts ...grpc.CallOption) (*GenerateGatewayClientCertificateResponse, error) {
	out := new(GenerateGatewayClientCertificateResponse)
	err := c.cc.Invoke(ctx, "/api.GatewayService/GenerateGatewayClientCertificate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewayServiceClient) StreamFrameLogs(ctx context.Context, in *StreamGatewayFrameLogsRequest, opts ...grpc.CallOption) (GatewayService_StreamFrameLogsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_GatewayService_serviceDesc.Streams[0], "/api.GatewayService/StreamFrameLogs", opts...)
	if err != nil {
		return nil, err
	}
	x := &gatewayServiceStreamFrameLogsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type GatewayService_StreamFrameLogsClient interface {
	Recv() (*StreamGatewayFrameLogsResponse, error)
	grpc.ClientStream
}

type gatewayServiceStreamFrameLogsClient struct {
	grpc.ClientStream
}

func (x *gatewayServiceStreamFrameLogsClient) Recv() (*StreamGatewayFrameLogsResponse, error) {
	m := new(StreamGatewayFrameLogsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *gatewayServiceClient) StreamGlobalFrameLogs(ctx context.Context, in *StreamGlobalGatewayFrameLogsRequest, opts ...grpc.CallOption) (GatewayService_StreamGlobalFrameLogsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_GatewayService_serviceDesc.Streams[1], "/api.GatewayService/StreamGlobalFrameLogs", opts...)
	if err != nil {
		return nil, err
	}
	x := &gatewayServiceStreamGlobalFrameLogsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type GatewayService_StreamGlobalFrameLogsClient interface {
	Recv() (*StreamGlobalGatewayFrameLogsResponse, error)
	grpc.ClientStream
}

type gatewayServiceStreamGlobalFrameLogsClient struct {
	grpc.ClientStream
}

func (x *gatewayServiceStreamGlobalFrameLogsClient) Recv() (*StreamGlobalGatewayFrameLogsResponse, error) {
	m := new(StreamGlobalGatewayFrameLogsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// GatewayServiceServer is the server API for GatewayService service.
type GatewayServiceServer interface {
	// Create creates the given gateway.
	Create(context.Context, *CreateGatewayRequest) (*empty.Empty, error)
	// Get returns the gateway for the requested mac address.
	Get(context.Context, *GetGatewayRequest) (*GetGatewayResponse, error)
	// Update updates the gateway matching the given mac address.
	Update(context.Context, *UpdateGatewayRequest) (*empty.Empty, error)
	// Delete deletes the gateway matching the given mac address.
	Delete(context.Context, *DeleteGatewayRequest) (*empty.Empty, error)
	// List lists the gateways.
	List(context.Context, *ListGatewayRequest) (*ListGatewayResponse, error)
	// GetStats lists the gateway stats given the query parameters.
	GetStats(context.Context, *GetGatewayStatsRequest) (*GetGatewayStatsResponse, error)
	// GetLastPing returns the last emitted ping and gateways receiving this ping.
	GetLastPing(context.Context, *GetLastPingRequest) (*GetLastPingResponse, error)
	// GenerateGatewayClientCertificate returns TLS certificate gateway authentication / authorization.
	// This endpoint can ony be used when ChirpStack Network Server is configured with a gateway
	// CA certificate and key, which is used for signing the TLS certificate. The returned TLS
	// certificate will have the Gateway ID as Common Name.
	GenerateGatewayClientCertificate(context.Context, *GenerateGatewayClientCertificateRequest) (*GenerateGatewayClientCertificateResponse, error)
	// StreamFrameLogs streams the uplink and downlink frame-logs for the given gateway ID.
	// Notes:
	//   * These are the raw LoRaWAN frames and this endpoint is intended for debugging only.
	//   * This endpoint does not work from a web-browser.
	StreamFrameLogs(*StreamGatewayFrameLogsRequest, GatewayService_StreamFrameLogsServer) error
	// StreamGlobalFrameLogs streams the uplink and downlink frame-logs for all gateways of given organization.
	// Notes:
	//   * These are the raw LoRaWAN frames and this endpoint is intended for debugging only.
	//   * This endpoint does not work from a web-browser.
	StreamGlobalFrameLogs(*StreamGlobalGatewayFrameLogsRequest, GatewayService_StreamGlobalFrameLogsServer) error
}

// UnimplementedGatewayServiceServer can be embedded to have forward compatible implementations.
type UnimplementedGatewayServiceServer struct {
}

func (*UnimplementedGatewayServiceServer) Create(ctx context.Context, req *CreateGatewayRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedGatewayServiceServer) Get(ctx context.Context, req *GetGatewayRequest) (*GetGatewayResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedGatewayServiceServer) Update(ctx context.Context, req *UpdateGatewayRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedGatewayServiceServer) Delete(ctx context.Context, req *DeleteGatewayRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedGatewayServiceServer) List(ctx context.Context, req *ListGatewayRequest) (*ListGatewayResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedGatewayServiceServer) GetStats(ctx context.Context, req *GetGatewayStatsRequest) (*GetGatewayStatsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStats not implemented")
}
func (*UnimplementedGatewayServiceServer) GetLastPing(ctx context.Context, req *GetLastPingRequest) (*GetLastPingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLastPing not implemented")
}
func (*UnimplementedGatewayServiceServer) GenerateGatewayClientCertificate(ctx context.Context, req *GenerateGatewayClientCertificateRequest) (*GenerateGatewayClientCertificateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GenerateGatewayClientCertificate not implemented")
}
func (*UnimplementedGatewayServiceServer) StreamFrameLogs(req *StreamGatewayFrameLogsRequest, srv GatewayService_StreamFrameLogsServer) error {
	return status.Errorf(codes.Unimplemented, "method StreamFrameLogs not implemented")
}
func (*UnimplementedGatewayServiceServer) StreamGlobalFrameLogs(req *StreamGlobalGatewayFrameLogsRequest, srv GatewayService_StreamGlobalFrameLogsServer) error {
	return status.Errorf(codes.Unimplemented, "method StreamGlobalFrameLogs not implemented")
}

func RegisterGatewayServiceServer(s *grpc.Server, srv GatewayServiceServer) {
	s.RegisterService(&_GatewayService_serviceDesc, srv)
}

func _GatewayService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateGatewayRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.GatewayService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayServiceServer).Create(ctx, req.(*CreateGatewayRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GatewayService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetGatewayRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.GatewayService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayServiceServer).Get(ctx, req.(*GetGatewayRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GatewayService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateGatewayRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.GatewayService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayServiceServer).Update(ctx, req.(*UpdateGatewayRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GatewayService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteGatewayRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.GatewayService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayServiceServer).Delete(ctx, req.(*DeleteGatewayRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GatewayService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListGatewayRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.GatewayService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayServiceServer).List(ctx, req.(*ListGatewayRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GatewayService_GetStats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetGatewayStatsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayServiceServer).GetStats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.GatewayService/GetStats",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayServiceServer).GetStats(ctx, req.(*GetGatewayStatsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GatewayService_GetLastPing_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLastPingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayServiceServer).GetLastPing(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.GatewayService/GetLastPing",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayServiceServer).GetLastPing(ctx, req.(*GetLastPingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GatewayService_GenerateGatewayClientCertificate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GenerateGatewayClientCertificateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayServiceServer).GenerateGatewayClientCertificate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.GatewayService/GenerateGatewayClientCertificate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayServiceServer).GenerateGatewayClientCertificate(ctx, req.(*GenerateGatewayClientCertificateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GatewayService_StreamFrameLogs_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(StreamGatewayFrameLogsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(GatewayServiceServer).StreamFrameLogs(m, &gatewayServiceStreamFrameLogsServer{stream})
}

type GatewayService_StreamFrameLogsServer interface {
	Send(*StreamGatewayFrameLogsResponse) error
	grpc.ServerStream
}

type gatewayServiceStreamFrameLogsServer struct {
	grpc.ServerStream
}

func (x *gatewayServiceStreamFrameLogsServer) Send(m *StreamGatewayFrameLogsResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _GatewayService_StreamGlobalFrameLogs_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(StreamGlobalGatewayFrameLogsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(GatewayServiceServer).StreamGlobalFrameLogs(m, &gatewayServiceStreamGlobalFrameLogsServer{stream})
}

type GatewayService_StreamGlobalFrameLogsServer interface {
	Send(*StreamGlobalGatewayFrameLogsResponse) error
	grpc.ServerStream
}

type gatewayServiceStreamGlobalFrameLogsServer struct {
	grpc.ServerStream
}

func (x *gatewayServiceStreamGlobalFrameLogsServer) Send(m *StreamGlobalGatewayFrameLogsResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _GatewayService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.GatewayService",
	HandlerType: (*GatewayServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _GatewayService_Create_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _GatewayService_Get_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _GatewayService_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _GatewayService_Delete_Handler,
		},
		{
			MethodName: "List",
			Handler:    _GatewayService_List_Handler,
		},
		{
			MethodName: "GetStats",
			Handler:    _GatewayService_GetStats_Handler,
		},
		{
			MethodName: "GetLastPing",
			Handler:    _GatewayService_GetLastPing_Handler,
		},
		{
			MethodName: "GenerateGatewayClientCertificate",
			Handler:    _GatewayService_GenerateGatewayClientCertificate_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "StreamFrameLogs",
			Handler:       _GatewayService_StreamFrameLogs_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "StreamGlobalFrameLogs",
			Handler:       _GatewayService_StreamGlobalFrameLogs_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "as/external/api/gateway.proto",
}
