/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_api_annotations_pb = require('../../../google/api/annotations_pb.js');
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
var google_protobuf_duration_pb = require('google-protobuf/google/protobuf/duration_pb.js');
var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
var as_external_api_device_pb = require('../../../as/external/api/device_pb.js');
var as_external_api_multicastGroup_pb = require('../../../as/external/api/multicastGroup_pb.js');
var as_external_api_fuotaDeployment_pb = require('../../../as/external/api/fuotaDeployment_pb.js');
goog.exportSymbol('proto.api.AddDeviceToRemoteMulticastGroupRequest', null, global);
goog.exportSymbol('proto.api.CreateRemoteMulticastGroupRequest', null, global);
goog.exportSymbol('proto.api.CreateRemoteMulticastGroupResponse', null, global);
goog.exportSymbol('proto.api.DeleteRemoteMulticastGroupRequest', null, global);
goog.exportSymbol('proto.api.EnqueueRemoteMulticastQueueItemRequest', null, global);
goog.exportSymbol('proto.api.EnqueueRemoteMulticastQueueItemResponse', null, global);
goog.exportSymbol('proto.api.FlushRemoteMulticastGroupQueueItemsRequest', null, global);
goog.exportSymbol('proto.api.GetRemoteMulticastDeploymentDeviceRequest', null, global);
goog.exportSymbol('proto.api.GetRemoteMulticastDeploymentDeviceResponse', null, global);
goog.exportSymbol('proto.api.GetRemoteMulticastGroupRequest', null, global);
goog.exportSymbol('proto.api.GetRemoteMulticastGroupResponse', null, global);
goog.exportSymbol('proto.api.ListRemoteMulticastDeviceRequest', null, global);
goog.exportSymbol('proto.api.ListRemoteMulticastDeviceResponse', null, global);
goog.exportSymbol('proto.api.ListRemoteMulticastDevicesResponse', null, global);
goog.exportSymbol('proto.api.ListRemoteMulticastGroupQueueItemsRequest', null, global);
goog.exportSymbol('proto.api.ListRemoteMulticastGroupQueueItemsResponse', null, global);
goog.exportSymbol('proto.api.ListRemoteMulticastGroupRequest', null, global);
goog.exportSymbol('proto.api.ListRemoteMulticastGroupResponse', null, global);
goog.exportSymbol('proto.api.RemoteMulticastDeploymentDevice', null, global);
goog.exportSymbol('proto.api.RemoteMulticastGroup', null, global);
goog.exportSymbol('proto.api.RemoteMulticastGroupListItem', null, global);
goog.exportSymbol('proto.api.RemoteMulticastQueueItem', null, global);
goog.exportSymbol('proto.api.RemoveDeviceFromRemoteMulticastGroupRequest', null, global);
goog.exportSymbol('proto.api.ResetRemoteMulticastDeviceRequest', null, global);
goog.exportSymbol('proto.api.UpdateRemoteMulticastGroupRequest', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.RemoteMulticastGroup = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.RemoteMulticastGroup, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.RemoteMulticastGroup.displayName = 'proto.api.RemoteMulticastGroup';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.RemoteMulticastGroup.prototype.toObject = function(opt_includeInstance) {
  return proto.api.RemoteMulticastGroup.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.RemoteMulticastGroup} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.RemoteMulticastGroup.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: msg.getId(),
    name: msg.getName(),
    serviceProfileId: msg.getServiceProfileId(),
    groupType: msg.getGroupType(),
    dr: msg.getDr(),
    frequency: msg.getFrequency(),
    pingSlotPeriod: msg.getPingSlotPeriod(),
    mcAddr: msg.getMcAddr(),
    mcNwkSKey: msg.getMcNwkSKey(),
    mcAppSKey: msg.getMcAppSKey(),
    fCnt: msg.getFCnt(),
    state: msg.getState(),
    unicastTimeout: (f = msg.getUnicastTimeout()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f),
    nextStepAfter: (f = msg.getNextStepAfter()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.RemoteMulticastGroup}
 */
proto.api.RemoteMulticastGroup.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.RemoteMulticastGroup;
  return proto.api.RemoteMulticastGroup.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.RemoteMulticastGroup} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.RemoteMulticastGroup}
 */
proto.api.RemoteMulticastGroup.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setServiceProfileId(value);
      break;
    case 4:
      var value = /** @type {!proto.api.MulticastGroupType} */ (reader.readEnum());
      msg.setGroupType(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDr(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFrequency(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPingSlotPeriod(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setMcAddr(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setMcNwkSKey(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setMcAppSKey(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFCnt(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setState(value);
      break;
    case 13:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setUnicastTimeout(value);
      break;
    case 14:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setNextStepAfter(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.RemoteMulticastGroup} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.RemoteMulticastGroup.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.RemoteMulticastGroup.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.RemoteMulticastGroup.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = this.getServiceProfileId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = this.getGroupType();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = this.getDr();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = this.getFrequency();
  if (f !== 0) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = this.getPingSlotPeriod();
  if (f !== 0) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = this.getMcAddr();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = this.getMcNwkSKey();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = this.getMcAppSKey();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = this.getFCnt();
  if (f !== 0) {
    writer.writeUint32(
      11,
      f
    );
  }
  f = this.getState();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = this.getUnicastTimeout();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
  f = this.getNextStepAfter();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.RemoteMulticastGroup} The clone.
 */
proto.api.RemoteMulticastGroup.prototype.cloneMessage = function() {
  return /** @type {!proto.api.RemoteMulticastGroup} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.api.RemoteMulticastGroup.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.api.RemoteMulticastGroup.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.api.RemoteMulticastGroup.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.api.RemoteMulticastGroup.prototype.setName = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string service_profile_id = 3;
 * @return {string}
 */
proto.api.RemoteMulticastGroup.prototype.getServiceProfileId = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, ""));
};


/** @param {string} value  */
proto.api.RemoteMulticastGroup.prototype.setServiceProfileId = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional MulticastGroupType group_type = 4;
 * @return {!proto.api.MulticastGroupType}
 */
proto.api.RemoteMulticastGroup.prototype.getGroupType = function() {
  return /** @type {!proto.api.MulticastGroupType} */ (jspb.Message.getFieldProto3(this, 4, 0));
};


/** @param {!proto.api.MulticastGroupType} value  */
proto.api.RemoteMulticastGroup.prototype.setGroupType = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional uint32 dr = 5;
 * @return {number}
 */
proto.api.RemoteMulticastGroup.prototype.getDr = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 5, 0));
};


/** @param {number} value  */
proto.api.RemoteMulticastGroup.prototype.setDr = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional uint32 frequency = 6;
 * @return {number}
 */
proto.api.RemoteMulticastGroup.prototype.getFrequency = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 6, 0));
};


/** @param {number} value  */
proto.api.RemoteMulticastGroup.prototype.setFrequency = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * optional uint32 ping_slot_period = 7;
 * @return {number}
 */
proto.api.RemoteMulticastGroup.prototype.getPingSlotPeriod = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 7, 0));
};


/** @param {number} value  */
proto.api.RemoteMulticastGroup.prototype.setPingSlotPeriod = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * optional string mc_addr = 8;
 * @return {string}
 */
proto.api.RemoteMulticastGroup.prototype.getMcAddr = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 8, ""));
};


/** @param {string} value  */
proto.api.RemoteMulticastGroup.prototype.setMcAddr = function(value) {
  jspb.Message.setField(this, 8, value);
};


/**
 * optional string mc_nwk_s_key = 9;
 * @return {string}
 */
proto.api.RemoteMulticastGroup.prototype.getMcNwkSKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 9, ""));
};


/** @param {string} value  */
proto.api.RemoteMulticastGroup.prototype.setMcNwkSKey = function(value) {
  jspb.Message.setField(this, 9, value);
};


/**
 * optional string mc_app_s_key = 10;
 * @return {string}
 */
proto.api.RemoteMulticastGroup.prototype.getMcAppSKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 10, ""));
};


/** @param {string} value  */
proto.api.RemoteMulticastGroup.prototype.setMcAppSKey = function(value) {
  jspb.Message.setField(this, 10, value);
};


/**
 * optional uint32 f_cnt = 11;
 * @return {number}
 */
proto.api.RemoteMulticastGroup.prototype.getFCnt = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 11, 0));
};


/** @param {number} value  */
proto.api.RemoteMulticastGroup.prototype.setFCnt = function(value) {
  jspb.Message.setField(this, 11, value);
};


/**
 * optional string state = 12;
 * @return {string}
 */
proto.api.RemoteMulticastGroup.prototype.getState = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 12, ""));
};


/** @param {string} value  */
proto.api.RemoteMulticastGroup.prototype.setState = function(value) {
  jspb.Message.setField(this, 12, value);
};


/**
 * optional google.protobuf.Duration unicast_timeout = 13;
 * @return {proto.google.protobuf.Duration}
 */
proto.api.RemoteMulticastGroup.prototype.getUnicastTimeout = function() {
  return /** @type{proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 13));
};


/** @param {proto.google.protobuf.Duration|undefined} value  */
proto.api.RemoteMulticastGroup.prototype.setUnicastTimeout = function(value) {
  jspb.Message.setWrapperField(this, 13, value);
};


proto.api.RemoteMulticastGroup.prototype.clearUnicastTimeout = function() {
  this.setUnicastTimeout(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.api.RemoteMulticastGroup.prototype.hasUnicastTimeout = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional google.protobuf.Timestamp next_step_after = 14;
 * @return {proto.google.protobuf.Timestamp}
 */
proto.api.RemoteMulticastGroup.prototype.getNextStepAfter = function() {
  return /** @type{proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 14));
};


/** @param {proto.google.protobuf.Timestamp|undefined} value  */
proto.api.RemoteMulticastGroup.prototype.setNextStepAfter = function(value) {
  jspb.Message.setWrapperField(this, 14, value);
};


proto.api.RemoteMulticastGroup.prototype.clearNextStepAfter = function() {
  this.setNextStepAfter(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.api.RemoteMulticastGroup.prototype.hasNextStepAfter = function() {
  return jspb.Message.getField(this, 14) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.RemoteMulticastDeploymentDevice = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.RemoteMulticastDeploymentDevice, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.RemoteMulticastDeploymentDevice.displayName = 'proto.api.RemoteMulticastDeploymentDevice';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.RemoteMulticastDeploymentDevice.prototype.toObject = function(opt_includeInstance) {
  return proto.api.RemoteMulticastDeploymentDevice.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.RemoteMulticastDeploymentDevice} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.RemoteMulticastDeploymentDevice.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: msg.getId(),
    devEui: msg.getDevEui(),
    deviceName: msg.getDeviceName(),
    applicationId: msg.getApplicationId(),
    applicationName: msg.getApplicationName(),
    lastSeenAt: (f = msg.getLastSeenAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    mcGroupId: msg.getMcGroupId(),
    createdAt: (f = msg.getCreatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    updatedAt: (f = msg.getUpdatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    state: msg.getState(),
    errorMessage: msg.getErrorMessage()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.RemoteMulticastDeploymentDevice}
 */
proto.api.RemoteMulticastDeploymentDevice.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.RemoteMulticastDeploymentDevice;
  return proto.api.RemoteMulticastDeploymentDevice.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.RemoteMulticastDeploymentDevice} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.RemoteMulticastDeploymentDevice}
 */
proto.api.RemoteMulticastDeploymentDevice.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDevEui(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceName(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setApplicationId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setApplicationName(value);
      break;
    case 6:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setLastSeenAt(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMcGroupId(value);
      break;
    case 8:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 9:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdatedAt(value);
      break;
    case 10:
      var value = /** @type {!proto.api.FUOTADeploymentDeviceState} */ (reader.readEnum());
      msg.setState(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrorMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.RemoteMulticastDeploymentDevice} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.RemoteMulticastDeploymentDevice.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.RemoteMulticastDeploymentDevice.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.RemoteMulticastDeploymentDevice.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getDevEui();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = this.getDeviceName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = this.getApplicationId();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = this.getApplicationName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = this.getLastSeenAt();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = this.getMcGroupId();
  if (f !== 0) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = this.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = this.getUpdatedAt();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = this.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      10,
      f
    );
  }
  f = this.getErrorMessage();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.RemoteMulticastDeploymentDevice} The clone.
 */
proto.api.RemoteMulticastDeploymentDevice.prototype.cloneMessage = function() {
  return /** @type {!proto.api.RemoteMulticastDeploymentDevice} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.api.RemoteMulticastDeploymentDevice.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.api.RemoteMulticastDeploymentDevice.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string dev_eui = 2;
 * @return {string}
 */
proto.api.RemoteMulticastDeploymentDevice.prototype.getDevEui = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.api.RemoteMulticastDeploymentDevice.prototype.setDevEui = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string device_name = 3;
 * @return {string}
 */
proto.api.RemoteMulticastDeploymentDevice.prototype.getDeviceName = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, ""));
};


/** @param {string} value  */
proto.api.RemoteMulticastDeploymentDevice.prototype.setDeviceName = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional int64 application_id = 4;
 * @return {number}
 */
proto.api.RemoteMulticastDeploymentDevice.prototype.getApplicationId = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 4, 0));
};


/** @param {number} value  */
proto.api.RemoteMulticastDeploymentDevice.prototype.setApplicationId = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string application_name = 5;
 * @return {string}
 */
proto.api.RemoteMulticastDeploymentDevice.prototype.getApplicationName = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, ""));
};


/** @param {string} value  */
proto.api.RemoteMulticastDeploymentDevice.prototype.setApplicationName = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional google.protobuf.Timestamp last_seen_at = 6;
 * @return {proto.google.protobuf.Timestamp}
 */
proto.api.RemoteMulticastDeploymentDevice.prototype.getLastSeenAt = function() {
  return /** @type{proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 6));
};


/** @param {proto.google.protobuf.Timestamp|undefined} value  */
proto.api.RemoteMulticastDeploymentDevice.prototype.setLastSeenAt = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.api.RemoteMulticastDeploymentDevice.prototype.clearLastSeenAt = function() {
  this.setLastSeenAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.api.RemoteMulticastDeploymentDevice.prototype.hasLastSeenAt = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint32 mc_group_id = 7;
 * @return {number}
 */
proto.api.RemoteMulticastDeploymentDevice.prototype.getMcGroupId = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 7, 0));
};


/** @param {number} value  */
proto.api.RemoteMulticastDeploymentDevice.prototype.setMcGroupId = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * optional google.protobuf.Timestamp created_at = 8;
 * @return {proto.google.protobuf.Timestamp}
 */
proto.api.RemoteMulticastDeploymentDevice.prototype.getCreatedAt = function() {
  return /** @type{proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 8));
};


/** @param {proto.google.protobuf.Timestamp|undefined} value  */
proto.api.RemoteMulticastDeploymentDevice.prototype.setCreatedAt = function(value) {
  jspb.Message.setWrapperField(this, 8, value);
};


proto.api.RemoteMulticastDeploymentDevice.prototype.clearCreatedAt = function() {
  this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.api.RemoteMulticastDeploymentDevice.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional google.protobuf.Timestamp updated_at = 9;
 * @return {proto.google.protobuf.Timestamp}
 */
proto.api.RemoteMulticastDeploymentDevice.prototype.getUpdatedAt = function() {
  return /** @type{proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 9));
};


/** @param {proto.google.protobuf.Timestamp|undefined} value  */
proto.api.RemoteMulticastDeploymentDevice.prototype.setUpdatedAt = function(value) {
  jspb.Message.setWrapperField(this, 9, value);
};


proto.api.RemoteMulticastDeploymentDevice.prototype.clearUpdatedAt = function() {
  this.setUpdatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.api.RemoteMulticastDeploymentDevice.prototype.hasUpdatedAt = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional FUOTADeploymentDeviceState state = 10;
 * @return {!proto.api.FUOTADeploymentDeviceState}
 */
proto.api.RemoteMulticastDeploymentDevice.prototype.getState = function() {
  return /** @type {!proto.api.FUOTADeploymentDeviceState} */ (jspb.Message.getFieldProto3(this, 10, 0));
};


/** @param {!proto.api.FUOTADeploymentDeviceState} value  */
proto.api.RemoteMulticastDeploymentDevice.prototype.setState = function(value) {
  jspb.Message.setField(this, 10, value);
};


/**
 * optional string error_message = 11;
 * @return {string}
 */
proto.api.RemoteMulticastDeploymentDevice.prototype.getErrorMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 11, ""));
};


/** @param {string} value  */
proto.api.RemoteMulticastDeploymentDevice.prototype.setErrorMessage = function(value) {
  jspb.Message.setField(this, 11, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.RemoteMulticastGroupListItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.RemoteMulticastGroupListItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.RemoteMulticastGroupListItem.displayName = 'proto.api.RemoteMulticastGroupListItem';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.RemoteMulticastGroupListItem.prototype.toObject = function(opt_includeInstance) {
  return proto.api.RemoteMulticastGroupListItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.RemoteMulticastGroupListItem} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.RemoteMulticastGroupListItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: msg.getId(),
    name: msg.getName(),
    serviceProfileId: msg.getServiceProfileId(),
    serviceProfileName: msg.getServiceProfileName(),
    state: msg.getState()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.RemoteMulticastGroupListItem}
 */
proto.api.RemoteMulticastGroupListItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.RemoteMulticastGroupListItem;
  return proto.api.RemoteMulticastGroupListItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.RemoteMulticastGroupListItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.RemoteMulticastGroupListItem}
 */
proto.api.RemoteMulticastGroupListItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setServiceProfileId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setServiceProfileName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setState(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.RemoteMulticastGroupListItem} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.RemoteMulticastGroupListItem.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.RemoteMulticastGroupListItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.RemoteMulticastGroupListItem.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = this.getServiceProfileId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = this.getServiceProfileName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = this.getState();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.RemoteMulticastGroupListItem} The clone.
 */
proto.api.RemoteMulticastGroupListItem.prototype.cloneMessage = function() {
  return /** @type {!proto.api.RemoteMulticastGroupListItem} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.api.RemoteMulticastGroupListItem.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.api.RemoteMulticastGroupListItem.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.api.RemoteMulticastGroupListItem.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.api.RemoteMulticastGroupListItem.prototype.setName = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string service_profile_id = 3;
 * @return {string}
 */
proto.api.RemoteMulticastGroupListItem.prototype.getServiceProfileId = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, ""));
};


/** @param {string} value  */
proto.api.RemoteMulticastGroupListItem.prototype.setServiceProfileId = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string service_profile_name = 4;
 * @return {string}
 */
proto.api.RemoteMulticastGroupListItem.prototype.getServiceProfileName = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, ""));
};


/** @param {string} value  */
proto.api.RemoteMulticastGroupListItem.prototype.setServiceProfileName = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string state = 5;
 * @return {string}
 */
proto.api.RemoteMulticastGroupListItem.prototype.getState = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, ""));
};


/** @param {string} value  */
proto.api.RemoteMulticastGroupListItem.prototype.setState = function(value) {
  jspb.Message.setField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.CreateRemoteMulticastGroupRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.CreateRemoteMulticastGroupRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.CreateRemoteMulticastGroupRequest.displayName = 'proto.api.CreateRemoteMulticastGroupRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.CreateRemoteMulticastGroupRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.CreateRemoteMulticastGroupRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.CreateRemoteMulticastGroupRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.CreateRemoteMulticastGroupRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    remoteMulticastGroup: (f = msg.getRemoteMulticastGroup()) && proto.api.RemoteMulticastGroup.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.CreateRemoteMulticastGroupRequest}
 */
proto.api.CreateRemoteMulticastGroupRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.CreateRemoteMulticastGroupRequest;
  return proto.api.CreateRemoteMulticastGroupRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.CreateRemoteMulticastGroupRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.CreateRemoteMulticastGroupRequest}
 */
proto.api.CreateRemoteMulticastGroupRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.RemoteMulticastGroup;
      reader.readMessage(value,proto.api.RemoteMulticastGroup.deserializeBinaryFromReader);
      msg.setRemoteMulticastGroup(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.CreateRemoteMulticastGroupRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.CreateRemoteMulticastGroupRequest.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.CreateRemoteMulticastGroupRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.CreateRemoteMulticastGroupRequest.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getRemoteMulticastGroup();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api.RemoteMulticastGroup.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.CreateRemoteMulticastGroupRequest} The clone.
 */
proto.api.CreateRemoteMulticastGroupRequest.prototype.cloneMessage = function() {
  return /** @type {!proto.api.CreateRemoteMulticastGroupRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional RemoteMulticastGroup remote_multicast_group = 1;
 * @return {proto.api.RemoteMulticastGroup}
 */
proto.api.CreateRemoteMulticastGroupRequest.prototype.getRemoteMulticastGroup = function() {
  return /** @type{proto.api.RemoteMulticastGroup} */ (
    jspb.Message.getWrapperField(this, proto.api.RemoteMulticastGroup, 1));
};


/** @param {proto.api.RemoteMulticastGroup|undefined} value  */
proto.api.CreateRemoteMulticastGroupRequest.prototype.setRemoteMulticastGroup = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.CreateRemoteMulticastGroupRequest.prototype.clearRemoteMulticastGroup = function() {
  this.setRemoteMulticastGroup(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.api.CreateRemoteMulticastGroupRequest.prototype.hasRemoteMulticastGroup = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.CreateRemoteMulticastGroupResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.CreateRemoteMulticastGroupResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.CreateRemoteMulticastGroupResponse.displayName = 'proto.api.CreateRemoteMulticastGroupResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.CreateRemoteMulticastGroupResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.CreateRemoteMulticastGroupResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.CreateRemoteMulticastGroupResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.CreateRemoteMulticastGroupResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: msg.getId()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.CreateRemoteMulticastGroupResponse}
 */
proto.api.CreateRemoteMulticastGroupResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.CreateRemoteMulticastGroupResponse;
  return proto.api.CreateRemoteMulticastGroupResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.CreateRemoteMulticastGroupResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.CreateRemoteMulticastGroupResponse}
 */
proto.api.CreateRemoteMulticastGroupResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.CreateRemoteMulticastGroupResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.CreateRemoteMulticastGroupResponse.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.CreateRemoteMulticastGroupResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.CreateRemoteMulticastGroupResponse.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.CreateRemoteMulticastGroupResponse} The clone.
 */
proto.api.CreateRemoteMulticastGroupResponse.prototype.cloneMessage = function() {
  return /** @type {!proto.api.CreateRemoteMulticastGroupResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.api.CreateRemoteMulticastGroupResponse.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.api.CreateRemoteMulticastGroupResponse.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.GetRemoteMulticastGroupRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.GetRemoteMulticastGroupRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.GetRemoteMulticastGroupRequest.displayName = 'proto.api.GetRemoteMulticastGroupRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.GetRemoteMulticastGroupRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.GetRemoteMulticastGroupRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.GetRemoteMulticastGroupRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.GetRemoteMulticastGroupRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: msg.getId()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.GetRemoteMulticastGroupRequest}
 */
proto.api.GetRemoteMulticastGroupRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.GetRemoteMulticastGroupRequest;
  return proto.api.GetRemoteMulticastGroupRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.GetRemoteMulticastGroupRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.GetRemoteMulticastGroupRequest}
 */
proto.api.GetRemoteMulticastGroupRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.GetRemoteMulticastGroupRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.GetRemoteMulticastGroupRequest.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.GetRemoteMulticastGroupRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.GetRemoteMulticastGroupRequest.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.GetRemoteMulticastGroupRequest} The clone.
 */
proto.api.GetRemoteMulticastGroupRequest.prototype.cloneMessage = function() {
  return /** @type {!proto.api.GetRemoteMulticastGroupRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.api.GetRemoteMulticastGroupRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.api.GetRemoteMulticastGroupRequest.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.GetRemoteMulticastGroupResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.GetRemoteMulticastGroupResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.GetRemoteMulticastGroupResponse.displayName = 'proto.api.GetRemoteMulticastGroupResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.GetRemoteMulticastGroupResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.GetRemoteMulticastGroupResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.GetRemoteMulticastGroupResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.GetRemoteMulticastGroupResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    remoteMulticastGroup: (f = msg.getRemoteMulticastGroup()) && proto.api.RemoteMulticastGroup.toObject(includeInstance, f),
    createdAt: (f = msg.getCreatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    updatedAt: (f = msg.getUpdatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.GetRemoteMulticastGroupResponse}
 */
proto.api.GetRemoteMulticastGroupResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.GetRemoteMulticastGroupResponse;
  return proto.api.GetRemoteMulticastGroupResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.GetRemoteMulticastGroupResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.GetRemoteMulticastGroupResponse}
 */
proto.api.GetRemoteMulticastGroupResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.RemoteMulticastGroup;
      reader.readMessage(value,proto.api.RemoteMulticastGroup.deserializeBinaryFromReader);
      msg.setRemoteMulticastGroup(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdatedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.GetRemoteMulticastGroupResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.GetRemoteMulticastGroupResponse.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.GetRemoteMulticastGroupResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.GetRemoteMulticastGroupResponse.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getRemoteMulticastGroup();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api.RemoteMulticastGroup.serializeBinaryToWriter
    );
  }
  f = this.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = this.getUpdatedAt();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.GetRemoteMulticastGroupResponse} The clone.
 */
proto.api.GetRemoteMulticastGroupResponse.prototype.cloneMessage = function() {
  return /** @type {!proto.api.GetRemoteMulticastGroupResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional RemoteMulticastGroup remote_multicast_group = 1;
 * @return {proto.api.RemoteMulticastGroup}
 */
proto.api.GetRemoteMulticastGroupResponse.prototype.getRemoteMulticastGroup = function() {
  return /** @type{proto.api.RemoteMulticastGroup} */ (
    jspb.Message.getWrapperField(this, proto.api.RemoteMulticastGroup, 1));
};


/** @param {proto.api.RemoteMulticastGroup|undefined} value  */
proto.api.GetRemoteMulticastGroupResponse.prototype.setRemoteMulticastGroup = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.GetRemoteMulticastGroupResponse.prototype.clearRemoteMulticastGroup = function() {
  this.setRemoteMulticastGroup(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.api.GetRemoteMulticastGroupResponse.prototype.hasRemoteMulticastGroup = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Timestamp created_at = 2;
 * @return {proto.google.protobuf.Timestamp}
 */
proto.api.GetRemoteMulticastGroupResponse.prototype.getCreatedAt = function() {
  return /** @type{proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/** @param {proto.google.protobuf.Timestamp|undefined} value  */
proto.api.GetRemoteMulticastGroupResponse.prototype.setCreatedAt = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.api.GetRemoteMulticastGroupResponse.prototype.clearCreatedAt = function() {
  this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.api.GetRemoteMulticastGroupResponse.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Timestamp updated_at = 3;
 * @return {proto.google.protobuf.Timestamp}
 */
proto.api.GetRemoteMulticastGroupResponse.prototype.getUpdatedAt = function() {
  return /** @type{proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/** @param {proto.google.protobuf.Timestamp|undefined} value  */
proto.api.GetRemoteMulticastGroupResponse.prototype.setUpdatedAt = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.api.GetRemoteMulticastGroupResponse.prototype.clearUpdatedAt = function() {
  this.setUpdatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.api.GetRemoteMulticastGroupResponse.prototype.hasUpdatedAt = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.ListRemoteMulticastGroupRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.ListRemoteMulticastGroupRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.ListRemoteMulticastGroupRequest.displayName = 'proto.api.ListRemoteMulticastGroupRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.ListRemoteMulticastGroupRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.ListRemoteMulticastGroupRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.ListRemoteMulticastGroupRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.ListRemoteMulticastGroupRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    limit: msg.getLimit(),
    offset: msg.getOffset(),
    organizationId: msg.getOrganizationId(),
    serviceProfileId: msg.getServiceProfileId(),
    search: msg.getSearch()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.ListRemoteMulticastGroupRequest}
 */
proto.api.ListRemoteMulticastGroupRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.ListRemoteMulticastGroupRequest;
  return proto.api.ListRemoteMulticastGroupRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.ListRemoteMulticastGroupRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.ListRemoteMulticastGroupRequest}
 */
proto.api.ListRemoteMulticastGroupRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLimit(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOffset(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOrganizationId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setServiceProfileId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setSearch(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.ListRemoteMulticastGroupRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.ListRemoteMulticastGroupRequest.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.ListRemoteMulticastGroupRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.ListRemoteMulticastGroupRequest.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getLimit();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = this.getOffset();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = this.getOrganizationId();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = this.getServiceProfileId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = this.getSearch();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.ListRemoteMulticastGroupRequest} The clone.
 */
proto.api.ListRemoteMulticastGroupRequest.prototype.cloneMessage = function() {
  return /** @type {!proto.api.ListRemoteMulticastGroupRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int64 limit = 1;
 * @return {number}
 */
proto.api.ListRemoteMulticastGroupRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.api.ListRemoteMulticastGroupRequest.prototype.setLimit = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional int64 offset = 2;
 * @return {number}
 */
proto.api.ListRemoteMulticastGroupRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.api.ListRemoteMulticastGroupRequest.prototype.setOffset = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional int64 organization_id = 3;
 * @return {number}
 */
proto.api.ListRemoteMulticastGroupRequest.prototype.getOrganizationId = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.api.ListRemoteMulticastGroupRequest.prototype.setOrganizationId = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string service_profile_id = 4;
 * @return {string}
 */
proto.api.ListRemoteMulticastGroupRequest.prototype.getServiceProfileId = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, ""));
};


/** @param {string} value  */
proto.api.ListRemoteMulticastGroupRequest.prototype.setServiceProfileId = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string search = 5;
 * @return {string}
 */
proto.api.ListRemoteMulticastGroupRequest.prototype.getSearch = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, ""));
};


/** @param {string} value  */
proto.api.ListRemoteMulticastGroupRequest.prototype.setSearch = function(value) {
  jspb.Message.setField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.ListRemoteMulticastGroupResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.ListRemoteMulticastGroupResponse.repeatedFields_, null);
};
goog.inherits(proto.api.ListRemoteMulticastGroupResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.ListRemoteMulticastGroupResponse.displayName = 'proto.api.ListRemoteMulticastGroupResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.ListRemoteMulticastGroupResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.ListRemoteMulticastGroupResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.ListRemoteMulticastGroupResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.ListRemoteMulticastGroupResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.ListRemoteMulticastGroupResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    totalCount: msg.getTotalCount(),
    resultList: jspb.Message.toObjectList(msg.getResultList(),
    proto.api.RemoteMulticastGroupListItem.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.ListRemoteMulticastGroupResponse}
 */
proto.api.ListRemoteMulticastGroupResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.ListRemoteMulticastGroupResponse;
  return proto.api.ListRemoteMulticastGroupResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.ListRemoteMulticastGroupResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.ListRemoteMulticastGroupResponse}
 */
proto.api.ListRemoteMulticastGroupResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotalCount(value);
      break;
    case 2:
      var value = new proto.api.RemoteMulticastGroupListItem;
      reader.readMessage(value,proto.api.RemoteMulticastGroupListItem.deserializeBinaryFromReader);
      msg.getResultList().push(value);
      msg.setResultList(msg.getResultList());
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.ListRemoteMulticastGroupResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.ListRemoteMulticastGroupResponse.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.ListRemoteMulticastGroupResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.ListRemoteMulticastGroupResponse.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getTotalCount();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = this.getResultList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.api.RemoteMulticastGroupListItem.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.ListRemoteMulticastGroupResponse} The clone.
 */
proto.api.ListRemoteMulticastGroupResponse.prototype.cloneMessage = function() {
  return /** @type {!proto.api.ListRemoteMulticastGroupResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int64 total_count = 1;
 * @return {number}
 */
proto.api.ListRemoteMulticastGroupResponse.prototype.getTotalCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.api.ListRemoteMulticastGroupResponse.prototype.setTotalCount = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * repeated RemoteMulticastGroupListItem result = 2;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.api.RemoteMulticastGroupListItem>}
 */
proto.api.ListRemoteMulticastGroupResponse.prototype.getResultList = function() {
  return /** @type{!Array.<!proto.api.RemoteMulticastGroupListItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.RemoteMulticastGroupListItem, 2));
};


/** @param {Array.<!proto.api.RemoteMulticastGroupListItem>} value  */
proto.api.ListRemoteMulticastGroupResponse.prototype.setResultList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


proto.api.ListRemoteMulticastGroupResponse.prototype.clearResultList = function() {
  this.setResultList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.UpdateRemoteMulticastGroupRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.UpdateRemoteMulticastGroupRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.UpdateRemoteMulticastGroupRequest.displayName = 'proto.api.UpdateRemoteMulticastGroupRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.UpdateRemoteMulticastGroupRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.UpdateRemoteMulticastGroupRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.UpdateRemoteMulticastGroupRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.UpdateRemoteMulticastGroupRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    remoteMulticastGroup: (f = msg.getRemoteMulticastGroup()) && proto.api.RemoteMulticastGroup.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.UpdateRemoteMulticastGroupRequest}
 */
proto.api.UpdateRemoteMulticastGroupRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.UpdateRemoteMulticastGroupRequest;
  return proto.api.UpdateRemoteMulticastGroupRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.UpdateRemoteMulticastGroupRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.UpdateRemoteMulticastGroupRequest}
 */
proto.api.UpdateRemoteMulticastGroupRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.RemoteMulticastGroup;
      reader.readMessage(value,proto.api.RemoteMulticastGroup.deserializeBinaryFromReader);
      msg.setRemoteMulticastGroup(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.UpdateRemoteMulticastGroupRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.UpdateRemoteMulticastGroupRequest.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.UpdateRemoteMulticastGroupRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.UpdateRemoteMulticastGroupRequest.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getRemoteMulticastGroup();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api.RemoteMulticastGroup.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.UpdateRemoteMulticastGroupRequest} The clone.
 */
proto.api.UpdateRemoteMulticastGroupRequest.prototype.cloneMessage = function() {
  return /** @type {!proto.api.UpdateRemoteMulticastGroupRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional RemoteMulticastGroup remote_multicast_group = 1;
 * @return {proto.api.RemoteMulticastGroup}
 */
proto.api.UpdateRemoteMulticastGroupRequest.prototype.getRemoteMulticastGroup = function() {
  return /** @type{proto.api.RemoteMulticastGroup} */ (
    jspb.Message.getWrapperField(this, proto.api.RemoteMulticastGroup, 1));
};


/** @param {proto.api.RemoteMulticastGroup|undefined} value  */
proto.api.UpdateRemoteMulticastGroupRequest.prototype.setRemoteMulticastGroup = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.UpdateRemoteMulticastGroupRequest.prototype.clearRemoteMulticastGroup = function() {
  this.setRemoteMulticastGroup(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.api.UpdateRemoteMulticastGroupRequest.prototype.hasRemoteMulticastGroup = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.DeleteRemoteMulticastGroupRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.DeleteRemoteMulticastGroupRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.DeleteRemoteMulticastGroupRequest.displayName = 'proto.api.DeleteRemoteMulticastGroupRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.DeleteRemoteMulticastGroupRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.DeleteRemoteMulticastGroupRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.DeleteRemoteMulticastGroupRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.DeleteRemoteMulticastGroupRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: msg.getId()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.DeleteRemoteMulticastGroupRequest}
 */
proto.api.DeleteRemoteMulticastGroupRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.DeleteRemoteMulticastGroupRequest;
  return proto.api.DeleteRemoteMulticastGroupRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.DeleteRemoteMulticastGroupRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.DeleteRemoteMulticastGroupRequest}
 */
proto.api.DeleteRemoteMulticastGroupRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.DeleteRemoteMulticastGroupRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.DeleteRemoteMulticastGroupRequest.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.DeleteRemoteMulticastGroupRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.DeleteRemoteMulticastGroupRequest.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.DeleteRemoteMulticastGroupRequest} The clone.
 */
proto.api.DeleteRemoteMulticastGroupRequest.prototype.cloneMessage = function() {
  return /** @type {!proto.api.DeleteRemoteMulticastGroupRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.api.DeleteRemoteMulticastGroupRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.api.DeleteRemoteMulticastGroupRequest.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.AddDeviceToRemoteMulticastGroupRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.AddDeviceToRemoteMulticastGroupRequest.repeatedFields_, null);
};
goog.inherits(proto.api.AddDeviceToRemoteMulticastGroupRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.AddDeviceToRemoteMulticastGroupRequest.displayName = 'proto.api.AddDeviceToRemoteMulticastGroupRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.AddDeviceToRemoteMulticastGroupRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.AddDeviceToRemoteMulticastGroupRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.AddDeviceToRemoteMulticastGroupRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.AddDeviceToRemoteMulticastGroupRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.AddDeviceToRemoteMulticastGroupRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    remoteMulticastGroupId: msg.getRemoteMulticastGroupId(),
    devEuisList: jspb.Message.getField(msg, 2)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.AddDeviceToRemoteMulticastGroupRequest}
 */
proto.api.AddDeviceToRemoteMulticastGroupRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.AddDeviceToRemoteMulticastGroupRequest;
  return proto.api.AddDeviceToRemoteMulticastGroupRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.AddDeviceToRemoteMulticastGroupRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.AddDeviceToRemoteMulticastGroupRequest}
 */
proto.api.AddDeviceToRemoteMulticastGroupRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteMulticastGroupId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.getDevEuisList().push(value);
      msg.setDevEuisList(msg.getDevEuisList());
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.AddDeviceToRemoteMulticastGroupRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.AddDeviceToRemoteMulticastGroupRequest.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.AddDeviceToRemoteMulticastGroupRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.AddDeviceToRemoteMulticastGroupRequest.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getRemoteMulticastGroupId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getDevEuisList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.AddDeviceToRemoteMulticastGroupRequest} The clone.
 */
proto.api.AddDeviceToRemoteMulticastGroupRequest.prototype.cloneMessage = function() {
  return /** @type {!proto.api.AddDeviceToRemoteMulticastGroupRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string remote_multicast_group_id = 1;
 * @return {string}
 */
proto.api.AddDeviceToRemoteMulticastGroupRequest.prototype.getRemoteMulticastGroupId = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.api.AddDeviceToRemoteMulticastGroupRequest.prototype.setRemoteMulticastGroupId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * repeated string dev_euis = 2;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<string>}
 */
proto.api.AddDeviceToRemoteMulticastGroupRequest.prototype.getDevEuisList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getField(this, 2));
};


/** @param {Array.<string>} value  */
proto.api.AddDeviceToRemoteMulticastGroupRequest.prototype.setDevEuisList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


proto.api.AddDeviceToRemoteMulticastGroupRequest.prototype.clearDevEuisList = function() {
  jspb.Message.setField(this, 2, []);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.RemoveDeviceFromRemoteMulticastGroupRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.RemoveDeviceFromRemoteMulticastGroupRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.RemoveDeviceFromRemoteMulticastGroupRequest.displayName = 'proto.api.RemoveDeviceFromRemoteMulticastGroupRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.RemoveDeviceFromRemoteMulticastGroupRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.RemoveDeviceFromRemoteMulticastGroupRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.RemoveDeviceFromRemoteMulticastGroupRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.RemoveDeviceFromRemoteMulticastGroupRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    remoteMulticastGroupId: msg.getRemoteMulticastGroupId(),
    devEui: msg.getDevEui()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.RemoveDeviceFromRemoteMulticastGroupRequest}
 */
proto.api.RemoveDeviceFromRemoteMulticastGroupRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.RemoveDeviceFromRemoteMulticastGroupRequest;
  return proto.api.RemoveDeviceFromRemoteMulticastGroupRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.RemoveDeviceFromRemoteMulticastGroupRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.RemoveDeviceFromRemoteMulticastGroupRequest}
 */
proto.api.RemoveDeviceFromRemoteMulticastGroupRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteMulticastGroupId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDevEui(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.RemoveDeviceFromRemoteMulticastGroupRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.RemoveDeviceFromRemoteMulticastGroupRequest.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.RemoveDeviceFromRemoteMulticastGroupRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.RemoveDeviceFromRemoteMulticastGroupRequest.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getRemoteMulticastGroupId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getDevEui();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.RemoveDeviceFromRemoteMulticastGroupRequest} The clone.
 */
proto.api.RemoveDeviceFromRemoteMulticastGroupRequest.prototype.cloneMessage = function() {
  return /** @type {!proto.api.RemoveDeviceFromRemoteMulticastGroupRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string remote_multicast_group_id = 1;
 * @return {string}
 */
proto.api.RemoveDeviceFromRemoteMulticastGroupRequest.prototype.getRemoteMulticastGroupId = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.api.RemoveDeviceFromRemoteMulticastGroupRequest.prototype.setRemoteMulticastGroupId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string dev_eui = 2;
 * @return {string}
 */
proto.api.RemoveDeviceFromRemoteMulticastGroupRequest.prototype.getDevEui = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.api.RemoveDeviceFromRemoteMulticastGroupRequest.prototype.setDevEui = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.ListRemoteMulticastDeviceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.ListRemoteMulticastDeviceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.ListRemoteMulticastDeviceRequest.displayName = 'proto.api.ListRemoteMulticastDeviceRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.ListRemoteMulticastDeviceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.ListRemoteMulticastDeviceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.ListRemoteMulticastDeviceRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.ListRemoteMulticastDeviceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    limit: msg.getLimit(),
    offset: msg.getOffset(),
    remoteMulticastGroupId: msg.getRemoteMulticastGroupId(),
    applicationId: msg.getApplicationId(),
    search: msg.getSearch()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.ListRemoteMulticastDeviceRequest}
 */
proto.api.ListRemoteMulticastDeviceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.ListRemoteMulticastDeviceRequest;
  return proto.api.ListRemoteMulticastDeviceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.ListRemoteMulticastDeviceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.ListRemoteMulticastDeviceRequest}
 */
proto.api.ListRemoteMulticastDeviceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLimit(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOffset(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteMulticastGroupId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setApplicationId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setSearch(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.ListRemoteMulticastDeviceRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.ListRemoteMulticastDeviceRequest.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.ListRemoteMulticastDeviceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.ListRemoteMulticastDeviceRequest.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getLimit();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = this.getOffset();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = this.getRemoteMulticastGroupId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = this.getApplicationId();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = this.getSearch();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.ListRemoteMulticastDeviceRequest} The clone.
 */
proto.api.ListRemoteMulticastDeviceRequest.prototype.cloneMessage = function() {
  return /** @type {!proto.api.ListRemoteMulticastDeviceRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int64 limit = 1;
 * @return {number}
 */
proto.api.ListRemoteMulticastDeviceRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.api.ListRemoteMulticastDeviceRequest.prototype.setLimit = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional int64 offset = 2;
 * @return {number}
 */
proto.api.ListRemoteMulticastDeviceRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.api.ListRemoteMulticastDeviceRequest.prototype.setOffset = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string remote_multicast_group_id = 3;
 * @return {string}
 */
proto.api.ListRemoteMulticastDeviceRequest.prototype.getRemoteMulticastGroupId = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, ""));
};


/** @param {string} value  */
proto.api.ListRemoteMulticastDeviceRequest.prototype.setRemoteMulticastGroupId = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional int64 application_id = 4;
 * @return {number}
 */
proto.api.ListRemoteMulticastDeviceRequest.prototype.getApplicationId = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 4, 0));
};


/** @param {number} value  */
proto.api.ListRemoteMulticastDeviceRequest.prototype.setApplicationId = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string search = 5;
 * @return {string}
 */
proto.api.ListRemoteMulticastDeviceRequest.prototype.getSearch = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, ""));
};


/** @param {string} value  */
proto.api.ListRemoteMulticastDeviceRequest.prototype.setSearch = function(value) {
  jspb.Message.setField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.ListRemoteMulticastDeviceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.ListRemoteMulticastDeviceResponse.repeatedFields_, null);
};
goog.inherits(proto.api.ListRemoteMulticastDeviceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.ListRemoteMulticastDeviceResponse.displayName = 'proto.api.ListRemoteMulticastDeviceResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.ListRemoteMulticastDeviceResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.ListRemoteMulticastDeviceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.ListRemoteMulticastDeviceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.ListRemoteMulticastDeviceResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.ListRemoteMulticastDeviceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    totalCount: msg.getTotalCount(),
    resultList: jspb.Message.toObjectList(msg.getResultList(),
    as_external_api_device_pb.DeviceListItem.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.ListRemoteMulticastDeviceResponse}
 */
proto.api.ListRemoteMulticastDeviceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.ListRemoteMulticastDeviceResponse;
  return proto.api.ListRemoteMulticastDeviceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.ListRemoteMulticastDeviceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.ListRemoteMulticastDeviceResponse}
 */
proto.api.ListRemoteMulticastDeviceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotalCount(value);
      break;
    case 2:
      var value = new as_external_api_device_pb.DeviceListItem;
      reader.readMessage(value,as_external_api_device_pb.DeviceListItem.deserializeBinaryFromReader);
      msg.getResultList().push(value);
      msg.setResultList(msg.getResultList());
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.ListRemoteMulticastDeviceResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.ListRemoteMulticastDeviceResponse.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.ListRemoteMulticastDeviceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.ListRemoteMulticastDeviceResponse.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getTotalCount();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = this.getResultList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      as_external_api_device_pb.DeviceListItem.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.ListRemoteMulticastDeviceResponse} The clone.
 */
proto.api.ListRemoteMulticastDeviceResponse.prototype.cloneMessage = function() {
  return /** @type {!proto.api.ListRemoteMulticastDeviceResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int64 total_count = 1;
 * @return {number}
 */
proto.api.ListRemoteMulticastDeviceResponse.prototype.getTotalCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.api.ListRemoteMulticastDeviceResponse.prototype.setTotalCount = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * repeated DeviceListItem result = 2;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.api.DeviceListItem>}
 */
proto.api.ListRemoteMulticastDeviceResponse.prototype.getResultList = function() {
  return /** @type{!Array.<!proto.api.DeviceListItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, as_external_api_device_pb.DeviceListItem, 2));
};


/** @param {Array.<!proto.api.DeviceListItem>} value  */
proto.api.ListRemoteMulticastDeviceResponse.prototype.setResultList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


proto.api.ListRemoteMulticastDeviceResponse.prototype.clearResultList = function() {
  this.setResultList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.ResetRemoteMulticastDeviceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.ResetRemoteMulticastDeviceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.ResetRemoteMulticastDeviceRequest.displayName = 'proto.api.ResetRemoteMulticastDeviceRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.ResetRemoteMulticastDeviceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.ResetRemoteMulticastDeviceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.ResetRemoteMulticastDeviceRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.ResetRemoteMulticastDeviceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    devEui: msg.getDevEui(),
    remoteMulticastGroupId: msg.getRemoteMulticastGroupId()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.ResetRemoteMulticastDeviceRequest}
 */
proto.api.ResetRemoteMulticastDeviceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.ResetRemoteMulticastDeviceRequest;
  return proto.api.ResetRemoteMulticastDeviceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.ResetRemoteMulticastDeviceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.ResetRemoteMulticastDeviceRequest}
 */
proto.api.ResetRemoteMulticastDeviceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDevEui(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteMulticastGroupId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.ResetRemoteMulticastDeviceRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.ResetRemoteMulticastDeviceRequest.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.ResetRemoteMulticastDeviceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.ResetRemoteMulticastDeviceRequest.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getDevEui();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getRemoteMulticastGroupId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.ResetRemoteMulticastDeviceRequest} The clone.
 */
proto.api.ResetRemoteMulticastDeviceRequest.prototype.cloneMessage = function() {
  return /** @type {!proto.api.ResetRemoteMulticastDeviceRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string dev_eui = 1;
 * @return {string}
 */
proto.api.ResetRemoteMulticastDeviceRequest.prototype.getDevEui = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.api.ResetRemoteMulticastDeviceRequest.prototype.setDevEui = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string remote_multicast_group_id = 2;
 * @return {string}
 */
proto.api.ResetRemoteMulticastDeviceRequest.prototype.getRemoteMulticastGroupId = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.api.ResetRemoteMulticastDeviceRequest.prototype.setRemoteMulticastGroupId = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.ListRemoteMulticastDevicesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.ListRemoteMulticastDevicesResponse.repeatedFields_, null);
};
goog.inherits(proto.api.ListRemoteMulticastDevicesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.ListRemoteMulticastDevicesResponse.displayName = 'proto.api.ListRemoteMulticastDevicesResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.ListRemoteMulticastDevicesResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.ListRemoteMulticastDevicesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.ListRemoteMulticastDevicesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.ListRemoteMulticastDevicesResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.ListRemoteMulticastDevicesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    totalCount: msg.getTotalCount(),
    resultList: jspb.Message.toObjectList(msg.getResultList(),
    proto.api.RemoteMulticastDeploymentDevice.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.ListRemoteMulticastDevicesResponse}
 */
proto.api.ListRemoteMulticastDevicesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.ListRemoteMulticastDevicesResponse;
  return proto.api.ListRemoteMulticastDevicesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.ListRemoteMulticastDevicesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.ListRemoteMulticastDevicesResponse}
 */
proto.api.ListRemoteMulticastDevicesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotalCount(value);
      break;
    case 2:
      var value = new proto.api.RemoteMulticastDeploymentDevice;
      reader.readMessage(value,proto.api.RemoteMulticastDeploymentDevice.deserializeBinaryFromReader);
      msg.getResultList().push(value);
      msg.setResultList(msg.getResultList());
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.ListRemoteMulticastDevicesResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.ListRemoteMulticastDevicesResponse.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.ListRemoteMulticastDevicesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.ListRemoteMulticastDevicesResponse.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getTotalCount();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = this.getResultList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.api.RemoteMulticastDeploymentDevice.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.ListRemoteMulticastDevicesResponse} The clone.
 */
proto.api.ListRemoteMulticastDevicesResponse.prototype.cloneMessage = function() {
  return /** @type {!proto.api.ListRemoteMulticastDevicesResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int64 total_count = 1;
 * @return {number}
 */
proto.api.ListRemoteMulticastDevicesResponse.prototype.getTotalCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.api.ListRemoteMulticastDevicesResponse.prototype.setTotalCount = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * repeated RemoteMulticastDeploymentDevice result = 2;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.api.RemoteMulticastDeploymentDevice>}
 */
proto.api.ListRemoteMulticastDevicesResponse.prototype.getResultList = function() {
  return /** @type{!Array.<!proto.api.RemoteMulticastDeploymentDevice>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.RemoteMulticastDeploymentDevice, 2));
};


/** @param {Array.<!proto.api.RemoteMulticastDeploymentDevice>} value  */
proto.api.ListRemoteMulticastDevicesResponse.prototype.setResultList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


proto.api.ListRemoteMulticastDevicesResponse.prototype.clearResultList = function() {
  this.setResultList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.GetRemoteMulticastDeploymentDeviceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.GetRemoteMulticastDeploymentDeviceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.GetRemoteMulticastDeploymentDeviceRequest.displayName = 'proto.api.GetRemoteMulticastDeploymentDeviceRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.GetRemoteMulticastDeploymentDeviceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.GetRemoteMulticastDeploymentDeviceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.GetRemoteMulticastDeploymentDeviceRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.GetRemoteMulticastDeploymentDeviceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    remoteMulticastGroupId: msg.getRemoteMulticastGroupId(),
    devEui: msg.getDevEui()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.GetRemoteMulticastDeploymentDeviceRequest}
 */
proto.api.GetRemoteMulticastDeploymentDeviceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.GetRemoteMulticastDeploymentDeviceRequest;
  return proto.api.GetRemoteMulticastDeploymentDeviceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.GetRemoteMulticastDeploymentDeviceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.GetRemoteMulticastDeploymentDeviceRequest}
 */
proto.api.GetRemoteMulticastDeploymentDeviceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteMulticastGroupId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDevEui(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.GetRemoteMulticastDeploymentDeviceRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.GetRemoteMulticastDeploymentDeviceRequest.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.GetRemoteMulticastDeploymentDeviceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.GetRemoteMulticastDeploymentDeviceRequest.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getRemoteMulticastGroupId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getDevEui();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.GetRemoteMulticastDeploymentDeviceRequest} The clone.
 */
proto.api.GetRemoteMulticastDeploymentDeviceRequest.prototype.cloneMessage = function() {
  return /** @type {!proto.api.GetRemoteMulticastDeploymentDeviceRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string remote_multicast_group_id = 1;
 * @return {string}
 */
proto.api.GetRemoteMulticastDeploymentDeviceRequest.prototype.getRemoteMulticastGroupId = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.api.GetRemoteMulticastDeploymentDeviceRequest.prototype.setRemoteMulticastGroupId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string dev_eui = 2;
 * @return {string}
 */
proto.api.GetRemoteMulticastDeploymentDeviceRequest.prototype.getDevEui = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.api.GetRemoteMulticastDeploymentDeviceRequest.prototype.setDevEui = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.GetRemoteMulticastDeploymentDeviceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.GetRemoteMulticastDeploymentDeviceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.GetRemoteMulticastDeploymentDeviceResponse.displayName = 'proto.api.GetRemoteMulticastDeploymentDeviceResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.GetRemoteMulticastDeploymentDeviceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.GetRemoteMulticastDeploymentDeviceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.GetRemoteMulticastDeploymentDeviceResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.GetRemoteMulticastDeploymentDeviceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    deploymentDevice: (f = msg.getDeploymentDevice()) && proto.api.RemoteMulticastDeploymentDevice.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.GetRemoteMulticastDeploymentDeviceResponse}
 */
proto.api.GetRemoteMulticastDeploymentDeviceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.GetRemoteMulticastDeploymentDeviceResponse;
  return proto.api.GetRemoteMulticastDeploymentDeviceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.GetRemoteMulticastDeploymentDeviceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.GetRemoteMulticastDeploymentDeviceResponse}
 */
proto.api.GetRemoteMulticastDeploymentDeviceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.RemoteMulticastDeploymentDevice;
      reader.readMessage(value,proto.api.RemoteMulticastDeploymentDevice.deserializeBinaryFromReader);
      msg.setDeploymentDevice(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.GetRemoteMulticastDeploymentDeviceResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.GetRemoteMulticastDeploymentDeviceResponse.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.GetRemoteMulticastDeploymentDeviceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.GetRemoteMulticastDeploymentDeviceResponse.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getDeploymentDevice();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api.RemoteMulticastDeploymentDevice.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.GetRemoteMulticastDeploymentDeviceResponse} The clone.
 */
proto.api.GetRemoteMulticastDeploymentDeviceResponse.prototype.cloneMessage = function() {
  return /** @type {!proto.api.GetRemoteMulticastDeploymentDeviceResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional RemoteMulticastDeploymentDevice deployment_device = 1;
 * @return {proto.api.RemoteMulticastDeploymentDevice}
 */
proto.api.GetRemoteMulticastDeploymentDeviceResponse.prototype.getDeploymentDevice = function() {
  return /** @type{proto.api.RemoteMulticastDeploymentDevice} */ (
    jspb.Message.getWrapperField(this, proto.api.RemoteMulticastDeploymentDevice, 1));
};


/** @param {proto.api.RemoteMulticastDeploymentDevice|undefined} value  */
proto.api.GetRemoteMulticastDeploymentDeviceResponse.prototype.setDeploymentDevice = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.GetRemoteMulticastDeploymentDeviceResponse.prototype.clearDeploymentDevice = function() {
  this.setDeploymentDevice(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.api.GetRemoteMulticastDeploymentDeviceResponse.prototype.hasDeploymentDevice = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.RemoteMulticastQueueItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.RemoteMulticastQueueItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.RemoteMulticastQueueItem.displayName = 'proto.api.RemoteMulticastQueueItem';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.RemoteMulticastQueueItem.prototype.toObject = function(opt_includeInstance) {
  return proto.api.RemoteMulticastQueueItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.RemoteMulticastQueueItem} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.RemoteMulticastQueueItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    remoteMulticastGroupId: msg.getRemoteMulticastGroupId(),
    fCnt: msg.getFCnt(),
    fPort: msg.getFPort(),
    data: msg.getData_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.RemoteMulticastQueueItem}
 */
proto.api.RemoteMulticastQueueItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.RemoteMulticastQueueItem;
  return proto.api.RemoteMulticastQueueItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.RemoteMulticastQueueItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.RemoteMulticastQueueItem}
 */
proto.api.RemoteMulticastQueueItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteMulticastGroupId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFCnt(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFPort(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.RemoteMulticastQueueItem} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.RemoteMulticastQueueItem.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.RemoteMulticastQueueItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.RemoteMulticastQueueItem.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getRemoteMulticastGroupId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getFCnt();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = this.getFPort();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = this.getData_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.RemoteMulticastQueueItem} The clone.
 */
proto.api.RemoteMulticastQueueItem.prototype.cloneMessage = function() {
  return /** @type {!proto.api.RemoteMulticastQueueItem} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string remote_multicast_group_id = 1;
 * @return {string}
 */
proto.api.RemoteMulticastQueueItem.prototype.getRemoteMulticastGroupId = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.api.RemoteMulticastQueueItem.prototype.setRemoteMulticastGroupId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional uint32 f_cnt = 2;
 * @return {number}
 */
proto.api.RemoteMulticastQueueItem.prototype.getFCnt = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.api.RemoteMulticastQueueItem.prototype.setFCnt = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional uint32 f_port = 3;
 * @return {number}
 */
proto.api.RemoteMulticastQueueItem.prototype.getFPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.api.RemoteMulticastQueueItem.prototype.setFPort = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional bytes data = 4;
 * @return {!(string|Uint8Array)}
 */
proto.api.RemoteMulticastQueueItem.prototype.getData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldProto3(this, 4, ""));
};


/**
 * optional bytes data = 4;
 * This is a type-conversion wrapper around `getData()`
 * @return {string}
 */
proto.api.RemoteMulticastQueueItem.prototype.getData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getData()));
};


/**
 * optional bytes data = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getData()`
 * @return {!Uint8Array}
 */
proto.api.RemoteMulticastQueueItem.prototype.getData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getData()));
};


/** @param {!(string|Uint8Array)} value  */
proto.api.RemoteMulticastQueueItem.prototype.setData = function(value) {
  jspb.Message.setField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.EnqueueRemoteMulticastQueueItemRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.EnqueueRemoteMulticastQueueItemRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.EnqueueRemoteMulticastQueueItemRequest.displayName = 'proto.api.EnqueueRemoteMulticastQueueItemRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.EnqueueRemoteMulticastQueueItemRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.EnqueueRemoteMulticastQueueItemRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.EnqueueRemoteMulticastQueueItemRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.EnqueueRemoteMulticastQueueItemRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    remoteMulticastQueueItem: (f = msg.getRemoteMulticastQueueItem()) && proto.api.RemoteMulticastQueueItem.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.EnqueueRemoteMulticastQueueItemRequest}
 */
proto.api.EnqueueRemoteMulticastQueueItemRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.EnqueueRemoteMulticastQueueItemRequest;
  return proto.api.EnqueueRemoteMulticastQueueItemRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.EnqueueRemoteMulticastQueueItemRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.EnqueueRemoteMulticastQueueItemRequest}
 */
proto.api.EnqueueRemoteMulticastQueueItemRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.RemoteMulticastQueueItem;
      reader.readMessage(value,proto.api.RemoteMulticastQueueItem.deserializeBinaryFromReader);
      msg.setRemoteMulticastQueueItem(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.EnqueueRemoteMulticastQueueItemRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.EnqueueRemoteMulticastQueueItemRequest.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.EnqueueRemoteMulticastQueueItemRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.EnqueueRemoteMulticastQueueItemRequest.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getRemoteMulticastQueueItem();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api.RemoteMulticastQueueItem.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.EnqueueRemoteMulticastQueueItemRequest} The clone.
 */
proto.api.EnqueueRemoteMulticastQueueItemRequest.prototype.cloneMessage = function() {
  return /** @type {!proto.api.EnqueueRemoteMulticastQueueItemRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional RemoteMulticastQueueItem remote_multicast_queue_item = 1;
 * @return {proto.api.RemoteMulticastQueueItem}
 */
proto.api.EnqueueRemoteMulticastQueueItemRequest.prototype.getRemoteMulticastQueueItem = function() {
  return /** @type{proto.api.RemoteMulticastQueueItem} */ (
    jspb.Message.getWrapperField(this, proto.api.RemoteMulticastQueueItem, 1));
};


/** @param {proto.api.RemoteMulticastQueueItem|undefined} value  */
proto.api.EnqueueRemoteMulticastQueueItemRequest.prototype.setRemoteMulticastQueueItem = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.EnqueueRemoteMulticastQueueItemRequest.prototype.clearRemoteMulticastQueueItem = function() {
  this.setRemoteMulticastQueueItem(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.api.EnqueueRemoteMulticastQueueItemRequest.prototype.hasRemoteMulticastQueueItem = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.EnqueueRemoteMulticastQueueItemResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.EnqueueRemoteMulticastQueueItemResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.EnqueueRemoteMulticastQueueItemResponse.displayName = 'proto.api.EnqueueRemoteMulticastQueueItemResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.EnqueueRemoteMulticastQueueItemResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.EnqueueRemoteMulticastQueueItemResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.EnqueueRemoteMulticastQueueItemResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.EnqueueRemoteMulticastQueueItemResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    fCnt: msg.getFCnt()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.EnqueueRemoteMulticastQueueItemResponse}
 */
proto.api.EnqueueRemoteMulticastQueueItemResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.EnqueueRemoteMulticastQueueItemResponse;
  return proto.api.EnqueueRemoteMulticastQueueItemResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.EnqueueRemoteMulticastQueueItemResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.EnqueueRemoteMulticastQueueItemResponse}
 */
proto.api.EnqueueRemoteMulticastQueueItemResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFCnt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.EnqueueRemoteMulticastQueueItemResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.EnqueueRemoteMulticastQueueItemResponse.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.EnqueueRemoteMulticastQueueItemResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.EnqueueRemoteMulticastQueueItemResponse.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getFCnt();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.EnqueueRemoteMulticastQueueItemResponse} The clone.
 */
proto.api.EnqueueRemoteMulticastQueueItemResponse.prototype.cloneMessage = function() {
  return /** @type {!proto.api.EnqueueRemoteMulticastQueueItemResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional uint32 f_cnt = 1;
 * @return {number}
 */
proto.api.EnqueueRemoteMulticastQueueItemResponse.prototype.getFCnt = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.api.EnqueueRemoteMulticastQueueItemResponse.prototype.setFCnt = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.FlushRemoteMulticastGroupQueueItemsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.FlushRemoteMulticastGroupQueueItemsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.FlushRemoteMulticastGroupQueueItemsRequest.displayName = 'proto.api.FlushRemoteMulticastGroupQueueItemsRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.FlushRemoteMulticastGroupQueueItemsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.FlushRemoteMulticastGroupQueueItemsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.FlushRemoteMulticastGroupQueueItemsRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.FlushRemoteMulticastGroupQueueItemsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    remoteMulticastGroupId: msg.getRemoteMulticastGroupId()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.FlushRemoteMulticastGroupQueueItemsRequest}
 */
proto.api.FlushRemoteMulticastGroupQueueItemsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.FlushRemoteMulticastGroupQueueItemsRequest;
  return proto.api.FlushRemoteMulticastGroupQueueItemsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.FlushRemoteMulticastGroupQueueItemsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.FlushRemoteMulticastGroupQueueItemsRequest}
 */
proto.api.FlushRemoteMulticastGroupQueueItemsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteMulticastGroupId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.FlushRemoteMulticastGroupQueueItemsRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.FlushRemoteMulticastGroupQueueItemsRequest.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.FlushRemoteMulticastGroupQueueItemsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.FlushRemoteMulticastGroupQueueItemsRequest.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getRemoteMulticastGroupId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.FlushRemoteMulticastGroupQueueItemsRequest} The clone.
 */
proto.api.FlushRemoteMulticastGroupQueueItemsRequest.prototype.cloneMessage = function() {
  return /** @type {!proto.api.FlushRemoteMulticastGroupQueueItemsRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string remote_multicast_group_id = 1;
 * @return {string}
 */
proto.api.FlushRemoteMulticastGroupQueueItemsRequest.prototype.getRemoteMulticastGroupId = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.api.FlushRemoteMulticastGroupQueueItemsRequest.prototype.setRemoteMulticastGroupId = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.ListRemoteMulticastGroupQueueItemsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.ListRemoteMulticastGroupQueueItemsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.ListRemoteMulticastGroupQueueItemsRequest.displayName = 'proto.api.ListRemoteMulticastGroupQueueItemsRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.ListRemoteMulticastGroupQueueItemsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.ListRemoteMulticastGroupQueueItemsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.ListRemoteMulticastGroupQueueItemsRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.ListRemoteMulticastGroupQueueItemsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    remoteMulticastGroupId: msg.getRemoteMulticastGroupId()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.ListRemoteMulticastGroupQueueItemsRequest}
 */
proto.api.ListRemoteMulticastGroupQueueItemsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.ListRemoteMulticastGroupQueueItemsRequest;
  return proto.api.ListRemoteMulticastGroupQueueItemsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.ListRemoteMulticastGroupQueueItemsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.ListRemoteMulticastGroupQueueItemsRequest}
 */
proto.api.ListRemoteMulticastGroupQueueItemsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteMulticastGroupId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.ListRemoteMulticastGroupQueueItemsRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.ListRemoteMulticastGroupQueueItemsRequest.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.ListRemoteMulticastGroupQueueItemsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.ListRemoteMulticastGroupQueueItemsRequest.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getRemoteMulticastGroupId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.ListRemoteMulticastGroupQueueItemsRequest} The clone.
 */
proto.api.ListRemoteMulticastGroupQueueItemsRequest.prototype.cloneMessage = function() {
  return /** @type {!proto.api.ListRemoteMulticastGroupQueueItemsRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string remote_multicast_group_id = 1;
 * @return {string}
 */
proto.api.ListRemoteMulticastGroupQueueItemsRequest.prototype.getRemoteMulticastGroupId = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.api.ListRemoteMulticastGroupQueueItemsRequest.prototype.setRemoteMulticastGroupId = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.ListRemoteMulticastGroupQueueItemsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.ListRemoteMulticastGroupQueueItemsResponse.repeatedFields_, null);
};
goog.inherits(proto.api.ListRemoteMulticastGroupQueueItemsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.ListRemoteMulticastGroupQueueItemsResponse.displayName = 'proto.api.ListRemoteMulticastGroupQueueItemsResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.ListRemoteMulticastGroupQueueItemsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.ListRemoteMulticastGroupQueueItemsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.ListRemoteMulticastGroupQueueItemsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.ListRemoteMulticastGroupQueueItemsResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.ListRemoteMulticastGroupQueueItemsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    remoteMulticastQueueItemsList: jspb.Message.toObjectList(msg.getRemoteMulticastQueueItemsList(),
    proto.api.RemoteMulticastQueueItem.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.ListRemoteMulticastGroupQueueItemsResponse}
 */
proto.api.ListRemoteMulticastGroupQueueItemsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.ListRemoteMulticastGroupQueueItemsResponse;
  return proto.api.ListRemoteMulticastGroupQueueItemsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.ListRemoteMulticastGroupQueueItemsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.ListRemoteMulticastGroupQueueItemsResponse}
 */
proto.api.ListRemoteMulticastGroupQueueItemsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.RemoteMulticastQueueItem;
      reader.readMessage(value,proto.api.RemoteMulticastQueueItem.deserializeBinaryFromReader);
      msg.getRemoteMulticastQueueItemsList().push(value);
      msg.setRemoteMulticastQueueItemsList(msg.getRemoteMulticastQueueItemsList());
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.ListRemoteMulticastGroupQueueItemsResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.ListRemoteMulticastGroupQueueItemsResponse.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.ListRemoteMulticastGroupQueueItemsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.ListRemoteMulticastGroupQueueItemsResponse.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getRemoteMulticastQueueItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.api.RemoteMulticastQueueItem.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.ListRemoteMulticastGroupQueueItemsResponse} The clone.
 */
proto.api.ListRemoteMulticastGroupQueueItemsResponse.prototype.cloneMessage = function() {
  return /** @type {!proto.api.ListRemoteMulticastGroupQueueItemsResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * repeated RemoteMulticastQueueItem remote_multicast_queue_items = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.api.RemoteMulticastQueueItem>}
 */
proto.api.ListRemoteMulticastGroupQueueItemsResponse.prototype.getRemoteMulticastQueueItemsList = function() {
  return /** @type{!Array.<!proto.api.RemoteMulticastQueueItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.RemoteMulticastQueueItem, 1));
};


/** @param {Array.<!proto.api.RemoteMulticastQueueItem>} value  */
proto.api.ListRemoteMulticastGroupQueueItemsResponse.prototype.setRemoteMulticastQueueItemsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


proto.api.ListRemoteMulticastGroupQueueItemsResponse.prototype.clearRemoteMulticastQueueItemsList = function() {
  this.setRemoteMulticastQueueItemsList([]);
};


goog.object.extend(exports, proto.api);
