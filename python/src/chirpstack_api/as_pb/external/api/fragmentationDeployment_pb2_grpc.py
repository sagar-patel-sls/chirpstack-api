# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from chirpstack_api.as_pb.external.api import fragmentationDeployment_pb2 as chirpstack__api_dot_as__pb_dot_external_dot_api_dot_fragmentationDeployment__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class FragmentationDeploymentServiceStub(object):
    """FragmentationDeploymentService is the service managing fragmentation.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Create = channel.unary_unary(
                '/api.FragmentationDeploymentService/Create',
                request_serializer=chirpstack__api_dot_as__pb_dot_external_dot_api_dot_fragmentationDeployment__pb2.FragmentationDeploymentRequest.SerializeToString,
                response_deserializer=chirpstack__api_dot_as__pb_dot_external_dot_api_dot_fragmentationDeployment__pb2.FragmentationDeploymentResponse.FromString,
                )
        self.Get = channel.unary_unary(
                '/api.FragmentationDeploymentService/Get',
                request_serializer=chirpstack__api_dot_as__pb_dot_external_dot_api_dot_fragmentationDeployment__pb2.GetFragmentationDeploymentRequest.SerializeToString,
                response_deserializer=chirpstack__api_dot_as__pb_dot_external_dot_api_dot_fragmentationDeployment__pb2.GetFragmentationDeploymentResponse.FromString,
                )
        self.Update = channel.unary_unary(
                '/api.FragmentationDeploymentService/Update',
                request_serializer=chirpstack__api_dot_as__pb_dot_external_dot_api_dot_fragmentationDeployment__pb2.UpdateFragmentationDeploymentRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.Delete = channel.unary_unary(
                '/api.FragmentationDeploymentService/Delete',
                request_serializer=chirpstack__api_dot_as__pb_dot_external_dot_api_dot_fragmentationDeployment__pb2.DeleteFragmentationDeploymentRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.List = channel.unary_unary(
                '/api.FragmentationDeploymentService/List',
                request_serializer=chirpstack__api_dot_as__pb_dot_external_dot_api_dot_fragmentationDeployment__pb2.ListFragmentationDeploymentRequest.SerializeToString,
                response_deserializer=chirpstack__api_dot_as__pb_dot_external_dot_api_dot_fragmentationDeployment__pb2.ListFragmentationDeploymentResponse.FromString,
                )


class FragmentationDeploymentServiceServicer(object):
    """FragmentationDeploymentService is the service managing fragmentation.
    """

    def Create(self, request, context):
        """Create creates the given fragmentation deployment for given DevEUI.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Get(self, request, context):
        """Get returns a fragmentation deployment given an ID.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Update(self, request, context):
        """Update updates the given fragmentation deployment.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Delete(self, request, context):
        """Delete deletes a fragmentation deployment given an ID.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def List(self, request, context):
        """List lists the available fragmentation deployment.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_FragmentationDeploymentServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Create': grpc.unary_unary_rpc_method_handler(
                    servicer.Create,
                    request_deserializer=chirpstack__api_dot_as__pb_dot_external_dot_api_dot_fragmentationDeployment__pb2.FragmentationDeploymentRequest.FromString,
                    response_serializer=chirpstack__api_dot_as__pb_dot_external_dot_api_dot_fragmentationDeployment__pb2.FragmentationDeploymentResponse.SerializeToString,
            ),
            'Get': grpc.unary_unary_rpc_method_handler(
                    servicer.Get,
                    request_deserializer=chirpstack__api_dot_as__pb_dot_external_dot_api_dot_fragmentationDeployment__pb2.GetFragmentationDeploymentRequest.FromString,
                    response_serializer=chirpstack__api_dot_as__pb_dot_external_dot_api_dot_fragmentationDeployment__pb2.GetFragmentationDeploymentResponse.SerializeToString,
            ),
            'Update': grpc.unary_unary_rpc_method_handler(
                    servicer.Update,
                    request_deserializer=chirpstack__api_dot_as__pb_dot_external_dot_api_dot_fragmentationDeployment__pb2.UpdateFragmentationDeploymentRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'Delete': grpc.unary_unary_rpc_method_handler(
                    servicer.Delete,
                    request_deserializer=chirpstack__api_dot_as__pb_dot_external_dot_api_dot_fragmentationDeployment__pb2.DeleteFragmentationDeploymentRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'List': grpc.unary_unary_rpc_method_handler(
                    servicer.List,
                    request_deserializer=chirpstack__api_dot_as__pb_dot_external_dot_api_dot_fragmentationDeployment__pb2.ListFragmentationDeploymentRequest.FromString,
                    response_serializer=chirpstack__api_dot_as__pb_dot_external_dot_api_dot_fragmentationDeployment__pb2.ListFragmentationDeploymentResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'api.FragmentationDeploymentService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class FragmentationDeploymentService(object):
    """FragmentationDeploymentService is the service managing fragmentation.
    """

    @staticmethod
    def Create(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.FragmentationDeploymentService/Create',
            chirpstack__api_dot_as__pb_dot_external_dot_api_dot_fragmentationDeployment__pb2.FragmentationDeploymentRequest.SerializeToString,
            chirpstack__api_dot_as__pb_dot_external_dot_api_dot_fragmentationDeployment__pb2.FragmentationDeploymentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.FragmentationDeploymentService/Get',
            chirpstack__api_dot_as__pb_dot_external_dot_api_dot_fragmentationDeployment__pb2.GetFragmentationDeploymentRequest.SerializeToString,
            chirpstack__api_dot_as__pb_dot_external_dot_api_dot_fragmentationDeployment__pb2.GetFragmentationDeploymentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Update(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.FragmentationDeploymentService/Update',
            chirpstack__api_dot_as__pb_dot_external_dot_api_dot_fragmentationDeployment__pb2.UpdateFragmentationDeploymentRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.FragmentationDeploymentService/Delete',
            chirpstack__api_dot_as__pb_dot_external_dot_api_dot_fragmentationDeployment__pb2.DeleteFragmentationDeploymentRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def List(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.FragmentationDeploymentService/List',
            chirpstack__api_dot_as__pb_dot_external_dot_api_dot_fragmentationDeployment__pb2.ListFragmentationDeploymentRequest.SerializeToString,
            chirpstack__api_dot_as__pb_dot_external_dot_api_dot_fragmentationDeployment__pb2.ListFragmentationDeploymentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
