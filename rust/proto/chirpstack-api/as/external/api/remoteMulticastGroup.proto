syntax = "proto3";

package api;

option go_package = "github.com/brocaar/chirpstack-api/go/v3/as/external/api";

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/empty.proto";
import "as/external/api/device.proto";
import "as/external/api/multicastGroup.proto";
import "as/external/api/fuotaDeployment.proto";

// RemoteMulticastGroupService is the service managing multicast-groups.
service RemoteMulticastGroupService {
  // Create creates the given remote multicast-group.
  rpc Create(CreateRemoteMulticastGroupRequest) returns (CreateRemoteMulticastGroupResponse) {
    option (google.api.http) = {
      post : "/api/remote-multicast-groups"
      body : "*"
    };
  }

  // Get returns a remote multicast-group given an ID.
  rpc Get(GetRemoteMulticastGroupRequest) returns (GetRemoteMulticastGroupResponse) {
    option (google.api.http) = {
      get : "/api/remote-multicast-groups/{id}"
    };
  }

  // Update updates the given remote multicast-group.
  rpc Update(UpdateRemoteMulticastGroupRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      put : "/api/remote-multicast-groups/{remote_multicast_group.id}"
      body : "*"
    };
  }

  // Delete deletes a remote multicast-group given an ID.
  rpc Delete(DeleteRemoteMulticastGroupRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete : "/api/remote-multicast-groups/{id}"
    };
  }

  // List lists the available remote multicast-groups.
  rpc List(ListRemoteMulticastGroupRequest) returns (ListRemoteMulticastGroupResponse) {
    option (google.api.http) = {
      get : "/api/remote-multicast-groups"
    };
  }

  // AddDevice adds the given devices to the remote multicast-group.
  rpc AddDevice(AddDeviceToRemoteMulticastGroupRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post : "/api/remote-multicast-groups/{remote_multicast_group_id}/devices"
      body : "*"
    };
  }

  // ResetDevice Restart the remote multicast process of given device.
  rpc ResetDevice(ResetRemoteMulticastDeviceRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      put : "/api/remote-multicast-groups/{remote_multicast_group_id}/devices/{dev_eui}/reset"
    };
  }

  // RemoveDevice removes the given device from the remote multicast-group.
  rpc RemoveDevice(RemoveDeviceFromRemoteMulticastGroupRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete : "/api/remote-multicast-groups/{remote_multicast_group_id}/devices/{dev_eui}"
    };
  }

  // ListDevicesForRemoteMulticast Lists the available pending devices for joining to
  // remote multicast-group for given application id.
  rpc ListDevicesForRemoteMulticast(ListRemoteMulticastDeviceRequest) returns (ListRemoteMulticastDeviceResponse) {
    option (google.api.http) = {
      get : "/api/remote-multicast-groups/{remote_multicast_group_id}/application/{application_id}/devices"
    };
  }

  // GetDevicesList Lists the available devices in remote multicast-groups.
  rpc GetDevicesList(ListRemoteMulticastDeviceRequest) returns (ListRemoteMulticastDevicesResponse) {
    option (google.api.http) = {
      get : "/api/remote-multicast-groups/{remote_multicast_group_id}/devices"
    };
  }

  // GetDeploymentDevice returns the deployment device.
  rpc GetDeploymentDevice(GetRemoteMulticastDeploymentDeviceRequest) returns (GetRemoteMulticastDeploymentDeviceResponse) {
    option (google.api.http) = {
      get : "/api/remote-multicast-groups/{remote_multicast_group_id}/devices/{dev_eui}"
    };
  }

  // Enqueue adds the given item to the remote multicast-queue.
  rpc Enqueue(EnqueueRemoteMulticastQueueItemRequest) returns (EnqueueRemoteMulticastQueueItemResponse) {
    option (google.api.http) = {
      post : "/api/remote-multicast-groups/{remote_multicast_queue_item.remote_multicast_group_id}/queue"
      body : "*"
    };
  }

  // FlushQueue flushes the remote multicast-group queue.
  rpc FlushQueue(FlushRemoteMulticastGroupQueueItemsRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete : "/api/remote-multicast-groups/{remote_multicast_group_id}/queue"
    };
  }

  // ListQueue lists the items in the remote multicast-group queue.
  rpc ListQueue(ListRemoteMulticastGroupQueueItemsRequest) returns (ListRemoteMulticastGroupQueueItemsResponse) {
    option (google.api.http) = {
      get : "/api/remote-multicast-groups/{remote_multicast_group_id}/queue"
    };
  }
}

message RemoteMulticastGroup {
  // ID (string formatted UUID).
  // This will be generated automatically on create.
  string id = 1;

  // Remote Multicast-group name.
  string name = 2;

  // Service-profile ID.
  // This value will be automatically set on create.
  // After creation, this can not be updated.
  string service_profile_id = 3 [ json_name = "serviceProfileID" ];

  // Remote Multicast type.
  MulticastGroupType group_type = 4;

  // Data-rate.
  uint32 dr = 5;

  // Frequency (Hz).
  uint32 frequency = 6;

  // Ping-slot period.
  // Mandatory for Class-B remote multicast groups.
  uint32 ping_slot_period = 7;

  // Multicast address (HEX encoded DevAddr).
  // This value will be automatically set on create.
  string mc_addr = 8;

  // Multicast network session key (HEX encoded AES128 key).
  // This value will be automatically set on create.
  string mc_nwk_s_key = 9;

  // Multicast application session key (HEX encoded AES128 key).
  // This value will be automatically set on create.
  string mc_app_s_key = 10;

  // Frame-counter.
  // This value will be automatically set on create.
  uint32 f_cnt = 11;

  // Remote Multicast Deployment state.
  // This value will be automatically set on create.
  string state = 12;

  // Unicast time-out.
  // Set this to the value in which you at least expect an uplink frame from the
  // device. The Remote Multicast deployment engine will wait at least for the
  // given time before proceeding with the next steps.
  google.protobuf.Duration unicast_timeout = 13;

  // Next step after.
  // This value will be automatically set on create.
  google.protobuf.Timestamp next_step_after = 14;
}

message RemoteMulticastDeploymentDevice {
  // Remote multicast ID (string formatted UUID).
  // This will be generated automatically on create.
  string id = 1;

  // Device EUI (HEX encoded) (optional).
  string dev_eui = 2 [ json_name = "devEUI" ];

  string device_name = 3;

  // Application ID.
  int64 application_id = 4 [json_name = "applicationID"];

  string application_name = 5;

  // The last time the application-server received any data from the device,
  // or an empty string when the device never sent any data.
  google.protobuf.Timestamp last_seen_at = 6 [json_name = "lastSeenAt"];

  // Mc Group id
  // This value will be automatically set on create.
  // Between 0 to 3
  uint32 mc_group_id = 7;

  // Created at timestamp.
  google.protobuf.Timestamp created_at = 8;

  // Last update timestamp.
  google.protobuf.Timestamp updated_at = 9;

  // Remote Multicast Deployment Device state.
  // This value will be automatically set on create.
  FUOTADeploymentDeviceState state = 10;

  // Error message (in case of error state).
  string error_message = 11;
}

message RemoteMulticastGroupListItem {
  // ID (string formatted UUID).
  string id = 1;

  // Remote Multicast-group name.
  string name = 2;

  // Service-profile ID (string formatted UUID).
  string service_profile_id = 3 [ json_name = "serviceProfileID" ];

  // Service-profile name.
  string service_profile_name = 4;

  // Deployment state.
  string state = 5;
}

message CreateRemoteMulticastGroupRequest {
  // Remote Multicast-group object to create.
  RemoteMulticastGroup remote_multicast_group = 1;
}

message CreateRemoteMulticastGroupResponse {
  // ID of created group (string formatted UUID).
  string id = 1;
}

message GetRemoteMulticastGroupRequest {
  // ID (string formatted UUID).
  string id = 1;
}

message GetRemoteMulticastGroupResponse {
  // Remote Multicast-group object.
  RemoteMulticastGroup remote_multicast_group = 1;

  // Created at timestamp.
  google.protobuf.Timestamp created_at = 2;

  // Last update timestamp.
  google.protobuf.Timestamp updated_at = 3;
}

message ListRemoteMulticastGroupRequest {
  // Max number of items to return.
  int64 limit = 1;

  // Offset in the result-set (for pagination).
  int64 offset = 2;

  // Organization id to filter on.
  int64 organization_id = 3 [ json_name = "organizationID" ];

  // Service-profile ID to filter on.
  string service_profile_id = 4 [ json_name = "serviceProfileID" ];

  // Search can be used to search on the remote multicast-group name.
  string search = 5;
}

message ListRemoteMulticastGroupResponse {
  // Total number of remote multicast-groups.
  int64 total_count = 1;

  repeated RemoteMulticastGroupListItem result = 2;
}

message UpdateRemoteMulticastGroupRequest {
  // Remote Multicast-group object to update.
  RemoteMulticastGroup remote_multicast_group = 1;
}

message DeleteRemoteMulticastGroupRequest {
  // ID (string formatted UUID).
  string id = 1;
}

message AddDeviceToRemoteMulticastGroupRequest {
  // Remote Multicast deployment ID (string formatted UUID).
  string remote_multicast_group_id = 1 [ json_name = "remoteMulticastDeploymentID" ];

  // Device EUIs (HEX encoded string).
  // Note that the devices must be under the same service-profile as the
  // remote multicast-group.
  repeated string dev_euis = 2 [ json_name = "devEUIs" ];
}

message RemoveDeviceFromRemoteMulticastGroupRequest {
  // Remote Multicast deployment ID (string formatted UUID).
  string remote_multicast_group_id = 1 [ json_name = "remoteMulticastDeploymentID" ];

  // Device EUI (HEX encoded string).
  string dev_eui = 2 [ json_name = "devEUI" ];
}

message ListRemoteMulticastDeviceRequest {
  // Max number of remote multicast devices to return in the result-set.
  int64 limit = 1;

  // Offset in the result-set (for pagination).
  int64 offset = 2;

  // Remote Multicast deployment ID (string formatted UUID).
  string remote_multicast_group_id = 3 [ json_name = "remoteMulticastDeploymentID" ];

  // Application ID to filter on.
  int64 application_id = 4 [ json_name = "applicationID" ];

  // Search on name or DevEUI.
  string search = 5;
}

message ListRemoteMulticastDeviceResponse {
  // Total number of devices available within the result-set.
  int64 total_count = 1;

  // Devices within this result-set.
  repeated DeviceListItem result = 2;
}

message ResetRemoteMulticastDeviceRequest {
  // Device EUI (HEX encoded).
  string dev_eui = 1 [ json_name = "devEUI" ];

  // ID of the deployment (string formatted UUID).
  // This value will be automatically assigned on create.
  string remote_multicast_group_id = 2 [ json_name = "remoteMulticastDeploymentID" ];
}

message ListRemoteMulticastDevicesResponse {
  // Total number of remote multicast-groups.
  int64 total_count = 1;

  repeated RemoteMulticastDeploymentDevice result = 2;
}

message GetRemoteMulticastDeploymentDeviceRequest {
  // ID of the deployment (string formatted UUID).
  // This value will be automatically assigned on create.
  string remote_multicast_group_id = 1 [ json_name = "remoteMulticastDeploymentID" ];

  // Device EUI (HEX encoded).
  string dev_eui = 2 [ json_name = "devEUI" ];
}

message GetRemoteMulticastDeploymentDeviceResponse {
  RemoteMulticastDeploymentDevice deployment_device = 1;
}

message RemoteMulticastQueueItem {
  // Remote Multicast-group ID (string formatted UUID).
  string remote_multicast_group_id = 1 [ json_name = "remoteMulticastGroupID" ];

  // Downlink frame-counter.
  // This will be automatically set on enqueue.
  uint32 f_cnt = 2;

  // FPort used (must be > 0).
  uint32 f_port = 3;

  // Base64 encoded data.
  bytes data = 4;
}

message EnqueueRemoteMulticastQueueItemRequest {
  // Remote Multicast queue-item object to enqueue.
  RemoteMulticastQueueItem remote_multicast_queue_item = 1;
}

message EnqueueRemoteMulticastQueueItemResponse {
  // Frame-counter for the enqueued payload.
  uint32 f_cnt = 1;
}

message FlushRemoteMulticastGroupQueueItemsRequest {
  // Remote Multicast-group ID (string formatted UUID).
  string remote_multicast_group_id = 1 [ json_name = "remoteMulticastGroupID" ];
}

message ListRemoteMulticastGroupQueueItemsRequest {
  // Remote Multicast-group ID (string formatted UUID).
  string remote_multicast_group_id = 1 [ json_name = "remoteMulticastGroupID" ];
}

message ListRemoteMulticastGroupQueueItemsResponse {
  repeated RemoteMulticastQueueItem remote_multicast_queue_items = 1;
}